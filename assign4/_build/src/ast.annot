"src/ast.ml" 3 11 27 "src/ast.ml" 3 11 33
type(
  variable -> variable -> int
)
type(
  variable -> variable -> int
)
ident(
  int_ref Core.compare_string "src/std_internal.ml" 134 5598 5609 "src/std_internal.ml" 134 5598 5673
)
type(
  variable -> Sexp.t
)
type(
  variable -> Sexp.t
)
ident(
  int_ref Core.sexp_of_string "src/std_internal.ml" 134 5598 5609 "src/std_internal.ml" 134 5598 5673
)
type(
  Sexp.t -> variable
)
type(
  Sexp.t -> variable
)
ident(
  int_ref Core.string_of_sexp "src/std_internal.ml" 134 5598 5609 "src/std_internal.ml" 134 5598 5673
)
type(
  variable -> Sexp.t
)
type(
  variable -> Sexp.t
)
ident(
  int_ref Core.sexp_of_string "src/std_internal.ml" 134 5598 5609 "src/std_internal.ml" 134 5598 5673
)
"src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> variable -> int
)
type(
  variable -> variable -> int
)
ident(
  def compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 1 0 -1
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
type(
  variable -> Sexp.t
)
ident(
  def sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 1 0 -1
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
type(
  Sexp.t -> variable
)
ident(
  def variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 1 0 -1
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
type(
  variable -> Sexp.t
)
ident(
  def sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 1 0 -1
)
type(
  variable -> unit
)
type(
  unit
)
type(
  variable
)
type(
  variable -> unit
)
"src/ast.ml" 8 103 109 "src/ast.ml" 8 103 112
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
"src/ast.ml" 8 103 107 "src/ast.ml" 8 103 112
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
"src/ast.ml" 9 113 119 "src/ast.ml" 9 113 123
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
"src/ast.ml" 9 113 117 "src/ast.ml" 9 113 123
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
"src/ast.ml" 10 124 130 "src/ast.ml" 10 124 134
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
"src/ast.ml" 10 124 128 "src/ast.ml" 10 124 134
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
"src/ast.ml" 11 135 141 "src/ast.ml" 11 135 144
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  variable
)
type(
  t
)
type(
  variable
)
"src/ast.ml" 11 135 148 "src/ast.ml" 11 135 156
call(
  tail
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
call(
  stack
)
call(
  stack
)
type(
  int
)
type(
  int
)
type(
  variable
)
ident(
  int_ref _b__006_ "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  variable
)
ident(
  int_ref _a__005_ "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  t * t
)
type(
  t
)
type(
  variable
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  variable
)
type(
  t * t
)
type(
  t
)
type(
  variable
)
ident(
  def _b__006_ "src/ast.ml" 11 135 148 "src/ast.ml" 11 135 156
)
type(
  t
)
type(
  variable
)
ident(
  def _a__005_ "src/ast.ml" 11 135 148 "src/ast.ml" 11 135 156
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 11 135 139 "src/ast.ml" 11 135 156
)
"src/ast.ml" 12 157 163 "src/ast.ml" 12 157 165
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Fn
)
type(
  t
)
type(
  t.Fn
)
"src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_arg "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  t
)
ident(
  def v_arg "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def arg_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def arg_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_arg "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  t
)
ident(
  def v_arg "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
"src/ast.ml" 12 157 176 "src/ast.ml" 12 157 177
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 12 157 176 "src/ast.ml" 12 157 177
)
type(
  int
)
ident(
  def n "src/ast.ml" 12 157 176 "src/ast.ml" 12 157 177
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 12 157 170 "src/ast.ml" 12 157 179
type(
  t
)
type(
  t
)
"src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_ret "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t
)
ident(
  def v_ret "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref ret_field "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def ret_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref ret_field "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref ret_field "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref ret_field "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def ret_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_ret "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t
)
ident(
  def v_ret "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
"src/ast.ml" 12 157 186 "src/ast.ml" 12 157 187
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 12 157 180 "src/ast.ml" 12 157 187
type(
  t
)
type(
  t
)
"src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
type(
  int
)
type(
  int
)
type(
  t.Fn
)
ident(
  int_ref _b__008_ "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  t.Fn
)
ident(
  int_ref _a__007_ "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  t.Fn
)
ident(
  int_ref _b__008_ "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  t.Fn
)
ident(
  int_ref _a__007_ "src/ast.ml" 12 157 161 "src/ast.ml" 12 157 188
)
type(
  t * t
)
type(
  t
)
type(
  t.Fn
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Fn
)
type(
  t * t
)
type(
  t
)
type(
  t.Fn
)
ident(
  def _b__008_ "src/ast.ml" 12 157 176 "src/ast.ml" 12 157 177
)
type(
  t
)
type(
  t.Fn
)
ident(
  def _a__007_ "src/ast.ml" 12 157 176 "src/ast.ml" 12 157 177
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'a list
)
type(
  'a list
)
ident(
  def bnds "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t
)
type(
  t.Fn
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'b list
)
type(
  'b list
)
ident(
  def bnds "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t
)
type(
  t.Fn
)
"src/ast.ml" 13 189 195 "src/ast.ml" 13 189 202
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Product
)
type(
  t
)
type(
  t.Product
)
"src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
"src/ast.ml" 13 189 214 "src/ast.ml" 13 189 215
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 13 189 214 "src/ast.ml" 13 189 215
)
type(
  int
)
ident(
  def n "src/ast.ml" 13 189 214 "src/ast.ml" 13 189 215
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 13 189 207 "src/ast.ml" 13 189 217
type(
  t
)
type(
  t
)
"src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
"src/ast.ml" 13 189 226 "src/ast.ml" 13 189 227
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 13 189 218 "src/ast.ml" 13 189 227
type(
  t
)
type(
  t
)
"src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
type(
  int
)
type(
  int
)
type(
  t.Product
)
ident(
  int_ref _b__010_ "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  t.Product
)
ident(
  int_ref _a__009_ "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  t.Product
)
ident(
  int_ref _b__010_ "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  t.Product
)
ident(
  int_ref _a__009_ "src/ast.ml" 13 189 193 "src/ast.ml" 13 189 228
)
type(
  t * t
)
type(
  t
)
type(
  t.Product
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Product
)
type(
  t * t
)
type(
  t
)
type(
  t.Product
)
ident(
  def _b__010_ "src/ast.ml" 13 189 214 "src/ast.ml" 13 189 215
)
type(
  t
)
type(
  t.Product
)
ident(
  def _a__009_ "src/ast.ml" 13 189 214 "src/ast.ml" 13 189 215
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'c list
)
type(
  'c list
)
ident(
  def bnds "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t
)
type(
  t.Product
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'd list
)
type(
  'd list
)
ident(
  def bnds "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t
)
type(
  t.Product
)
"src/ast.ml" 14 229 235 "src/ast.ml" 14 229 238
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Sum
)
type(
  t
)
type(
  t.Sum
)
"src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
"src/ast.ml" 14 229 250 "src/ast.ml" 14 229 251
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 14 229 250 "src/ast.ml" 14 229 251
)
type(
  int
)
ident(
  def n "src/ast.ml" 14 229 250 "src/ast.ml" 14 229 251
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 14 229 243 "src/ast.ml" 14 229 253
type(
  t
)
type(
  t
)
"src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
"src/ast.ml" 14 229 262 "src/ast.ml" 14 229 263
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 14 229 254 "src/ast.ml" 14 229 263
type(
  t
)
type(
  t
)
"src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
type(
  int
)
type(
  int
)
type(
  t.Sum
)
ident(
  int_ref _b__012_ "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  t.Sum
)
ident(
  int_ref _a__011_ "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  t.Sum
)
ident(
  int_ref _b__012_ "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  t.Sum
)
ident(
  int_ref _a__011_ "src/ast.ml" 14 229 233 "src/ast.ml" 14 229 264
)
type(
  t * t
)
type(
  t
)
type(
  t.Sum
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Sum
)
type(
  t * t
)
type(
  t
)
type(
  t.Sum
)
ident(
  def _b__012_ "src/ast.ml" 14 229 250 "src/ast.ml" 14 229 251
)
type(
  t
)
type(
  t.Sum
)
ident(
  def _a__011_ "src/ast.ml" 14 229 250 "src/ast.ml" 14 229 251
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'e list
)
type(
  'e list
)
ident(
  def bnds "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t
)
type(
  t.Sum
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'f list
)
type(
  'f list
)
ident(
  def bnds "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t
)
type(
  t.Sum
)
"src/ast.ml" 15 265 271 "src/ast.ml" 15 265 274
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Rec
)
type(
  t
)
type(
  t.Rec
)
"src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def a_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def a_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
"src/ast.ml" 15 265 283 "src/ast.ml" 15 265 291
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 15 265 283 "src/ast.ml" 15 265 291
)
type(
  int
)
ident(
  def n "src/ast.ml" 15 265 283 "src/ast.ml" 15 265 291
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 15 265 279 "src/ast.ml" 15 265 293
type(
  variable
)
type(
  variable
)
"src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_tau "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  t
)
ident(
  def v_tau "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def tau_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def tau_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_tau "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  t
)
ident(
  def v_tau "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
"src/ast.ml" 15 265 300 "src/ast.ml" 15 265 301
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 15 265 294 "src/ast.ml" 15 265 301
type(
  t
)
type(
  t
)
"src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
type(
  int
)
type(
  int
)
type(
  t.Rec
)
ident(
  int_ref _b__014_ "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  t.Rec
)
ident(
  int_ref _a__013_ "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  t.Rec
)
ident(
  int_ref _b__014_ "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  t.Rec
)
ident(
  int_ref _a__013_ "src/ast.ml" 15 265 269 "src/ast.ml" 15 265 302
)
type(
  t * t
)
type(
  t
)
type(
  t.Rec
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Rec
)
type(
  t * t
)
type(
  t
)
type(
  t.Rec
)
ident(
  def _b__014_ "src/ast.ml" 15 265 283 "src/ast.ml" 15 265 291
)
type(
  t
)
type(
  t.Rec
)
ident(
  def _a__013_ "src/ast.ml" 15 265 283 "src/ast.ml" 15 265 291
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'g list
)
type(
  'g list
)
ident(
  def bnds "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t
)
type(
  t.Rec
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'h list
)
type(
  'h list
)
ident(
  def bnds "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  t
)
type(
  t.Rec
)
"src/ast.ml" 16 303 309 "src/ast.ml" 16 303 315
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Forall
)
type(
  t
)
type(
  t.Forall
)
"src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def a_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def a_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
"src/ast.ml" 16 303 324 "src/ast.ml" 16 303 332
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 16 303 324 "src/ast.ml" 16 303 332
)
type(
  int
)
ident(
  def n "src/ast.ml" 16 303 324 "src/ast.ml" 16 303 332
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 16 303 320 "src/ast.ml" 16 303 334
type(
  variable
)
type(
  variable
)
"src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_tau "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  t
)
ident(
  def v_tau "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def tau_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def tau_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_tau "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  t
)
ident(
  def v_tau "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
"src/ast.ml" 16 303 341 "src/ast.ml" 16 303 342
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 16 303 335 "src/ast.ml" 16 303 342
type(
  t
)
type(
  t
)
"src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
type(
  int
)
type(
  int
)
type(
  t.Forall
)
ident(
  int_ref _b__016_ "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  t.Forall
)
ident(
  int_ref _a__015_ "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  t.Forall
)
ident(
  int_ref _b__016_ "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  t.Forall
)
ident(
  int_ref _a__015_ "src/ast.ml" 16 303 307 "src/ast.ml" 16 303 343
)
type(
  t * t
)
type(
  t
)
type(
  t.Forall
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Forall
)
type(
  t * t
)
type(
  t
)
type(
  t.Forall
)
ident(
  def _b__016_ "src/ast.ml" 16 303 324 "src/ast.ml" 16 303 332
)
type(
  t
)
type(
  t.Forall
)
ident(
  def _a__015_ "src/ast.ml" 16 303 324 "src/ast.ml" 16 303 332
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'i list
)
type(
  'i list
)
ident(
  def bnds "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t
)
type(
  t.Forall
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'j list
)
type(
  'j list
)
ident(
  def bnds "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  t
)
type(
  t.Forall
)
"src/ast.ml" 17 344 350 "src/ast.ml" 17 344 356
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Exists
)
type(
  t
)
type(
  t.Exists
)
"src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def a_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def a_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
"src/ast.ml" 17 344 365 "src/ast.ml" 17 344 373
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 17 344 365 "src/ast.ml" 17 344 373
)
type(
  int
)
ident(
  def n "src/ast.ml" 17 344 365 "src/ast.ml" 17 344 373
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 17 344 361 "src/ast.ml" 17 344 375
type(
  variable
)
type(
  variable
)
"src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_tau "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  t
)
ident(
  def v_tau "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def tau_value "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def tau_field "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_tau "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  t
)
ident(
  def v_tau "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
"src/ast.ml" 17 344 382 "src/ast.ml" 17 344 383
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 17 344 376 "src/ast.ml" 17 344 383
type(
  t
)
type(
  t
)
"src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
type(
  t.Exists
)
ident(
  int_ref _b__018_ "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  t.Exists
)
ident(
  int_ref _a__017_ "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  t.Exists
)
ident(
  int_ref _b__018_ "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  t.Exists
)
ident(
  int_ref _a__017_ "src/ast.ml" 17 344 348 "src/ast.ml" 17 344 384
)
type(
  t * t
)
type(
  t
)
type(
  t.Exists
)
ident(
  def _b__018_ "src/ast.ml" 17 344 365 "src/ast.ml" 17 344 373
)
type(
  t
)
type(
  t.Exists
)
ident(
  def _a__017_ "src/ast.ml" 17 344 365 "src/ast.ml" 17 344 373
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'k list
)
type(
  'k list
)
ident(
  def bnds "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t
)
type(
  t.Exists
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'l list
)
type(
  'l list
)
ident(
  def bnds "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  t
)
type(
  t.Exists
)
"src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> t -> int
)
type(
  t -> t -> int
)
type(
  t -> t -> int
)
type(
  t -> int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
ident(
  int_ref b__004_ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref a__003_ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  bool
)
type(
  t
)
ident(
  int_ref b__004_ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref a__003_ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> t -> bool
)
ident(
  int_ref Ppx_compare_lib.phys_equal "src/ppx_compare_lib.mli" 4 113 113 "src/ppx_compare_lib.mli" 4 113 146
)
type(
  t
)
ident(
  def b__004_ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def a__003_ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> t -> int
)
ident(
  def compare "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
ident(
  def sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
type(
  Sexp.t -> t
)
type(
  Sexp.t -> t
)
type(
  Sexp.t -> t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.unexpected_stag "sexp_conv_error.ml" 36 962 966 "sexp_conv_error.ml" 36 962 981
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.empty_list_invalid_sum "sexp_conv_error.ml" 33 849 853 "sexp_conv_error.ml" 33 849 875
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.nested_list_invalid_sum "sexp_conv_error.ml" 30 736 740 "sexp_conv_error.ml" 30 736 763
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Exists
)
type(
  t
)
ident(
  int_ref tau_value "src/ast.ml" 17 344 376 "src/ast.ml" 17 344 379
)
type(
  variable
)
ident(
  int_ref a_value "src/ast.ml" 17 344 361 "src/ast.ml" 17 344 362
)
type(
  t
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Forall
)
type(
  t
)
ident(
  int_ref tau_value "src/ast.ml" 16 303 335 "src/ast.ml" 16 303 338
)
type(
  variable
)
ident(
  int_ref a_value "src/ast.ml" 16 303 320 "src/ast.ml" 16 303 321
)
type(
  t
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Rec
)
type(
  t
)
ident(
  int_ref tau_value "src/ast.ml" 15 265 294 "src/ast.ml" 15 265 297
)
type(
  variable
)
ident(
  int_ref a_value "src/ast.ml" 15 265 279 "src/ast.ml" 15 265 280
)
type(
  t
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Sum
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 14 229 254 "src/ast.ml" 14 229 259
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 14 229 243 "src/ast.ml" 14 229 247
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Product
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 13 189 218 "src/ast.ml" 13 189 223
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 13 189 207 "src/ast.ml" 13 189 211
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Fn
)
type(
  t
)
ident(
  int_ref ret_value "src/ast.ml" 12 157 180 "src/ast.ml" 12 157 183
)
type(
  t
)
ident(
  int_ref arg_value "src/ast.ml" 12 157 170 "src/ast.ml" 12 157 173
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_incorrect_n_args "sexp_conv_error.ml" 21 465 469 "sexp_conv_error.ml" 21 465 490
)
type(
  t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t list
)
ident(
  int_ref sexp_args "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def _sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def sexp_args "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
ident(
  def _tp_loc "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> t
)
ident(
  def t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
ident(
  def sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  (variable * int) list
)
ident(
  int_ref descriptions "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
ident(
  def descriptions "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> variable
)
ident(
  int_ref to_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> variable
)
type(
  t -> variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  t -> variable
)
ident(
  def to_name "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> int
)
ident(
  int_ref to_rank "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t -> int
)
type(
  t -> int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t -> int
)
ident(
  def to_rank "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t ->
  num:(t Variantslib.Variant.t -> 'm) ->
  bool:(t Variantslib.Variant.t -> 'm) ->
  unit:(t Variantslib.Variant.t -> 'm) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'm) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'm) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'm) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'm) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'm) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'm) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'm) ->
  'm
)
ident(
  int_ref map "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t ->
  num:(t Variantslib.Variant.t -> 'm) ->
  bool:(t Variantslib.Variant.t -> 'm) ->
  unit:(t Variantslib.Variant.t -> 'm) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'm) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'm) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'm) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'm) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'm) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'm) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'm) ->
  'm
)
type(
  t ->
  num:(t Variantslib.Variant.t -> 'n) ->
  bool:(t Variantslib.Variant.t -> 'n) ->
  unit:(t Variantslib.Variant.t -> 'n) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  num:(t Variantslib.Variant.t -> 'n) ->
  bool:(t Variantslib.Variant.t -> 'n) ->
  unit:(t Variantslib.Variant.t -> 'n) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  bool:(t Variantslib.Variant.t -> 'n) ->
  unit:(t Variantslib.Variant.t -> 'n) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  unit:(t Variantslib.Variant.t -> 'n) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
type(
  'n
)
type(
  'n
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t ->
  a:variable -> tau:t -> 'n
)
ident(
  int_ref exists_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t ->
  a:variable -> tau:t -> 'n
)
ident(
  int_ref forall_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t ->
  a:variable -> tau:t -> 'n
)
ident(
  int_ref rec_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n
)
ident(
  int_ref sum_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n
)
ident(
  int_ref product_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n
)
ident(
  int_ref fn_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t -> variable -> 'n
)
ident(
  int_ref var_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> 'n
)
ident(
  int_ref unit_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> 'n
)
ident(
  int_ref bool_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'n
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> 'n
)
ident(
  int_ref num_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t.Exists
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t.Forall
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t.Rec
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t.Sum
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t.Product
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t.Fn
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  int_ref t__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t ->
  a:variable -> tau:t -> 'n
)
ident(
  def exists_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t ->
  a:variable -> tau:t -> 'n
)
ident(
  def forall_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t ->
  a:variable -> tau:t -> 'n
)
ident(
  def rec_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n
)
ident(
  def sum_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n
)
ident(
  def product_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n
)
ident(
  def fn_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t -> variable -> 'n
)
ident(
  def var_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> 'n
)
ident(
  def unit_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> 'n
)
ident(
  def bool_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> 'n
)
ident(
  def num_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def t__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t ->
  num:(t Variantslib.Variant.t -> 'n) ->
  bool:(t Variantslib.Variant.t -> 'n) ->
  unit:(t Variantslib.Variant.t -> 'n) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> arg:t -> ret:t -> 'n) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t ->
           left:t -> right:t -> 'n) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
       a:variable -> tau:t -> 'n) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t ->
          a:variable -> tau:t -> 'n) ->
  'n
)
ident(
  def map "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  num:(t Variantslib.Variant.t -> unit) ->
  bool:(t Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
ident(
  int_ref iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  num:(t Variantslib.Variant.t -> unit) ->
  bool:(t Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  num:(t Variantslib.Variant.t -> unit) ->
  bool:(t Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  bool:(t Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  unit:(t Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref exists_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref forall_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref rec_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref sum_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref product_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref fn_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref var_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  int_ref unit_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  int_ref bool_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  unit
)
type(
  unit
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  int_ref num_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def exists_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def forall_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def rec_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def sum_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def product_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def fn_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t -> unit
)
ident(
  def var_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  def unit_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  def bool_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  def num_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  num:(t Variantslib.Variant.t -> unit) ->
  bool:(t Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  fn:((arg:t -> ret:t -> t) Variantslib.Variant.t -> unit) ->
  product:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  sum:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  rec:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  forall:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) ->
  exists:((a:variable -> tau:t -> t) Variantslib.Variant.t -> unit) -> unit
)
ident(
  def iter "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  init:'o ->
  num:('o -> t Variantslib.Variant.t -> 'p) ->
  bool:('p -> t Variantslib.Variant.t -> 'q) ->
  unit:('q -> t Variantslib.Variant.t -> 'r) ->
  var:('r -> (variable -> t) Variantslib.Variant.t -> 's) ->
  fn:('s -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 't) ->
  product:('t -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u) ->
  sum:('u -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'v) ->
  rec:('v -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'w) ->
  forall:('w -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'x) ->
  exists:('x -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'y) -> 'y
)
ident(
  int_ref fold "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  init:'o ->
  num:('o -> t Variantslib.Variant.t -> 'p) ->
  bool:('p -> t Variantslib.Variant.t -> 'q) ->
  unit:('q -> t Variantslib.Variant.t -> 'r) ->
  var:('r -> (variable -> t) Variantslib.Variant.t -> 's) ->
  fn:('s -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 't) ->
  product:('t -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u) ->
  sum:('u -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'v) ->
  rec:('v -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'w) ->
  forall:('w -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'x) ->
  exists:('x -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'y) -> 'y
)
type(
  init:'z ->
  num:('z -> t Variantslib.Variant.t -> 'a1) ->
  bool:('a1 -> t Variantslib.Variant.t -> 'b1) ->
  unit:('b1 -> t Variantslib.Variant.t -> 'c1) ->
  var:('c1 -> (variable -> t) Variantslib.Variant.t -> 'd1) ->
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  num:('z -> t Variantslib.Variant.t -> 'a1) ->
  bool:('a1 -> t Variantslib.Variant.t -> 'b1) ->
  unit:('b1 -> t Variantslib.Variant.t -> 'c1) ->
  var:('c1 -> (variable -> t) Variantslib.Variant.t -> 'd1) ->
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  bool:('a1 -> t Variantslib.Variant.t -> 'b1) ->
  unit:('b1 -> t Variantslib.Variant.t -> 'c1) ->
  var:('c1 -> (variable -> t) Variantslib.Variant.t -> 'd1) ->
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  unit:('b1 -> t Variantslib.Variant.t -> 'c1) ->
  var:('c1 -> (variable -> t) Variantslib.Variant.t -> 'd1) ->
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  var:('c1 -> (variable -> t) Variantslib.Variant.t -> 'd1) ->
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
type(
  'j1
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'i1
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'h1
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'g1
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'f1
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'e1
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'd1
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'c1
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'b1
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'a1
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'z
)
ident(
  int_ref init__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'z -> t Variantslib.Variant.t -> 'a1
)
ident(
  int_ref num_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'a1 -> t Variantslib.Variant.t -> 'b1
)
ident(
  int_ref bool_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'b1 -> t Variantslib.Variant.t -> 'c1
)
ident(
  int_ref unit_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'c1 -> (variable -> t) Variantslib.Variant.t -> 'd1
)
ident(
  int_ref var_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'd1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1
)
ident(
  int_ref fn_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1
)
ident(
  int_ref product_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1
)
ident(
  int_ref sum_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1
)
ident(
  int_ref rec_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1
)
ident(
  int_ref forall_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1
)
ident(
  int_ref exists_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1
)
ident(
  def exists_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1
)
ident(
  def forall_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1
)
ident(
  def rec_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1
)
ident(
  def sum_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1
)
ident(
  def product_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'd1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1
)
ident(
  def fn_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'c1 -> (variable -> t) Variantslib.Variant.t -> 'd1
)
ident(
  def var_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'b1 -> t Variantslib.Variant.t -> 'c1
)
ident(
  def unit_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'a1 -> t Variantslib.Variant.t -> 'b1
)
ident(
  def bool_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'z -> t Variantslib.Variant.t -> 'a1
)
ident(
  def num_fun__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  'z
)
ident(
  def init__ "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  init:'z ->
  num:('z -> t Variantslib.Variant.t -> 'a1) ->
  bool:('a1 -> t Variantslib.Variant.t -> 'b1) ->
  unit:('b1 -> t Variantslib.Variant.t -> 'c1) ->
  var:('c1 -> (variable -> t) Variantslib.Variant.t -> 'd1) ->
  fn:('d1 -> (arg:t -> ret:t -> t) Variantslib.Variant.t -> 'e1) ->
  product:('e1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'f1) ->
  sum:('f1 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'g1) ->
  rec:('g1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'h1) ->
  forall:('h1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'i1) ->
  exists:('i1 -> (a:variable -> tau:t -> t) Variantslib.Variant.t -> 'j1) ->
  'j1
)
ident(
  def fold "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
type(
  a:variable -> tau:t -> t
)
ident(
  int_ref exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  def exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
type(
  a:variable -> tau:t -> t
)
ident(
  int_ref forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  def forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  int_ref rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
type(
  a:variable -> tau:t -> t
)
ident(
  int_ref rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (a:variable -> tau:t -> t) Variantslib.Variant.t
)
ident(
  def rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
type(
  arg:t -> ret:t -> t
)
ident(
  int_ref fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (arg:t -> ret:t -> t) Variantslib.Variant.t
)
ident(
  def fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  (variable -> t) Variantslib.Variant.t
)
type(
  (variable -> t) Variantslib.Variant.t
)
type(
  variable -> t
)
ident(
  int_ref var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  def var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t
)
type(
  t Variantslib.Variant.t
)
type(
  t
)
ident(
  int_ref unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  t Variantslib.Variant.t
)
ident(
  def unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t
)
type(
  t Variantslib.Variant.t
)
type(
  t
)
ident(
  int_ref bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  t Variantslib.Variant.t
)
ident(
  def bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t Variantslib.Variant.t
)
type(
  t Variantslib.Variant.t
)
type(
  t
)
ident(
  int_ref num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  int
)
type(
  variable
)
type(
  t Variantslib.Variant.t
)
ident(
  def num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
ident(
  int_ref exists "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
type(
  a:variable -> tau:t -> t
)
type(
  tau:t -> t
)
type(
  t.Exists
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
ident(
  def exists "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  a:variable -> tau:t -> t
)
ident(
  int_ref forall "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
type(
  a:variable -> tau:t -> t
)
type(
  tau:t -> t
)
type(
  t.Forall
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
ident(
  def forall "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  a:variable -> tau:t -> t
)
ident(
  int_ref rec "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
type(
  a:variable -> tau:t -> t
)
type(
  tau:t -> t
)
type(
  t.Rec
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  a:variable -> tau:t -> t
)
ident(
  def rec "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref sum "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.Sum
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  left:t -> right:t -> t
)
ident(
  def sum "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref product "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.Product
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  left:t -> right:t -> t
)
ident(
  def product "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  arg:t -> ret:t -> t
)
ident(
  int_ref fn "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  arg:t -> ret:t -> t
)
type(
  arg:t -> ret:t -> t
)
type(
  ret:t -> t
)
type(
  t.Fn
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  arg:t -> ret:t -> t
)
ident(
  def fn "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  variable -> t
)
ident(
  int_ref var "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> t
)
type(
  variable -> t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  variable -> t
)
ident(
  def var "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  t
)
ident(
  int_ref unit "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def unit "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  t
)
ident(
  int_ref bool "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def bool "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  t
)
ident(
  int_ref num "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def num "src/ast.ml" 7 92 94 "src/ast.ml" 41 1133 1136
)
type(
  t -> unit
)
type(
  unit
)
type(
  t
)
type(
  t -> unit
)
"src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
type(
  t -> variable
)
ident(
  def to_string "src/ast.ml" 20 434 436 "src/ast.ml" 41 1133 1136
)
"src/ast.ml" 20 434 454 "src/ast.ml" 20 434 456
type(
  t
)
ident(
  def ty "src/ast.ml" 21 459 463 "src/ast.ml" 37 1015 1067
)
"src/ast.ml" 21 459 469 "src/ast.ml" 21 459 471
type(
  t
)
ident(
  int_ref ty "src/ast.ml" 20 434 454 "src/ast.ml" 20 434 456
)
"src/ast.ml" 22 477 483 "src/ast.ml" 22 477 486
type(
  t
)
"src/ast.ml" 22 477 490 "src/ast.ml" 22 477 495
type(
  variable
)
"src/ast.ml" 23 496 502 "src/ast.ml" 23 496 506
type(
  t
)
"src/ast.ml" 23 496 510 "src/ast.ml" 23 496 516
type(
  variable
)
"src/ast.ml" 24 517 523 "src/ast.ml" 24 517 527
type(
  t
)
"src/ast.ml" 24 517 531 "src/ast.ml" 24 517 537
type(
  variable
)
"src/ast.ml" 25 538 548 "src/ast.ml" 25 538 549
type(
  variable
)
ident(
  def x "src/ast.ml" 25 538 553 "src/ast.ml" 25 538 554
)
"src/ast.ml" 25 538 544 "src/ast.ml" 25 538 549
type(
  t
)
"src/ast.ml" 25 538 553 "src/ast.ml" 25 538 554
type(
  variable
)
ident(
  int_ref x "src/ast.ml" 25 538 548 "src/ast.ml" 25 538 549
)
"src/ast.ml" 26 555 565 "src/ast.ml" 26 555 568
type(
  t
)
ident(
  def arg "src/ast.ml" 27 578 584 "src/ast.ml" 27 578 643
)
"src/ast.ml" 26 555 570 "src/ast.ml" 26 555 573
type(
  t
)
ident(
  def ret "src/ast.ml" 27 578 584 "src/ast.ml" 27 578 643
)
"src/ast.ml" 26 555 564 "src/ast.ml" 26 555 574
type(
  t.Fn
)
"src/ast.ml" 26 555 561 "src/ast.ml" 26 555 574
type(
  t
)
"src/ast.ml" 27 578 584 "src/ast.ml" 27 578 598
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 27 578 599 "src/ast.ml" 27 578 611
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 27 578 613 "src/ast.ml" 27 578 622
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 27 578 623 "src/ast.ml" 27 578 626
type(
  t
)
ident(
  int_ref arg "src/ast.ml" 26 555 565 "src/ast.ml" 26 555 568
)
"src/ast.ml" 27 578 612 "src/ast.ml" 27 578 627
call(
  stack
)
type(
  variable
)
"src/ast.ml" 27 578 629 "src/ast.ml" 27 578 638
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 27 578 639 "src/ast.ml" 27 578 642
type(
  t
)
ident(
  int_ref ret "src/ast.ml" 26 555 570 "src/ast.ml" 26 555 573
)
"src/ast.ml" 27 578 628 "src/ast.ml" 27 578 643
call(
  stack
)
type(
  variable
)
"src/ast.ml" 27 578 584 "src/ast.ml" 27 578 643
call(
  tail
)
type(
  variable
)
"src/ast.ml" 28 644 659 "src/ast.ml" 28 644 663
type(
  t
)
ident(
  def left "src/ast.ml" 29 675 681 "src/ast.ml" 29 675 742
)
"src/ast.ml" 28 644 665 "src/ast.ml" 28 644 670
type(
  t
)
ident(
  def right "src/ast.ml" 29 675 681 "src/ast.ml" 29 675 742
)
"src/ast.ml" 28 644 658 "src/ast.ml" 28 644 671
type(
  t.Product
)
"src/ast.ml" 28 644 650 "src/ast.ml" 28 644 671
type(
  t
)
"src/ast.ml" 29 675 681 "src/ast.ml" 29 675 695
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 29 675 696 "src/ast.ml" 29 675 707
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 29 675 709 "src/ast.ml" 29 675 718
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 29 675 719 "src/ast.ml" 29 675 723
type(
  t
)
ident(
  int_ref left "src/ast.ml" 28 644 659 "src/ast.ml" 28 644 663
)
"src/ast.ml" 29 675 708 "src/ast.ml" 29 675 724
call(
  stack
)
type(
  variable
)
"src/ast.ml" 29 675 726 "src/ast.ml" 29 675 735
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 29 675 736 "src/ast.ml" 29 675 741
type(
  t
)
ident(
  int_ref right "src/ast.ml" 28 644 665 "src/ast.ml" 28 644 670
)
"src/ast.ml" 29 675 725 "src/ast.ml" 29 675 742
call(
  stack
)
type(
  variable
)
"src/ast.ml" 29 675 681 "src/ast.ml" 29 675 742
call(
  tail
)
type(
  variable
)
"src/ast.ml" 30 743 754 "src/ast.ml" 30 743 758
type(
  t
)
ident(
  def left "src/ast.ml" 31 770 776 "src/ast.ml" 31 770 837
)
"src/ast.ml" 30 743 760 "src/ast.ml" 30 743 765
type(
  t
)
ident(
  def right "src/ast.ml" 31 770 776 "src/ast.ml" 31 770 837
)
"src/ast.ml" 30 743 753 "src/ast.ml" 30 743 766
type(
  t.Sum
)
"src/ast.ml" 30 743 749 "src/ast.ml" 30 743 766
type(
  t
)
"src/ast.ml" 31 770 776 "src/ast.ml" 31 770 790
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 31 770 791 "src/ast.ml" 31 770 802
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 31 770 804 "src/ast.ml" 31 770 813
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 31 770 814 "src/ast.ml" 31 770 818
type(
  t
)
ident(
  int_ref left "src/ast.ml" 30 743 754 "src/ast.ml" 30 743 758
)
"src/ast.ml" 31 770 803 "src/ast.ml" 31 770 819
call(
  stack
)
type(
  variable
)
"src/ast.ml" 31 770 821 "src/ast.ml" 31 770 830
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 31 770 831 "src/ast.ml" 31 770 836
type(
  t
)
ident(
  int_ref right "src/ast.ml" 30 743 760 "src/ast.ml" 30 743 765
)
"src/ast.ml" 31 770 820 "src/ast.ml" 31 770 837
call(
  stack
)
type(
  variable
)
"src/ast.ml" 31 770 776 "src/ast.ml" 31 770 837
call(
  tail
)
type(
  variable
)
"src/ast.ml" 32 838 849 "src/ast.ml" 32 838 850
type(
  variable
)
ident(
  def a "src/ast.ml" 33 860 866 "src/ast.ml" 33 860 911
)
"src/ast.ml" 32 838 852 "src/ast.ml" 32 838 855
type(
  t
)
ident(
  def tau "src/ast.ml" 33 860 866 "src/ast.ml" 33 860 911
)
"src/ast.ml" 32 838 848 "src/ast.ml" 32 838 856
type(
  t.Rec
)
"src/ast.ml" 32 838 844 "src/ast.ml" 32 838 856
type(
  t
)
"src/ast.ml" 33 860 866 "src/ast.ml" 33 860 880
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 33 860 881 "src/ast.ml" 33 860 893
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 33 860 894 "src/ast.ml" 33 860 895
type(
  variable
)
ident(
  int_ref a "src/ast.ml" 32 838 849 "src/ast.ml" 32 838 850
)
"src/ast.ml" 33 860 897 "src/ast.ml" 33 860 906
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 33 860 907 "src/ast.ml" 33 860 910
type(
  t
)
ident(
  int_ref tau "src/ast.ml" 32 838 852 "src/ast.ml" 32 838 855
)
"src/ast.ml" 33 860 896 "src/ast.ml" 33 860 911
call(
  stack
)
type(
  variable
)
"src/ast.ml" 33 860 866 "src/ast.ml" 33 860 911
call(
  tail
)
type(
  variable
)
"src/ast.ml" 34 912 926 "src/ast.ml" 34 912 927
type(
  variable
)
ident(
  def a "src/ast.ml" 35 937 943 "src/ast.ml" 35 937 989
)
"src/ast.ml" 34 912 929 "src/ast.ml" 34 912 932
type(
  t
)
ident(
  def tau "src/ast.ml" 35 937 943 "src/ast.ml" 35 937 989
)
"src/ast.ml" 34 912 925 "src/ast.ml" 34 912 933
type(
  t.Forall
)
"src/ast.ml" 34 912 918 "src/ast.ml" 34 912 933
type(
  t
)
"src/ast.ml" 35 937 943 "src/ast.ml" 35 937 957
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 35 937 958 "src/ast.ml" 35 937 971
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 35 937 972 "src/ast.ml" 35 937 973
type(
  variable
)
ident(
  int_ref a "src/ast.ml" 34 912 926 "src/ast.ml" 34 912 927
)
"src/ast.ml" 35 937 975 "src/ast.ml" 35 937 984
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 35 937 985 "src/ast.ml" 35 937 988
type(
  t
)
ident(
  int_ref tau "src/ast.ml" 34 912 929 "src/ast.ml" 34 912 932
)
"src/ast.ml" 35 937 974 "src/ast.ml" 35 937 989
call(
  stack
)
type(
  variable
)
"src/ast.ml" 35 937 943 "src/ast.ml" 35 937 989
call(
  tail
)
type(
  variable
)
"src/ast.ml" 36 990 1004 "src/ast.ml" 36 990 1005
type(
  variable
)
ident(
  def a "src/ast.ml" 37 1015 1021 "src/ast.ml" 37 1015 1067
)
"src/ast.ml" 36 990 1007 "src/ast.ml" 36 990 1010
type(
  t
)
ident(
  def tau "src/ast.ml" 37 1015 1021 "src/ast.ml" 37 1015 1067
)
"src/ast.ml" 36 990 1003 "src/ast.ml" 36 990 1011
type(
  t.Exists
)
"src/ast.ml" 36 990 996 "src/ast.ml" 36 990 1011
type(
  t
)
"src/ast.ml" 37 1015 1021 "src/ast.ml" 37 1015 1035
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 37 1015 1036 "src/ast.ml" 37 1015 1049
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 37 1015 1050 "src/ast.ml" 37 1015 1051
type(
  variable
)
ident(
  int_ref a "src/ast.ml" 36 990 1004 "src/ast.ml" 36 990 1005
)
"src/ast.ml" 37 1015 1053 "src/ast.ml" 37 1015 1062
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 37 1015 1063 "src/ast.ml" 37 1015 1066
type(
  t
)
ident(
  int_ref tau "src/ast.ml" 36 990 1007 "src/ast.ml" 36 990 1010
)
"src/ast.ml" 37 1015 1052 "src/ast.ml" 37 1015 1067
call(
  stack
)
type(
  variable
)
"src/ast.ml" 37 1015 1021 "src/ast.ml" 37 1015 1067
call(
  tail
)
type(
  variable
)
"src/ast.ml" 21 459 463 "src/ast.ml" 37 1015 1067
type(
  variable
)
"src/ast.ml" 39 1069 1075 "src/ast.ml" 39 1069 1089
type(
  t -> variable
)
ident(
  def to_string_sexp "src/ast.ml" 40 1095 1132 "src/ast.ml" 41 1133 1136
)
"src/ast.ml" 39 1069 1090 "src/ast.ml" 39 1069 1092
type(
  t
)
ident(
  def ty "src/ast.ml" 40 1095 1099 "src/ast.ml" 40 1095 1132
)
"src/ast.ml" 40 1095 1099 "src/ast.ml" 40 1095 1117
type(
  ?indent:int -> Sexp.t -> variable
)
ident(
  int_ref Core.Sexp.to_string_hum "src/sexp_intf.ml" 528 20573 20575 "src/sexp_intf.ml" 528 20573 20623
)
"src/ast.ml" 40 1095 1119 "src/ast.ml" 40 1095 1128
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 40 1095 1129 "src/ast.ml" 40 1095 1131
type(
  t
)
ident(
  int_ref ty "src/ast.ml" 39 1069 1090 "src/ast.ml" 39 1069 1092
)
"src/ast.ml" 40 1095 1118 "src/ast.ml" 40 1095 1132
call(
  stack
)
type(
  Sexp.t
)
"src/ast.ml" 40 1095 1099 "src/ast.ml" 40 1095 1132
call(
  tail
)
type(
  variable
)
"src/ast.ml" 44 1159 1174 "src/ast.ml" 44 1159 1177
type(
  int
)
type(
  int
)
type(
  int
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  variable
)
type(
  Sexp.t
)
type(
  binop
)
type(
  variable
)
type(
  Sexp.t
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
"src/ast.ml" 44 1159 1180 "src/ast.ml" 44 1159 1183
type(
  variable
)
type(
  variable
)
type(
  binop
)
type(
  binop
)
"src/ast.ml" 44 1159 1178 "src/ast.ml" 44 1159 1183
type(
  int
)
type(
  int
)
type(
  int
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  Sexp.t
)
type(
  binop
)
type(
  Sexp.t
)
type(
  binop
)
"src/ast.ml" 44 1159 1186 "src/ast.ml" 44 1159 1189
type(
  variable
)
type(
  variable
)
type(
  binop
)
type(
  binop
)
"src/ast.ml" 44 1159 1184 "src/ast.ml" 44 1159 1189
type(
  int
)
type(
  int
)
type(
  int
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  Sexp.t
)
type(
  binop
)
type(
  Sexp.t
)
type(
  binop
)
"src/ast.ml" 44 1159 1192 "src/ast.ml" 44 1159 1195
type(
  variable
)
type(
  variable
)
type(
  binop
)
type(
  binop
)
"src/ast.ml" 44 1159 1190 "src/ast.ml" 44 1159 1195
type(
  int
)
type(
  binop * binop
)
type(
  binop
)
type(
  binop
)
type(
  Sexp.t
)
type(
  binop
)
type(
  Sexp.t
)
type(
  binop
)
"src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  binop -> binop -> int
)
ident(
  int_ref compare_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> binop -> int
)
type(
  binop -> binop -> int
)
type(
  binop -> binop -> int
)
type(
  binop -> int
)
type(
  int
)
type(
  int
)
type(
  binop * binop
)
type(
  binop
)
ident(
  int_ref b__020_ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
ident(
  int_ref a__019_ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  int
)
type(
  bool
)
type(
  binop
)
ident(
  int_ref b__020_ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
ident(
  int_ref a__019_ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> binop -> bool
)
ident(
  int_ref Ppx_compare_lib.phys_equal "src/ppx_compare_lib.mli" 4 113 113 "src/ppx_compare_lib.mli" 4 113 146
)
type(
  binop
)
ident(
  def b__020_ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
ident(
  def a__019_ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> binop -> int
)
ident(
  def compare_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  binop -> Sexp.t
)
ident(
  int_ref sexp_of_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> Sexp.t
)
type(
  binop -> Sexp.t
)
type(
  binop -> Sexp.t
)
type(
  binop -> Sexp.t
)
ident(
  def sexp_of_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  Sexp.t -> binop
)
ident(
  int_ref binop_of_sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t -> binop
)
type(
  Sexp.t -> binop
)
type(
  Sexp.t -> binop
)
type(
  Sexp.t -> binop
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.unexpected_stag "sexp_conv_error.ml" 36 962 966 "sexp_conv_error.ml" 36 962 981
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.empty_list_invalid_sum "sexp_conv_error.ml" 33 849 853 "sexp_conv_error.ml" 33 849 875
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.nested_list_invalid_sum "sexp_conv_error.ml" 30 736 740 "sexp_conv_error.ml" 30 736 763
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  variable -> Sexp.t -> binop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
ident(
  def _tp_loc "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t -> binop
)
ident(
  def binop_of_sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  binop -> Sexp.t
)
ident(
  int_ref sexp_of_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> Sexp.t
)
type(
  binop -> Sexp.t
)
type(
  binop -> Sexp.t
)
type(
  binop -> Sexp.t
)
ident(
  def sexp_of_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  (variable * int) list
)
ident(
  int_ref descriptions "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
ident(
  def descriptions "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> variable
)
ident(
  int_ref to_name "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> variable
)
type(
  binop -> variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  binop -> variable
)
ident(
  def to_name "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> int
)
ident(
  int_ref to_rank "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> int
)
type(
  binop -> int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  binop -> int
)
ident(
  def to_rank "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop ->
  add:(binop Variantslib.Variant.t -> 'a) ->
  sub:(binop Variantslib.Variant.t -> 'a) ->
  mul:(binop Variantslib.Variant.t -> 'a) ->
  div:(binop Variantslib.Variant.t -> 'a) -> 'a
)
ident(
  int_ref map "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop ->
  add:(binop Variantslib.Variant.t -> 'a) ->
  sub:(binop Variantslib.Variant.t -> 'a) ->
  mul:(binop Variantslib.Variant.t -> 'a) ->
  div:(binop Variantslib.Variant.t -> 'a) -> 'a
)
type(
  binop ->
  add:(binop Variantslib.Variant.t -> 'b) ->
  sub:(binop Variantslib.Variant.t -> 'b) ->
  mul:(binop Variantslib.Variant.t -> 'b) ->
  div:(binop Variantslib.Variant.t -> 'b) -> 'b
)
type(
  add:(binop Variantslib.Variant.t -> 'b) ->
  sub:(binop Variantslib.Variant.t -> 'b) ->
  mul:(binop Variantslib.Variant.t -> 'b) ->
  div:(binop Variantslib.Variant.t -> 'b) -> 'b
)
type(
  sub:(binop Variantslib.Variant.t -> 'b) ->
  mul:(binop Variantslib.Variant.t -> 'b) ->
  div:(binop Variantslib.Variant.t -> 'b) -> 'b
)
type(
  mul:(binop Variantslib.Variant.t -> 'b) ->
  div:(binop Variantslib.Variant.t -> 'b) -> 'b
)
type(
  div:(binop Variantslib.Variant.t -> 'b) -> 'b
)
type(
  'b
)
type(
  'b
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  int_ref div_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'b
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  int_ref mul_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'b
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  int_ref sub_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'b
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  int_ref add_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
ident(
  int_ref t__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  def div_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  def mul_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  def sub_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> 'b
)
ident(
  def add_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
ident(
  def t__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop ->
  add:(binop Variantslib.Variant.t -> 'b) ->
  sub:(binop Variantslib.Variant.t -> 'b) ->
  mul:(binop Variantslib.Variant.t -> 'b) ->
  div:(binop Variantslib.Variant.t -> 'b) -> 'b
)
ident(
  def map "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  add:(binop Variantslib.Variant.t -> unit) ->
  sub:(binop Variantslib.Variant.t -> unit) ->
  mul:(binop Variantslib.Variant.t -> unit) ->
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
ident(
  int_ref iter "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  add:(binop Variantslib.Variant.t -> unit) ->
  sub:(binop Variantslib.Variant.t -> unit) ->
  mul:(binop Variantslib.Variant.t -> unit) ->
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
type(
  add:(binop Variantslib.Variant.t -> unit) ->
  sub:(binop Variantslib.Variant.t -> unit) ->
  mul:(binop Variantslib.Variant.t -> unit) ->
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
type(
  sub:(binop Variantslib.Variant.t -> unit) ->
  mul:(binop Variantslib.Variant.t -> unit) ->
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
type(
  mul:(binop Variantslib.Variant.t -> unit) ->
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
type(
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  int_ref div_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  int_ref mul_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  int_ref sub_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  unit
)
type(
  unit
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  int_ref add_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  def div_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  def mul_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  def sub_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t -> unit
)
ident(
  def add_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  add:(binop Variantslib.Variant.t -> unit) ->
  sub:(binop Variantslib.Variant.t -> unit) ->
  mul:(binop Variantslib.Variant.t -> unit) ->
  div:(binop Variantslib.Variant.t -> unit) -> unit
)
ident(
  def iter "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  init:'c ->
  add:('c -> binop Variantslib.Variant.t -> 'd) ->
  sub:('d -> binop Variantslib.Variant.t -> 'e) ->
  mul:('e -> binop Variantslib.Variant.t -> 'f) ->
  div:('f -> binop Variantslib.Variant.t -> 'g) -> 'g
)
ident(
  int_ref fold "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  init:'c ->
  add:('c -> binop Variantslib.Variant.t -> 'd) ->
  sub:('d -> binop Variantslib.Variant.t -> 'e) ->
  mul:('e -> binop Variantslib.Variant.t -> 'f) ->
  div:('f -> binop Variantslib.Variant.t -> 'g) -> 'g
)
type(
  init:'h ->
  add:('h -> binop Variantslib.Variant.t -> 'i) ->
  sub:('i -> binop Variantslib.Variant.t -> 'j) ->
  mul:('j -> binop Variantslib.Variant.t -> 'k) ->
  div:('k -> binop Variantslib.Variant.t -> 'l) -> 'l
)
type(
  add:('h -> binop Variantslib.Variant.t -> 'i) ->
  sub:('i -> binop Variantslib.Variant.t -> 'j) ->
  mul:('j -> binop Variantslib.Variant.t -> 'k) ->
  div:('k -> binop Variantslib.Variant.t -> 'l) -> 'l
)
type(
  sub:('i -> binop Variantslib.Variant.t -> 'j) ->
  mul:('j -> binop Variantslib.Variant.t -> 'k) ->
  div:('k -> binop Variantslib.Variant.t -> 'l) -> 'l
)
type(
  mul:('j -> binop Variantslib.Variant.t -> 'k) ->
  div:('k -> binop Variantslib.Variant.t -> 'l) -> 'l
)
type(
  div:('k -> binop Variantslib.Variant.t -> 'l) -> 'l
)
type(
  'l
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'k
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'j
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'i
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'h
)
ident(
  int_ref init__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'h -> binop Variantslib.Variant.t -> 'i
)
ident(
  int_ref add_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'i -> binop Variantslib.Variant.t -> 'j
)
ident(
  int_ref sub_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'j -> binop Variantslib.Variant.t -> 'k
)
ident(
  int_ref mul_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'k -> binop Variantslib.Variant.t -> 'l
)
ident(
  int_ref div_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'k -> binop Variantslib.Variant.t -> 'l
)
ident(
  def div_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'j -> binop Variantslib.Variant.t -> 'k
)
ident(
  def mul_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'i -> binop Variantslib.Variant.t -> 'j
)
ident(
  def sub_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'h -> binop Variantslib.Variant.t -> 'i
)
ident(
  def add_fun__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  'h
)
ident(
  def init__ "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  init:'h ->
  add:('h -> binop Variantslib.Variant.t -> 'i) ->
  sub:('i -> binop Variantslib.Variant.t -> 'j) ->
  mul:('j -> binop Variantslib.Variant.t -> 'k) ->
  div:('k -> binop Variantslib.Variant.t -> 'l) -> 'l
)
ident(
  def fold "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
type(
  binop Variantslib.Variant.t
)
type(
  binop
)
ident(
  int_ref div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  int
)
type(
  variable
)
type(
  binop Variantslib.Variant.t
)
ident(
  def div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
type(
  binop Variantslib.Variant.t
)
type(
  binop
)
ident(
  int_ref mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  int
)
type(
  variable
)
type(
  binop Variantslib.Variant.t
)
ident(
  def mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
type(
  binop Variantslib.Variant.t
)
type(
  binop
)
ident(
  int_ref sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  int
)
type(
  variable
)
type(
  binop Variantslib.Variant.t
)
ident(
  def sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
ident(
  int_ref add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop Variantslib.Variant.t
)
type(
  binop Variantslib.Variant.t
)
type(
  binop
)
ident(
  int_ref add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  int
)
type(
  variable
)
type(
  binop Variantslib.Variant.t
)
ident(
  def add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
ident(
  int_ref div "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
ident(
  def div "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  binop
)
ident(
  int_ref mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
ident(
  def mul "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  binop
)
ident(
  int_ref sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
ident(
  def sub "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  binop
)
ident(
  int_ref add "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop
)
type(
  binop
)
type(
  binop
)
ident(
  def add "src/ast.ml" 44 1159 1161 "src/ast.ml" 147 4848 4851
)
type(
  binop -> unit
)
type(
  unit
)
type(
  binop
)
type(
  binop -> unit
)
"src/ast.ml" 47 1245 1260 "src/ast.ml" 47 1245 1262
type(
  int
)
type(
  int
)
type(
  int
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  variable
)
type(
  Sexp.t
)
type(
  relop
)
type(
  variable
)
type(
  Sexp.t
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
"src/ast.ml" 47 1245 1265 "src/ast.ml" 47 1245 1267
type(
  variable
)
type(
  variable
)
type(
  relop
)
type(
  relop
)
"src/ast.ml" 47 1245 1263 "src/ast.ml" 47 1245 1267
type(
  int
)
type(
  int
)
type(
  int
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  Sexp.t
)
type(
  relop
)
type(
  Sexp.t
)
type(
  relop
)
"src/ast.ml" 47 1245 1270 "src/ast.ml" 47 1245 1272
type(
  variable
)
type(
  variable
)
type(
  relop
)
type(
  relop
)
"src/ast.ml" 47 1245 1268 "src/ast.ml" 47 1245 1272
type(
  int
)
type(
  relop * relop
)
type(
  relop
)
type(
  relop
)
type(
  Sexp.t
)
type(
  relop
)
type(
  Sexp.t
)
type(
  relop
)
"src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
type(
  relop -> relop -> int
)
ident(
  int_ref compare_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> relop -> int
)
type(
  relop -> relop -> int
)
type(
  relop -> relop -> int
)
type(
  relop -> int
)
type(
  int
)
type(
  int
)
type(
  relop * relop
)
type(
  relop
)
ident(
  int_ref b__022_ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
ident(
  int_ref a__021_ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  int
)
type(
  bool
)
type(
  relop
)
ident(
  int_ref b__022_ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
ident(
  int_ref a__021_ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> relop -> bool
)
ident(
  int_ref Ppx_compare_lib.phys_equal "src/ppx_compare_lib.mli" 4 113 113 "src/ppx_compare_lib.mli" 4 113 146
)
type(
  relop
)
ident(
  def b__022_ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
ident(
  def a__021_ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> relop -> int
)
ident(
  def compare_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  relop -> Sexp.t
)
ident(
  int_ref sexp_of_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> Sexp.t
)
type(
  relop -> Sexp.t
)
type(
  relop -> Sexp.t
)
type(
  relop -> Sexp.t
)
ident(
  def sexp_of_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  Sexp.t -> relop
)
ident(
  int_ref relop_of_sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t -> relop
)
type(
  Sexp.t -> relop
)
type(
  Sexp.t -> relop
)
type(
  Sexp.t -> relop
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable -> Sexp.t -> relop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.unexpected_stag "sexp_conv_error.ml" 36 962 966 "sexp_conv_error.ml" 36 962 981
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable -> Sexp.t -> relop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.empty_list_invalid_sum "sexp_conv_error.ml" 33 849 853 "sexp_conv_error.ml" 33 849 875
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable -> Sexp.t -> relop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.nested_list_invalid_sum "sexp_conv_error.ml" 30 736 740 "sexp_conv_error.ml" 30 736 763
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable -> Sexp.t -> relop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable -> Sexp.t -> relop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  variable -> Sexp.t -> relop
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
ident(
  def _tp_loc "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t -> relop
)
ident(
  def relop_of_sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  relop -> Sexp.t
)
ident(
  int_ref sexp_of_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> Sexp.t
)
type(
  relop -> Sexp.t
)
type(
  relop -> Sexp.t
)
type(
  relop -> Sexp.t
)
ident(
  def sexp_of_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  (variable * int) list
)
ident(
  int_ref descriptions "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
ident(
  def descriptions "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> variable
)
ident(
  int_ref to_name "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> variable
)
type(
  relop -> variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  relop -> variable
)
ident(
  def to_name "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> int
)
ident(
  int_ref to_rank "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> int
)
type(
  relop -> int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  relop -> int
)
ident(
  def to_rank "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop ->
  lt:(relop Variantslib.Variant.t -> 'm) ->
  gt:(relop Variantslib.Variant.t -> 'm) ->
  eq:(relop Variantslib.Variant.t -> 'm) -> 'm
)
ident(
  int_ref map "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop ->
  lt:(relop Variantslib.Variant.t -> 'm) ->
  gt:(relop Variantslib.Variant.t -> 'm) ->
  eq:(relop Variantslib.Variant.t -> 'm) -> 'm
)
type(
  relop ->
  lt:(relop Variantslib.Variant.t -> 'n) ->
  gt:(relop Variantslib.Variant.t -> 'n) ->
  eq:(relop Variantslib.Variant.t -> 'n) -> 'n
)
type(
  lt:(relop Variantslib.Variant.t -> 'n) ->
  gt:(relop Variantslib.Variant.t -> 'n) ->
  eq:(relop Variantslib.Variant.t -> 'n) -> 'n
)
type(
  gt:(relop Variantslib.Variant.t -> 'n) ->
  eq:(relop Variantslib.Variant.t -> 'n) -> 'n
)
type(
  eq:(relop Variantslib.Variant.t -> 'n) -> 'n
)
type(
  'n
)
type(
  'n
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> 'n
)
ident(
  int_ref eq_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  'n
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> 'n
)
ident(
  int_ref gt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  'n
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> 'n
)
ident(
  int_ref lt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
ident(
  int_ref t__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> 'n
)
ident(
  def eq_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> 'n
)
ident(
  def gt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> 'n
)
ident(
  def lt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
ident(
  def t__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop ->
  lt:(relop Variantslib.Variant.t -> 'n) ->
  gt:(relop Variantslib.Variant.t -> 'n) ->
  eq:(relop Variantslib.Variant.t -> 'n) -> 'n
)
ident(
  def map "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  lt:(relop Variantslib.Variant.t -> unit) ->
  gt:(relop Variantslib.Variant.t -> unit) ->
  eq:(relop Variantslib.Variant.t -> unit) -> unit
)
ident(
  int_ref iter "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  lt:(relop Variantslib.Variant.t -> unit) ->
  gt:(relop Variantslib.Variant.t -> unit) ->
  eq:(relop Variantslib.Variant.t -> unit) -> unit
)
type(
  lt:(relop Variantslib.Variant.t -> unit) ->
  gt:(relop Variantslib.Variant.t -> unit) ->
  eq:(relop Variantslib.Variant.t -> unit) -> unit
)
type(
  gt:(relop Variantslib.Variant.t -> unit) ->
  eq:(relop Variantslib.Variant.t -> unit) -> unit
)
type(
  eq:(relop Variantslib.Variant.t -> unit) -> unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> unit
)
ident(
  int_ref eq_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> unit
)
ident(
  int_ref gt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  unit
)
type(
  unit
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> unit
)
ident(
  int_ref lt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> unit
)
ident(
  def eq_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> unit
)
ident(
  def gt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t -> unit
)
ident(
  def lt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  lt:(relop Variantslib.Variant.t -> unit) ->
  gt:(relop Variantslib.Variant.t -> unit) ->
  eq:(relop Variantslib.Variant.t -> unit) -> unit
)
ident(
  def iter "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  init:'o ->
  lt:('o -> relop Variantslib.Variant.t -> 'p) ->
  gt:('p -> relop Variantslib.Variant.t -> 'q) ->
  eq:('q -> relop Variantslib.Variant.t -> 'r) -> 'r
)
ident(
  int_ref fold "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  init:'o ->
  lt:('o -> relop Variantslib.Variant.t -> 'p) ->
  gt:('p -> relop Variantslib.Variant.t -> 'q) ->
  eq:('q -> relop Variantslib.Variant.t -> 'r) -> 'r
)
type(
  init:'s ->
  lt:('s -> relop Variantslib.Variant.t -> 't) ->
  gt:('t -> relop Variantslib.Variant.t -> 'u) ->
  eq:('u -> relop Variantslib.Variant.t -> 'v) -> 'v
)
type(
  lt:('s -> relop Variantslib.Variant.t -> 't) ->
  gt:('t -> relop Variantslib.Variant.t -> 'u) ->
  eq:('u -> relop Variantslib.Variant.t -> 'v) -> 'v
)
type(
  gt:('t -> relop Variantslib.Variant.t -> 'u) ->
  eq:('u -> relop Variantslib.Variant.t -> 'v) -> 'v
)
type(
  eq:('u -> relop Variantslib.Variant.t -> 'v) -> 'v
)
type(
  'v
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  'u
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  't
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  's
)
ident(
  int_ref init__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  's -> relop Variantslib.Variant.t -> 't
)
ident(
  int_ref lt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  't -> relop Variantslib.Variant.t -> 'u
)
ident(
  int_ref gt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  'u -> relop Variantslib.Variant.t -> 'v
)
ident(
  int_ref eq_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  'u -> relop Variantslib.Variant.t -> 'v
)
ident(
  def eq_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  't -> relop Variantslib.Variant.t -> 'u
)
ident(
  def gt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  's -> relop Variantslib.Variant.t -> 't
)
ident(
  def lt_fun__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  's
)
ident(
  def init__ "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  init:'s ->
  lt:('s -> relop Variantslib.Variant.t -> 't) ->
  gt:('t -> relop Variantslib.Variant.t -> 'u) ->
  eq:('u -> relop Variantslib.Variant.t -> 'v) -> 'v
)
ident(
  def fold "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t
)
type(
  relop Variantslib.Variant.t
)
type(
  relop
)
ident(
  int_ref eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  int
)
type(
  variable
)
type(
  relop Variantslib.Variant.t
)
ident(
  def eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t
)
type(
  relop Variantslib.Variant.t
)
type(
  relop
)
ident(
  int_ref gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  int
)
type(
  variable
)
type(
  relop Variantslib.Variant.t
)
ident(
  def gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t
)
ident(
  int_ref lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop Variantslib.Variant.t
)
type(
  relop Variantslib.Variant.t
)
type(
  relop
)
ident(
  int_ref lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  int
)
type(
  variable
)
type(
  relop Variantslib.Variant.t
)
ident(
  def lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
ident(
  int_ref eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
ident(
  def eq "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  relop
)
ident(
  int_ref gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
ident(
  def gt "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  relop
)
ident(
  int_ref lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop
)
type(
  relop
)
type(
  relop
)
ident(
  def lt "src/ast.ml" 47 1245 1247 "src/ast.ml" 147 4848 4851
)
type(
  relop -> unit
)
type(
  unit
)
type(
  relop
)
type(
  relop -> unit
)
"src/ast.ml" 50 1322 1341 "src/ast.ml" 50 1322 1345
type(
  int
)
type(
  int
)
type(
  int
)
type(
  direction * direction
)
type(
  direction
)
type(
  direction
)
type(
  direction * direction
)
type(
  direction
)
type(
  direction
)
type(
  direction * direction
)
type(
  direction
)
type(
  direction
)
type(
  variable
)
type(
  Sexp.t
)
type(
  direction
)
type(
  variable
)
type(
  Sexp.t
)
type(
  direction
)
type(
  direction
)
type(
  direction
)
"src/ast.ml" 50 1322 1348 "src/ast.ml" 50 1322 1353
type(
  variable
)
type(
  variable
)
type(
  direction
)
type(
  direction
)
"src/ast.ml" 50 1322 1346 "src/ast.ml" 50 1322 1353
type(
  int
)
type(
  direction * direction
)
type(
  direction
)
type(
  direction
)
type(
  Sexp.t
)
type(
  direction
)
type(
  Sexp.t
)
type(
  direction
)
"src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
type(
  direction -> direction -> int
)
ident(
  int_ref compare_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> direction -> int
)
type(
  direction -> direction -> int
)
type(
  direction -> direction -> int
)
type(
  direction -> int
)
type(
  int
)
type(
  int
)
type(
  direction * direction
)
type(
  direction
)
ident(
  int_ref b__024_ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
ident(
  int_ref a__023_ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  int
)
type(
  bool
)
type(
  direction
)
ident(
  int_ref b__024_ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
ident(
  int_ref a__023_ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> direction -> bool
)
ident(
  int_ref Ppx_compare_lib.phys_equal "src/ppx_compare_lib.mli" 4 113 113 "src/ppx_compare_lib.mli" 4 113 146
)
type(
  direction
)
ident(
  def b__024_ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
ident(
  def a__023_ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> direction -> int
)
ident(
  def compare_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 147 4848 4851
)
type(
  direction -> Sexp.t
)
ident(
  int_ref sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> Sexp.t
)
type(
  direction -> Sexp.t
)
type(
  direction -> Sexp.t
)
type(
  direction -> Sexp.t
)
ident(
  def sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 147 4848 4851
)
type(
  Sexp.t -> direction
)
ident(
  int_ref direction_of_sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t -> direction
)
type(
  Sexp.t -> direction
)
type(
  Sexp.t -> direction
)
type(
  Sexp.t -> direction
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable -> Sexp.t -> direction
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.unexpected_stag "sexp_conv_error.ml" 36 962 966 "sexp_conv_error.ml" 36 962 981
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable -> Sexp.t -> direction
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.empty_list_invalid_sum "sexp_conv_error.ml" 33 849 853 "sexp_conv_error.ml" 33 849 875
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable -> Sexp.t -> direction
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.nested_list_invalid_sum "sexp_conv_error.ml" 30 736 740 "sexp_conv_error.ml" 30 736 763
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable -> Sexp.t -> direction
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  variable -> Sexp.t -> direction
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  direction
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
ident(
  def _tp_loc "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t -> direction
)
ident(
  def direction_of_sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 147 4848 4851
)
type(
  direction -> Sexp.t
)
ident(
  int_ref sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> Sexp.t
)
type(
  direction -> Sexp.t
)
type(
  direction -> Sexp.t
)
type(
  direction -> Sexp.t
)
ident(
  def sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 147 4848 4851
)
type(
  (variable * int) list
)
ident(
  int_ref descriptions "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
ident(
  def descriptions "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> variable
)
ident(
  int_ref to_name "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> variable
)
type(
  direction -> variable
)
type(
  variable
)
type(
  variable
)
type(
  direction -> variable
)
ident(
  def to_name "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> int
)
ident(
  int_ref to_rank "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> int
)
type(
  direction -> int
)
type(
  int
)
type(
  int
)
type(
  direction -> int
)
ident(
  def to_rank "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction ->
  left:(direction Variantslib.Variant.t -> 'w) ->
  right:(direction Variantslib.Variant.t -> 'w) -> 'w
)
ident(
  int_ref map "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction ->
  left:(direction Variantslib.Variant.t -> 'w) ->
  right:(direction Variantslib.Variant.t -> 'w) -> 'w
)
type(
  direction ->
  left:(direction Variantslib.Variant.t -> 'x) ->
  right:(direction Variantslib.Variant.t -> 'x) -> 'x
)
type(
  left:(direction Variantslib.Variant.t -> 'x) ->
  right:(direction Variantslib.Variant.t -> 'x) -> 'x
)
type(
  right:(direction Variantslib.Variant.t -> 'x) -> 'x
)
type(
  'x
)
type(
  'x
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> 'x
)
ident(
  int_ref right_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'x
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> 'x
)
ident(
  int_ref left_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
type(
  direction
)
type(
  direction
)
ident(
  int_ref t__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> 'x
)
ident(
  def right_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> 'x
)
ident(
  def left_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
ident(
  def t__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction ->
  left:(direction Variantslib.Variant.t -> 'x) ->
  right:(direction Variantslib.Variant.t -> 'x) -> 'x
)
ident(
  def map "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  left:(direction Variantslib.Variant.t -> unit) ->
  right:(direction Variantslib.Variant.t -> unit) -> unit
)
ident(
  int_ref iter "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  left:(direction Variantslib.Variant.t -> unit) ->
  right:(direction Variantslib.Variant.t -> unit) -> unit
)
type(
  left:(direction Variantslib.Variant.t -> unit) ->
  right:(direction Variantslib.Variant.t -> unit) -> unit
)
type(
  right:(direction Variantslib.Variant.t -> unit) -> unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> unit
)
ident(
  int_ref right_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  unit
)
type(
  unit
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> unit
)
ident(
  int_ref left_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> unit
)
ident(
  def right_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t -> unit
)
ident(
  def left_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  left:(direction Variantslib.Variant.t -> unit) ->
  right:(direction Variantslib.Variant.t -> unit) -> unit
)
ident(
  def iter "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  init:'y ->
  left:('y -> direction Variantslib.Variant.t -> 'z) ->
  right:('z -> direction Variantslib.Variant.t -> 'a1) -> 'a1
)
ident(
  int_ref fold "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  init:'y ->
  left:('y -> direction Variantslib.Variant.t -> 'z) ->
  right:('z -> direction Variantslib.Variant.t -> 'a1) -> 'a1
)
type(
  init:'b1 ->
  left:('b1 -> direction Variantslib.Variant.t -> 'c1) ->
  right:('c1 -> direction Variantslib.Variant.t -> 'd1) -> 'd1
)
type(
  left:('b1 -> direction Variantslib.Variant.t -> 'c1) ->
  right:('c1 -> direction Variantslib.Variant.t -> 'd1) -> 'd1
)
type(
  right:('c1 -> direction Variantslib.Variant.t -> 'd1) -> 'd1
)
type(
  'd1
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'c1
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'b1
)
ident(
  int_ref init__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'b1 -> direction Variantslib.Variant.t -> 'c1
)
ident(
  int_ref left_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'c1 -> direction Variantslib.Variant.t -> 'd1
)
ident(
  int_ref right_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'c1 -> direction Variantslib.Variant.t -> 'd1
)
ident(
  def right_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'b1 -> direction Variantslib.Variant.t -> 'c1
)
ident(
  def left_fun__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  'b1
)
ident(
  def init__ "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  init:'b1 ->
  left:('b1 -> direction Variantslib.Variant.t -> 'c1) ->
  right:('c1 -> direction Variantslib.Variant.t -> 'd1) -> 'd1
)
ident(
  def fold "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t
)
type(
  direction Variantslib.Variant.t
)
type(
  direction
)
ident(
  int_ref right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  int
)
type(
  variable
)
type(
  direction Variantslib.Variant.t
)
ident(
  def right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t
)
ident(
  int_ref left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction Variantslib.Variant.t
)
type(
  direction Variantslib.Variant.t
)
type(
  direction
)
ident(
  int_ref left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  int
)
type(
  variable
)
type(
  direction Variantslib.Variant.t
)
ident(
  def left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
ident(
  int_ref right "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
type(
  direction
)
type(
  direction
)
ident(
  def right "src/ast.ml" 50 1322 1324 "src/ast.ml" 147 4848 4851
)
type(
  direction
)
ident(
  int_ref left "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction
)
type(
  direction
)
type(
  direction
)
ident(
  def left "src/ast.ml" 50 1322 1324 "src/ast.ml" 147 4848 4851
)
type(
  direction -> unit
)
type(
  unit
)
type(
  direction
)
type(
  direction -> unit
)
"src/ast.ml" 54 1414 1420 "src/ast.ml" 54 1414 1423
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  int
)
type(
  t
)
type(
  int
)
"src/ast.ml" 54 1414 1427 "src/ast.ml" 54 1414 1430
call(
  tail
)
type(
  int
)
type(
  int -> int -> int
)
ident(
  int_ref Core.compare_int "src/std_internal.ml" 127 5066 5077 "src/std_internal.ml" 127 5066 5141
)
type(
  int -> Sexp.t
)
ident(
  int_ref Core.sexp_of_int "src/std_internal.ml" 127 5066 5077 "src/std_internal.ml" 127 5066 5141
)
type(
  Sexp.t -> int
)
ident(
  int_ref Core.int_of_sexp "src/std_internal.ml" 127 5066 5077 "src/std_internal.ml" 127 5066 5141
)
type(
  int -> Sexp.t
)
ident(
  int_ref Core.sexp_of_int "src/std_internal.ml" 127 5066 5077 "src/std_internal.ml" 127 5066 5141
)
"src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
call(
  stack
)
call(
  stack
)
type(
  int
)
type(
  int
)
type(
  int
)
ident(
  int_ref _b__028_ "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  int
)
ident(
  int_ref _a__027_ "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  t * t
)
type(
  t
)
type(
  int
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  int
)
ident(
  def _b__028_ "src/ast.ml" 54 1414 1427 "src/ast.ml" 54 1414 1430
)
type(
  t
)
type(
  int
)
ident(
  def _a__027_ "src/ast.ml" 54 1414 1427 "src/ast.ml" 54 1414 1430
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  int
)
ident(
  int_ref v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  t
)
type(
  int
)
ident(
  def v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  int
)
ident(
  int_ref v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
type(
  t
)
type(
  int
)
ident(
  def v0 "src/ast.ml" 54 1414 1418 "src/ast.ml" 54 1414 1430
)
"src/ast.ml" 55 1431 1437 "src/ast.ml" 55 1431 1442
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Binop
)
type(
  t
)
type(
  t.Binop
)
"src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  binop
)
ident(
  int_ref v_binop "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  binop
)
ident(
  def v_binop "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  binop option
)
type(
  binop option
)
type(
  binop option ref
)
ident(
  int_ref binop_field "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  binop option ref -> binop option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  binop option -> binop option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  binop option
)
type(
  binop
)
ident(
  def binop_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop option
)
type(
  binop option ref
)
ident(
  int_ref binop_field "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  binop option ref -> binop option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  binop
)
ident(
  int_ref fvalue "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  binop option
)
type(
  binop option ref
)
ident(
  int_ref binop_field "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  binop option ref -> binop option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  binop
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop
)
ident(
  def fvalue "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  binop option
)
type(
  binop
)
type(
  binop option
)
type(
  binop option
)
type(
  binop option ref
)
ident(
  int_ref binop_field "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  binop option ref -> binop option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  binop option ref
)
type(
  binop option
)
type(
  binop option -> binop option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  binop option ref
)
ident(
  def binop_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  binop
)
ident(
  int_ref v_binop "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  binop
)
ident(
  def v_binop "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
"src/ast.ml" 55 1431 1455 "src/ast.ml" 55 1431 1460
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 55 1431 1455 "src/ast.ml" 55 1431 1460
)
type(
  int
)
ident(
  def n "src/ast.ml" 55 1431 1455 "src/ast.ml" 55 1431 1460
)
type(
  int
)
type(
  int
)
type(
  binop -> binop -> int
)
ident(
  int_ref compare_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> Sexp.t
)
ident(
  int_ref sexp_of_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  Sexp.t -> binop
)
ident(
  int_ref binop_of_sexp "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
type(
  binop -> Sexp.t
)
ident(
  int_ref sexp_of_binop "src/ast.ml" 44 1159 1161 "src/ast.ml" 45 1196 1243
)
"src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1461
type(
  binop
)
type(
  binop
)
"src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
"src/ast.ml" 55 1431 1469 "src/ast.ml" 55 1431 1470
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 55 1431 1469 "src/ast.ml" 55 1431 1470
)
type(
  int
)
ident(
  def n "src/ast.ml" 55 1431 1469 "src/ast.ml" 55 1431 1470
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1471
type(
  t
)
type(
  t
)
"src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
"src/ast.ml" 55 1431 1480 "src/ast.ml" 55 1431 1481
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1481
type(
  t
)
type(
  t
)
"src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
type(
  int
)
type(
  int
)
type(
  t.Binop
)
ident(
  int_ref _b__030_ "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  t.Binop
)
ident(
  int_ref _a__029_ "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  t.Binop
)
ident(
  int_ref _b__030_ "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  t.Binop
)
ident(
  int_ref _a__029_ "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  t.Binop
)
ident(
  int_ref _b__030_ "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  t.Binop
)
ident(
  int_ref _a__029_ "src/ast.ml" 55 1431 1435 "src/ast.ml" 55 1431 1482
)
type(
  t * t
)
type(
  t
)
type(
  t.Binop
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Binop
)
type(
  t * t
)
type(
  t
)
type(
  t.Binop
)
ident(
  def _b__030_ "src/ast.ml" 55 1431 1455 "src/ast.ml" 55 1431 1460
)
type(
  t
)
type(
  t.Binop
)
ident(
  def _a__029_ "src/ast.ml" 55 1431 1455 "src/ast.ml" 55 1431 1460
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'e1 list
)
type(
  'e1 list
)
ident(
  def bnds "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t
)
type(
  t.Binop
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'f1 list
)
type(
  'f1 list
)
ident(
  def bnds "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t
)
type(
  t.Binop
)
"src/ast.ml" 57 1484 1490 "src/ast.ml" 57 1484 1494
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
"src/ast.ml" 57 1484 1488 "src/ast.ml" 57 1484 1494
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
"src/ast.ml" 57 1484 1497 "src/ast.ml" 57 1484 1502
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
"src/ast.ml" 57 1484 1495 "src/ast.ml" 57 1484 1502
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
"src/ast.ml" 58 1503 1509 "src/ast.ml" 58 1503 1511
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.If
)
type(
  t
)
type(
  t.If
)
"src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_cond "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t
)
ident(
  def v_cond "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref cond_field "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def cond_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref cond_field "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref cond_field "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref cond_field "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def cond_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_cond "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t
)
ident(
  def v_cond "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
"src/ast.ml" 58 1503 1523 "src/ast.ml" 58 1503 1524
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 58 1503 1523 "src/ast.ml" 58 1503 1524
)
type(
  int
)
ident(
  def n "src/ast.ml" 58 1503 1523 "src/ast.ml" 58 1503 1524
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1525
type(
  t
)
type(
  t
)
"src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_then_ "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t
)
ident(
  def v_then_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref then__field "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def then__value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref then__field "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref then__field "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref then__field "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def then__field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_then_ "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t
)
ident(
  def v_then_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
"src/ast.ml" 58 1503 1534 "src/ast.ml" 58 1503 1535
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 58 1503 1534 "src/ast.ml" 58 1503 1535
)
type(
  int
)
ident(
  def n "src/ast.ml" 58 1503 1534 "src/ast.ml" 58 1503 1535
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1536
type(
  t
)
type(
  t
)
"src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_else_ "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t
)
ident(
  def v_else_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref else__field "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def else__value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref else__field "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref else__field "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref else__field "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def else__field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_else_ "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t
)
ident(
  def v_else_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
"src/ast.ml" 58 1503 1545 "src/ast.ml" 58 1503 1546
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1546
type(
  t
)
type(
  t
)
"src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
type(
  int
)
type(
  int
)
type(
  t.If
)
ident(
  int_ref _b__032_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t.If
)
ident(
  int_ref _a__031_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t.If
)
ident(
  int_ref _b__032_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t.If
)
ident(
  int_ref _a__031_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t.If
)
ident(
  int_ref _b__032_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t.If
)
ident(
  int_ref _a__031_ "src/ast.ml" 58 1503 1507 "src/ast.ml" 58 1503 1547
)
type(
  t * t
)
type(
  t
)
type(
  t.If
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.If
)
type(
  t * t
)
type(
  t
)
type(
  t.If
)
ident(
  def _b__032_ "src/ast.ml" 58 1503 1523 "src/ast.ml" 58 1503 1524
)
type(
  t
)
type(
  t.If
)
ident(
  def _a__031_ "src/ast.ml" 58 1503 1523 "src/ast.ml" 58 1503 1524
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'g1 list
)
type(
  'g1 list
)
ident(
  def bnds "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t
)
type(
  t.If
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'h1 list
)
type(
  'h1 list
)
ident(
  def bnds "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t
)
type(
  t.If
)
"src/ast.ml" 59 1548 1554 "src/ast.ml" 59 1548 1559
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Relop
)
type(
  t
)
type(
  t.Relop
)
"src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  relop
)
ident(
  int_ref v_relop "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  relop
)
ident(
  def v_relop "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  relop option
)
type(
  relop option
)
type(
  relop option ref
)
ident(
  int_ref relop_field "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  relop option ref -> relop option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  relop option -> relop option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  relop option
)
type(
  relop
)
ident(
  def relop_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop option
)
type(
  relop option ref
)
ident(
  int_ref relop_field "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  relop option ref -> relop option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  relop
)
ident(
  int_ref fvalue "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  relop option
)
type(
  relop option ref
)
ident(
  int_ref relop_field "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  relop option ref -> relop option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  relop
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop
)
ident(
  def fvalue "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  relop option
)
type(
  relop
)
type(
  relop option
)
type(
  relop option
)
type(
  relop option ref
)
ident(
  int_ref relop_field "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  relop option ref -> relop option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  relop option ref
)
type(
  relop option
)
type(
  relop option -> relop option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  relop option ref
)
ident(
  def relop_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  relop
)
ident(
  int_ref v_relop "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  relop
)
ident(
  def v_relop "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
"src/ast.ml" 59 1548 1572 "src/ast.ml" 59 1548 1577
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 59 1548 1572 "src/ast.ml" 59 1548 1577
)
type(
  int
)
ident(
  def n "src/ast.ml" 59 1548 1572 "src/ast.ml" 59 1548 1577
)
type(
  int
)
type(
  int
)
type(
  relop -> relop -> int
)
ident(
  int_ref compare_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> Sexp.t
)
ident(
  int_ref sexp_of_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  Sexp.t -> relop
)
ident(
  int_ref relop_of_sexp "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
type(
  relop -> Sexp.t
)
ident(
  int_ref sexp_of_relop "src/ast.ml" 47 1245 1247 "src/ast.ml" 48 1273 1320
)
"src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1578
type(
  relop
)
type(
  relop
)
"src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
"src/ast.ml" 59 1548 1586 "src/ast.ml" 59 1548 1587
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 59 1548 1586 "src/ast.ml" 59 1548 1587
)
type(
  int
)
ident(
  def n "src/ast.ml" 59 1548 1586 "src/ast.ml" 59 1548 1587
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1588
type(
  t
)
type(
  t
)
"src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
"src/ast.ml" 59 1548 1597 "src/ast.ml" 59 1548 1598
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1598
type(
  t
)
type(
  t
)
"src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
type(
  int
)
type(
  int
)
type(
  t.Relop
)
ident(
  int_ref _b__034_ "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  t.Relop
)
ident(
  int_ref _a__033_ "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  t.Relop
)
ident(
  int_ref _b__034_ "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  t.Relop
)
ident(
  int_ref _a__033_ "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  t.Relop
)
ident(
  int_ref _b__034_ "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  t.Relop
)
ident(
  int_ref _a__033_ "src/ast.ml" 59 1548 1552 "src/ast.ml" 59 1548 1599
)
type(
  t * t
)
type(
  t
)
type(
  t.Relop
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Relop
)
type(
  t * t
)
type(
  t
)
type(
  t.Relop
)
ident(
  def _b__034_ "src/ast.ml" 59 1548 1572 "src/ast.ml" 59 1548 1577
)
type(
  t
)
type(
  t.Relop
)
ident(
  def _a__033_ "src/ast.ml" 59 1548 1572 "src/ast.ml" 59 1548 1577
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'i1 list
)
type(
  'i1 list
)
ident(
  def bnds "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t
)
type(
  t.Relop
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'j1 list
)
type(
  'j1 list
)
ident(
  def bnds "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t
)
type(
  t.Relop
)
"src/ast.ml" 60 1600 1606 "src/ast.ml" 60 1600 1609
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.And
)
type(
  t
)
type(
  t.And
)
"src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
"src/ast.ml" 60 1600 1621 "src/ast.ml" 60 1600 1622
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 60 1600 1621 "src/ast.ml" 60 1600 1622
)
type(
  int
)
ident(
  def n "src/ast.ml" 60 1600 1621 "src/ast.ml" 60 1600 1622
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1623
type(
  t
)
type(
  t
)
"src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
"src/ast.ml" 60 1600 1632 "src/ast.ml" 60 1600 1633
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1633
type(
  t
)
type(
  t
)
"src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
type(
  int
)
type(
  int
)
type(
  t.And
)
ident(
  int_ref _b__036_ "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  t.And
)
ident(
  int_ref _a__035_ "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  t.And
)
ident(
  int_ref _b__036_ "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  t.And
)
ident(
  int_ref _a__035_ "src/ast.ml" 60 1600 1604 "src/ast.ml" 60 1600 1634
)
type(
  t * t
)
type(
  t
)
type(
  t.And
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.And
)
type(
  t * t
)
type(
  t
)
type(
  t.And
)
ident(
  def _b__036_ "src/ast.ml" 60 1600 1621 "src/ast.ml" 60 1600 1622
)
type(
  t
)
type(
  t.And
)
ident(
  def _a__035_ "src/ast.ml" 60 1600 1621 "src/ast.ml" 60 1600 1622
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'k1 list
)
type(
  'k1 list
)
ident(
  def bnds "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t
)
type(
  t.And
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'l1 list
)
type(
  'l1 list
)
ident(
  def bnds "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t
)
type(
  t.And
)
"src/ast.ml" 61 1635 1641 "src/ast.ml" 61 1635 1643
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Or
)
type(
  t
)
type(
  t.Or
)
"src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
"src/ast.ml" 61 1635 1655 "src/ast.ml" 61 1635 1656
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 61 1635 1655 "src/ast.ml" 61 1635 1656
)
type(
  int
)
ident(
  def n "src/ast.ml" 61 1635 1655 "src/ast.ml" 61 1635 1656
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1657
type(
  t
)
type(
  t
)
"src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
"src/ast.ml" 61 1635 1666 "src/ast.ml" 61 1635 1667
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1667
type(
  t
)
type(
  t
)
"src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
type(
  int
)
type(
  int
)
type(
  t.Or
)
ident(
  int_ref _b__038_ "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  t.Or
)
ident(
  int_ref _a__037_ "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  t.Or
)
ident(
  int_ref _b__038_ "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  t.Or
)
ident(
  int_ref _a__037_ "src/ast.ml" 61 1635 1639 "src/ast.ml" 61 1635 1668
)
type(
  t * t
)
type(
  t
)
type(
  t.Or
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Or
)
type(
  t * t
)
type(
  t
)
type(
  t.Or
)
ident(
  def _b__038_ "src/ast.ml" 61 1635 1655 "src/ast.ml" 61 1635 1656
)
type(
  t
)
type(
  t.Or
)
ident(
  def _a__037_ "src/ast.ml" 61 1635 1655 "src/ast.ml" 61 1635 1656
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'm1 list
)
type(
  'm1 list
)
ident(
  def bnds "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t
)
type(
  t.Or
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'n1 list
)
type(
  'n1 list
)
ident(
  def bnds "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t
)
type(
  t.Or
)
"src/ast.ml" 63 1670 1676 "src/ast.ml" 63 1670 1679
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  variable
)
type(
  t
)
type(
  variable
)
"src/ast.ml" 63 1670 1683 "src/ast.ml" 63 1670 1691
call(
  tail
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
call(
  stack
)
call(
  stack
)
type(
  int
)
type(
  int
)
type(
  variable
)
ident(
  int_ref _b__040_ "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  variable
)
ident(
  int_ref _a__039_ "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  t * t
)
type(
  t
)
type(
  variable
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  variable
)
type(
  t * t
)
type(
  t
)
type(
  variable
)
ident(
  def _b__040_ "src/ast.ml" 63 1670 1683 "src/ast.ml" 63 1670 1691
)
type(
  t
)
type(
  variable
)
ident(
  def _a__039_ "src/ast.ml" 63 1670 1683 "src/ast.ml" 63 1670 1691
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 63 1670 1674 "src/ast.ml" 63 1670 1691
)
"src/ast.ml" 64 1692 1698 "src/ast.ml" 64 1692 1701
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Lam
)
type(
  t
)
type(
  t.Lam
)
"src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_x "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  variable
)
ident(
  def v_x "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def x_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def x_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_x "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  variable
)
ident(
  def v_x "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
"src/ast.ml" 64 1692 1710 "src/ast.ml" 64 1692 1718
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 64 1692 1710 "src/ast.ml" 64 1692 1718
)
type(
  int
)
ident(
  def n "src/ast.ml" 64 1692 1710 "src/ast.ml" 64 1692 1718
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1719
type(
  variable
)
type(
  variable
)
"src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
"src/ast.ml" 64 1692 1726 "src/ast.ml" 64 1692 1732
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 64 1692 1726 "src/ast.ml" 64 1692 1732
)
type(
  int
)
ident(
  def n "src/ast.ml" 64 1692 1726 "src/ast.ml" 64 1692 1732
)
type(
  int
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1733
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
"src/ast.ml" 64 1692 1738 "src/ast.ml" 64 1692 1739
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1739
type(
  t
)
type(
  t
)
"src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
type(
  int
)
type(
  int
)
type(
  t.Lam
)
ident(
  int_ref _b__042_ "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  t.Lam
)
ident(
  int_ref _a__041_ "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  t.Lam
)
ident(
  int_ref _b__042_ "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  t.Lam
)
ident(
  int_ref _a__041_ "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  t.Lam
)
ident(
  int_ref _b__042_ "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  t.Lam
)
ident(
  int_ref _a__041_ "src/ast.ml" 64 1692 1696 "src/ast.ml" 64 1692 1740
)
type(
  t * t
)
type(
  t
)
type(
  t.Lam
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Lam
)
type(
  t * t
)
type(
  t
)
type(
  t.Lam
)
ident(
  def _b__042_ "src/ast.ml" 64 1692 1710 "src/ast.ml" 64 1692 1718
)
type(
  t
)
type(
  t.Lam
)
ident(
  def _a__041_ "src/ast.ml" 64 1692 1710 "src/ast.ml" 64 1692 1718
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'o1 list
)
type(
  'o1 list
)
ident(
  def bnds "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t
)
type(
  t.Lam
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'p1 list
)
type(
  'p1 list
)
ident(
  def bnds "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  t
)
type(
  t.Lam
)
"src/ast.ml" 65 1741 1747 "src/ast.ml" 65 1741 1750
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.App
)
type(
  t
)
type(
  t.App
)
"src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_lam "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  t
)
ident(
  def v_lam "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref lam_field "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def lam_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref lam_field "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref lam_field "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref lam_field "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def lam_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_lam "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  t
)
ident(
  def v_lam "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
"src/ast.ml" 65 1741 1761 "src/ast.ml" 65 1741 1762
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 65 1741 1761 "src/ast.ml" 65 1741 1762
)
type(
  int
)
ident(
  def n "src/ast.ml" 65 1741 1761 "src/ast.ml" 65 1741 1762
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1763
type(
  t
)
type(
  t
)
"src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_arg "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t
)
ident(
  def v_arg "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def arg_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref arg_field "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def arg_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_arg "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t
)
ident(
  def v_arg "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
"src/ast.ml" 65 1741 1770 "src/ast.ml" 65 1741 1771
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1771
type(
  t
)
type(
  t
)
"src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
type(
  int
)
type(
  int
)
type(
  t.App
)
ident(
  int_ref _b__044_ "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  t.App
)
ident(
  int_ref _a__043_ "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  t.App
)
ident(
  int_ref _b__044_ "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  t.App
)
ident(
  int_ref _a__043_ "src/ast.ml" 65 1741 1745 "src/ast.ml" 65 1741 1772
)
type(
  t * t
)
type(
  t
)
type(
  t.App
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.App
)
type(
  t * t
)
type(
  t
)
type(
  t.App
)
ident(
  def _b__044_ "src/ast.ml" 65 1741 1761 "src/ast.ml" 65 1741 1762
)
type(
  t
)
type(
  t.App
)
ident(
  def _a__043_ "src/ast.ml" 65 1741 1761 "src/ast.ml" 65 1741 1762
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'q1 list
)
type(
  'q1 list
)
ident(
  def bnds "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t
)
type(
  t.App
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'r1 list
)
type(
  'r1 list
)
ident(
  def bnds "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t
)
type(
  t.App
)
"src/ast.ml" 67 1774 1780 "src/ast.ml" 67 1774 1784
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
"src/ast.ml" 67 1774 1778 "src/ast.ml" 67 1774 1784
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
type(
  Sexp.t
)
type(
  t
)
"src/ast.ml" 68 1785 1791 "src/ast.ml" 68 1785 1795
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Pair
)
type(
  t
)
type(
  t.Pair
)
"src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def left_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref left_field "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def left_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_left "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  t
)
ident(
  def v_left "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
"src/ast.ml" 68 1785 1807 "src/ast.ml" 68 1785 1808
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 68 1785 1807 "src/ast.ml" 68 1785 1808
)
type(
  int
)
ident(
  def n "src/ast.ml" 68 1785 1807 "src/ast.ml" 68 1785 1808
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1809
type(
  t
)
type(
  t
)
"src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def right_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref right_field "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def right_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_right "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t
)
ident(
  def v_right "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
"src/ast.ml" 68 1785 1818 "src/ast.ml" 68 1785 1819
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1819
type(
  t
)
type(
  t
)
"src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
type(
  int
)
type(
  int
)
type(
  t.Pair
)
ident(
  int_ref _b__046_ "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  t.Pair
)
ident(
  int_ref _a__045_ "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  t.Pair
)
ident(
  int_ref _b__046_ "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  t.Pair
)
ident(
  int_ref _a__045_ "src/ast.ml" 68 1785 1789 "src/ast.ml" 68 1785 1820
)
type(
  t * t
)
type(
  t
)
type(
  t.Pair
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Pair
)
type(
  t * t
)
type(
  t
)
type(
  t.Pair
)
ident(
  def _b__046_ "src/ast.ml" 68 1785 1807 "src/ast.ml" 68 1785 1808
)
type(
  t
)
type(
  t.Pair
)
ident(
  def _a__045_ "src/ast.ml" 68 1785 1807 "src/ast.ml" 68 1785 1808
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  's1 list
)
type(
  's1 list
)
ident(
  def bnds "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t
)
type(
  t.Pair
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  't1 list
)
type(
  't1 list
)
ident(
  def bnds "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t
)
type(
  t.Pair
)
"src/ast.ml" 69 1821 1827 "src/ast.ml" 69 1821 1834
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Project
)
type(
  t
)
type(
  t.Project
)
"src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
"src/ast.ml" 69 1821 1843 "src/ast.ml" 69 1821 1844
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 69 1821 1843 "src/ast.ml" 69 1821 1844
)
type(
  int
)
ident(
  def n "src/ast.ml" 69 1821 1843 "src/ast.ml" 69 1821 1844
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1845
type(
  t
)
type(
  t
)
"src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  direction
)
ident(
  int_ref v_d "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  direction
)
ident(
  def v_d "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  direction option
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  direction option ref -> direction option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  direction option -> direction option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  direction option
)
type(
  direction
)
ident(
  def d_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  direction option ref -> direction option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  direction
)
ident(
  int_ref fvalue "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  direction option ref -> direction option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction
)
ident(
  def fvalue "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  direction option
)
type(
  direction
)
type(
  direction option
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  direction option ref -> direction option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  direction option ref
)
type(
  direction option
)
type(
  direction option -> direction option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  direction option ref
)
ident(
  def d_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  direction
)
ident(
  int_ref v_d "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  direction
)
ident(
  def v_d "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
"src/ast.ml" 69 1821 1850 "src/ast.ml" 69 1821 1859
call(
  tail
)
type(
  int
)
type(
  direction -> direction -> int
)
ident(
  int_ref compare_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> Sexp.t
)
ident(
  int_ref sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t -> direction
)
ident(
  int_ref direction_of_sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> Sexp.t
)
ident(
  int_ref sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
"src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1859
type(
  direction
)
type(
  direction
)
"src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
type(
  int
)
type(
  int
)
type(
  t.Project
)
ident(
  int_ref _b__048_ "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  t.Project
)
ident(
  int_ref _a__047_ "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  t.Project
)
ident(
  int_ref _b__048_ "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  t.Project
)
ident(
  int_ref _a__047_ "src/ast.ml" 69 1821 1825 "src/ast.ml" 69 1821 1860
)
type(
  t * t
)
type(
  t
)
type(
  t.Project
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Project
)
type(
  t * t
)
type(
  t
)
type(
  t.Project
)
ident(
  def _b__048_ "src/ast.ml" 69 1821 1843 "src/ast.ml" 69 1821 1844
)
type(
  t
)
type(
  t.Project
)
ident(
  def _a__047_ "src/ast.ml" 69 1821 1843 "src/ast.ml" 69 1821 1844
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'u1 list
)
type(
  'u1 list
)
ident(
  def bnds "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  t
)
type(
  t.Project
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'v1 list
)
type(
  'v1 list
)
ident(
  def bnds "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  t
)
type(
  t.Project
)
"src/ast.ml" 71 1862 1868 "src/ast.ml" 71 1862 1874
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Inject
)
type(
  t
)
type(
  t.Inject
)
"src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
"src/ast.ml" 71 1862 1883 "src/ast.ml" 71 1862 1884
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 71 1862 1883 "src/ast.ml" 71 1862 1884
)
type(
  int
)
ident(
  def n "src/ast.ml" 71 1862 1883 "src/ast.ml" 71 1862 1884
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1885
type(
  t
)
type(
  t
)
"src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  direction
)
ident(
  int_ref v_d "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  direction
)
ident(
  def v_d "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  direction option
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  direction option ref -> direction option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  direction option -> direction option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  direction option
)
type(
  direction
)
ident(
  def d_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  direction option ref -> direction option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  direction
)
ident(
  int_ref fvalue "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  direction option ref -> direction option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  direction
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction
)
ident(
  def fvalue "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  direction option
)
type(
  direction
)
type(
  direction option
)
type(
  direction option
)
type(
  direction option ref
)
ident(
  int_ref d_field "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  direction option ref -> direction option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  direction option ref
)
type(
  direction option
)
type(
  direction option -> direction option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  direction option ref
)
ident(
  def d_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  direction
)
ident(
  int_ref v_d "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  direction
)
ident(
  def v_d "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
"src/ast.ml" 71 1862 1890 "src/ast.ml" 71 1862 1899
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 71 1862 1890 "src/ast.ml" 71 1862 1899
)
type(
  int
)
ident(
  def n "src/ast.ml" 71 1862 1890 "src/ast.ml" 71 1862 1899
)
type(
  int
)
type(
  int
)
type(
  direction -> direction -> int
)
ident(
  int_ref compare_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> Sexp.t
)
ident(
  int_ref sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  Sexp.t -> direction
)
ident(
  int_ref direction_of_sexp "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
type(
  direction -> Sexp.t
)
ident(
  int_ref sexp_of_direction "src/ast.ml" 50 1322 1324 "src/ast.ml" 51 1354 1401
)
"src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1900
type(
  direction
)
type(
  direction
)
"src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
"src/ast.ml" 71 1862 1907 "src/ast.ml" 71 1862 1913
call(
  tail
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1913
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
type(
  int
)
type(
  int
)
type(
  t.Inject
)
ident(
  int_ref _b__050_ "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t.Inject
)
ident(
  int_ref _a__049_ "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t.Inject
)
ident(
  int_ref _b__050_ "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t.Inject
)
ident(
  int_ref _a__049_ "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t.Inject
)
ident(
  int_ref _b__050_ "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t.Inject
)
ident(
  int_ref _a__049_ "src/ast.ml" 71 1862 1866 "src/ast.ml" 71 1862 1914
)
type(
  t * t
)
type(
  t
)
type(
  t.Inject
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Inject
)
type(
  t * t
)
type(
  t
)
type(
  t.Inject
)
ident(
  def _b__050_ "src/ast.ml" 71 1862 1883 "src/ast.ml" 71 1862 1884
)
type(
  t
)
type(
  t.Inject
)
ident(
  def _a__049_ "src/ast.ml" 71 1862 1883 "src/ast.ml" 71 1862 1884
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'w1 list
)
type(
  'w1 list
)
ident(
  def bnds "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  t
)
type(
  t.Inject
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'x1 list
)
type(
  'x1 list
)
ident(
  def bnds "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  t
)
type(
  t.Inject
)
"src/ast.ml" 72 1915 1921 "src/ast.ml" 72 1915 1925
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Case
)
type(
  t
)
type(
  t.Case
)
"src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
"src/ast.ml" 72 1915 1934 "src/ast.ml" 72 1915 1935
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 72 1915 1934 "src/ast.ml" 72 1915 1935
)
type(
  int
)
ident(
  def n "src/ast.ml" 72 1915 1934 "src/ast.ml" 72 1915 1935
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1936
type(
  t
)
type(
  t
)
"src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_xleft "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  variable
)
ident(
  def v_xleft "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xleft_field "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def xleft_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xleft_field "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xleft_field "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xleft_field "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def xleft_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_xleft "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  variable
)
ident(
  def v_xleft "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
"src/ast.ml" 72 1915 1945 "src/ast.ml" 72 1915 1953
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 72 1915 1945 "src/ast.ml" 72 1915 1953
)
type(
  int
)
ident(
  def n "src/ast.ml" 72 1915 1945 "src/ast.ml" 72 1915 1953
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1954
type(
  variable
)
type(
  variable
)
"src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_eleft "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  t
)
ident(
  def v_eleft "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eleft_field "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def eleft_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eleft_field "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eleft_field "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eleft_field "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def eleft_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_eleft "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  t
)
ident(
  def v_eleft "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
"src/ast.ml" 72 1915 1962 "src/ast.ml" 72 1915 1963
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 72 1915 1962 "src/ast.ml" 72 1915 1963
)
type(
  int
)
ident(
  def n "src/ast.ml" 72 1915 1962 "src/ast.ml" 72 1915 1963
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1964
type(
  t
)
type(
  t
)
"src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_xright "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  variable
)
ident(
  def v_xright "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xright_field "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def xright_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xright_field "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xright_field "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref xright_field "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def xright_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_xright "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  variable
)
ident(
  def v_xright "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
"src/ast.ml" 72 1915 1974 "src/ast.ml" 72 1915 1982
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 72 1915 1974 "src/ast.ml" 72 1915 1982
)
type(
  int
)
ident(
  def n "src/ast.ml" 72 1915 1974 "src/ast.ml" 72 1915 1982
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1983
type(
  variable
)
type(
  variable
)
"src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_eright "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  t
)
ident(
  def v_eright "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eright_field "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def eright_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eright_field "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eright_field "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref eright_field "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def eright_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_eright "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  t
)
ident(
  def v_eright "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
"src/ast.ml" 72 1915 1993 "src/ast.ml" 72 1915 1994
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1994
type(
  t
)
type(
  t
)
"src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
type(
  int
)
type(
  int
)
type(
  t.Case
)
ident(
  int_ref _b__052_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _a__051_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _b__052_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _a__051_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _b__052_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _a__051_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _b__052_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _a__051_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _b__052_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t.Case
)
ident(
  int_ref _a__051_ "src/ast.ml" 72 1915 1919 "src/ast.ml" 72 1915 1995
)
type(
  t * t
)
type(
  t
)
type(
  t.Case
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Case
)
type(
  t * t
)
type(
  t
)
type(
  t.Case
)
ident(
  def _b__052_ "src/ast.ml" 72 1915 1934 "src/ast.ml" 72 1915 1935
)
type(
  t
)
type(
  t.Case
)
ident(
  def _a__051_ "src/ast.ml" 72 1915 1934 "src/ast.ml" 72 1915 1935
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'y1 list
)
type(
  'y1 list
)
ident(
  def bnds "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t
)
type(
  t.Case
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'z1 list
)
type(
  'z1 list
)
ident(
  def bnds "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  t
)
type(
  t.Case
)
"src/ast.ml" 74 1997 2003 "src/ast.ml" 74 1997 2006
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Fix
)
type(
  t
)
type(
  t.Fix
)
"src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_x "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  variable
)
ident(
  def v_x "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def x_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def x_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_x "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  variable
)
ident(
  def v_x "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
"src/ast.ml" 74 1997 2015 "src/ast.ml" 74 1997 2023
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 74 1997 2015 "src/ast.ml" 74 1997 2023
)
type(
  int
)
ident(
  def n "src/ast.ml" 74 1997 2015 "src/ast.ml" 74 1997 2023
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2024
type(
  variable
)
type(
  variable
)
"src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
"src/ast.ml" 74 1997 2031 "src/ast.ml" 74 1997 2037
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 74 1997 2031 "src/ast.ml" 74 1997 2037
)
type(
  int
)
ident(
  def n "src/ast.ml" 74 1997 2031 "src/ast.ml" 74 1997 2037
)
type(
  int
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2038
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
"src/ast.ml" 74 1997 2043 "src/ast.ml" 74 1997 2044
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2044
type(
  t
)
type(
  t
)
"src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
type(
  int
)
type(
  int
)
type(
  t.Fix
)
ident(
  int_ref _b__054_ "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  t.Fix
)
ident(
  int_ref _a__053_ "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  t.Fix
)
ident(
  int_ref _b__054_ "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  t.Fix
)
ident(
  int_ref _a__053_ "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  t.Fix
)
ident(
  int_ref _b__054_ "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  t.Fix
)
ident(
  int_ref _a__053_ "src/ast.ml" 74 1997 2001 "src/ast.ml" 74 1997 2045
)
type(
  t * t
)
type(
  t
)
type(
  t.Fix
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Fix
)
type(
  t * t
)
type(
  t
)
type(
  t.Fix
)
ident(
  def _b__054_ "src/ast.ml" 74 1997 2015 "src/ast.ml" 74 1997 2023
)
type(
  t
)
type(
  t.Fix
)
ident(
  def _a__053_ "src/ast.ml" 74 1997 2015 "src/ast.ml" 74 1997 2023
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'a2 list
)
type(
  'a2 list
)
ident(
  def bnds "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t
)
type(
  t.Fix
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'b2 list
)
type(
  'b2 list
)
ident(
  def bnds "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  t
)
type(
  t.Fix
)
"src/ast.ml" 76 2047 2053 "src/ast.ml" 76 2047 2058
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.TyLam
)
type(
  t
)
type(
  t.TyLam
)
"src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def a_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def a_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
"src/ast.ml" 76 2047 2067 "src/ast.ml" 76 2047 2075
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 76 2047 2067 "src/ast.ml" 76 2047 2075
)
type(
  int
)
ident(
  def n "src/ast.ml" 76 2047 2067 "src/ast.ml" 76 2047 2075
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2076
type(
  variable
)
type(
  variable
)
"src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
"src/ast.ml" 76 2047 2081 "src/ast.ml" 76 2047 2082
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2082
type(
  t
)
type(
  t
)
"src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
type(
  int
)
type(
  int
)
type(
  t.TyLam
)
ident(
  int_ref _b__056_ "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  t.TyLam
)
ident(
  int_ref _a__055_ "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  t.TyLam
)
ident(
  int_ref _b__056_ "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  t.TyLam
)
ident(
  int_ref _a__055_ "src/ast.ml" 76 2047 2051 "src/ast.ml" 76 2047 2083
)
type(
  t * t
)
type(
  t
)
type(
  t.TyLam
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.TyLam
)
type(
  t * t
)
type(
  t
)
type(
  t.TyLam
)
ident(
  def _b__056_ "src/ast.ml" 76 2047 2067 "src/ast.ml" 76 2047 2075
)
type(
  t
)
type(
  t.TyLam
)
ident(
  def _a__055_ "src/ast.ml" 76 2047 2067 "src/ast.ml" 76 2047 2075
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'c2 list
)
type(
  'c2 list
)
ident(
  def bnds "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t
)
type(
  t.TyLam
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'd2 list
)
type(
  'd2 list
)
ident(
  def bnds "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  t
)
type(
  t.TyLam
)
"src/ast.ml" 77 2084 2090 "src/ast.ml" 77 2084 2095
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.TyApp
)
type(
  t
)
type(
  t.TyApp
)
"src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
"src/ast.ml" 77 2084 2104 "src/ast.ml" 77 2084 2105
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 77 2084 2104 "src/ast.ml" 77 2084 2105
)
type(
  int
)
ident(
  def n "src/ast.ml" 77 2084 2104 "src/ast.ml" 77 2084 2105
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2106
type(
  t
)
type(
  t
)
"src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
"src/ast.ml" 77 2084 2113 "src/ast.ml" 77 2084 2119
call(
  tail
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2119
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
type(
  int
)
type(
  int
)
type(
  t.TyApp
)
ident(
  int_ref _b__058_ "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  t.TyApp
)
ident(
  int_ref _a__057_ "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  t.TyApp
)
ident(
  int_ref _b__058_ "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  t.TyApp
)
ident(
  int_ref _a__057_ "src/ast.ml" 77 2084 2088 "src/ast.ml" 77 2084 2120
)
type(
  t * t
)
type(
  t
)
type(
  t.TyApp
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.TyApp
)
type(
  t * t
)
type(
  t
)
type(
  t.TyApp
)
ident(
  def _b__058_ "src/ast.ml" 77 2084 2104 "src/ast.ml" 77 2084 2105
)
type(
  t
)
type(
  t.TyApp
)
ident(
  def _a__057_ "src/ast.ml" 77 2084 2104 "src/ast.ml" 77 2084 2105
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'e2 list
)
type(
  'e2 list
)
ident(
  def bnds "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  t
)
type(
  t.TyApp
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'f2 list
)
type(
  'f2 list
)
ident(
  def bnds "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  t
)
type(
  t.TyApp
)
"src/ast.ml" 79 2122 2128 "src/ast.ml" 79 2122 2133
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Fold_
)
type(
  t
)
type(
  t.Fold_
)
"src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
"src/ast.ml" 79 2122 2142 "src/ast.ml" 79 2122 2143
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 79 2122 2142 "src/ast.ml" 79 2122 2143
)
type(
  int
)
ident(
  def n "src/ast.ml" 79 2122 2142 "src/ast.ml" 79 2122 2143
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2144
type(
  t
)
type(
  t
)
"src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_field "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Type.t
)
ident(
  def v_tau "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
"src/ast.ml" 79 2122 2151 "src/ast.ml" 79 2122 2157
call(
  tail
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2157
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
type(
  int
)
type(
  int
)
type(
  t.Fold_
)
ident(
  int_ref _b__060_ "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  t.Fold_
)
ident(
  int_ref _a__059_ "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  t.Fold_
)
ident(
  int_ref _b__060_ "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  t.Fold_
)
ident(
  int_ref _a__059_ "src/ast.ml" 79 2122 2126 "src/ast.ml" 79 2122 2158
)
type(
  t * t
)
type(
  t
)
type(
  t.Fold_
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Fold_
)
type(
  t * t
)
type(
  t
)
type(
  t.Fold_
)
ident(
  def _b__060_ "src/ast.ml" 79 2122 2142 "src/ast.ml" 79 2122 2143
)
type(
  t
)
type(
  t.Fold_
)
ident(
  def _a__059_ "src/ast.ml" 79 2122 2142 "src/ast.ml" 79 2122 2143
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'g2 list
)
type(
  'g2 list
)
ident(
  def bnds "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  t
)
type(
  t.Fold_
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'h2 list
)
type(
  'h2 list
)
ident(
  def bnds "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  t
)
type(
  t.Fold_
)
"src/ast.ml" 80 2159 2165 "src/ast.ml" 80 2159 2171
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
"src/ast.ml" 80 2159 2175 "src/ast.ml" 80 2159 2176
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
call(
  stack
)
call(
  stack
)
type(
  int
)
type(
  int
)
type(
  t
)
ident(
  int_ref _b__062_ "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  t
)
ident(
  int_ref _a__061_ "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
ident(
  def _b__062_ "src/ast.ml" 80 2159 2175 "src/ast.ml" 80 2159 2176
)
type(
  t
)
type(
  t
)
ident(
  def _a__061_ "src/ast.ml" 80 2159 2175 "src/ast.ml" 80 2159 2176
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  t
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
type(
  t
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 80 2159 2163 "src/ast.ml" 80 2159 2176
)
"src/ast.ml" 82 2178 2184 "src/ast.ml" 82 2178 2190
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Export
)
type(
  t
)
type(
  t.Export
)
"src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_field "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t
)
ident(
  def v_e "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
"src/ast.ml" 82 2178 2199 "src/ast.ml" 82 2178 2200
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 82 2178 2199 "src/ast.ml" 82 2178 2200
)
type(
  int
)
ident(
  def n "src/ast.ml" 82 2178 2199 "src/ast.ml" 82 2178 2200
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2201
type(
  t
)
type(
  t
)
"src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau_adt "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Type.t
)
ident(
  def v_tau_adt "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_adt_field "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_adt_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_adt_field "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_adt_field "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_adt_field "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_adt_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau_adt "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Type.t
)
ident(
  def v_tau_adt "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
"src/ast.ml" 82 2178 2212 "src/ast.ml" 82 2178 2218
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 82 2178 2212 "src/ast.ml" 82 2178 2218
)
type(
  int
)
ident(
  def n "src/ast.ml" 82 2178 2212 "src/ast.ml" 82 2178 2218
)
type(
  int
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2219
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau_mod "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t
)
ident(
  def v_tau_mod "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_mod_field "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  Type.t option -> Type.t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  Type.t option
)
type(
  Type.t
)
ident(
  def tau_mod_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_mod_field "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  Type.t
)
ident(
  int_ref fvalue "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_mod_field "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t option ref -> Type.t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  Type.t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def fvalue "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t option
)
type(
  Type.t
)
type(
  Type.t option
)
type(
  Type.t option
)
type(
  Type.t option ref
)
ident(
  int_ref tau_mod_field "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t option ref -> Type.t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  Type.t option ref
)
type(
  Type.t option
)
type(
  Type.t option -> Type.t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  Type.t option ref
)
ident(
  def tau_mod_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Type.t
)
ident(
  int_ref v_tau_mod "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  Type.t
)
ident(
  def v_tau_mod "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
"src/ast.ml" 82 2178 2230 "src/ast.ml" 82 2178 2236
call(
  tail
)
type(
  int
)
type(
  Type.t -> Type.t -> int
)
ident(
  int_ref Type.compare "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Sexp.t -> Type.t
)
ident(
  int_ref Type.t_of_sexp "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
type(
  Type.t -> Sexp.t
)
ident(
  int_ref Type.sexp_of_t "src/ast.ml" 7 92 94 "src/ast.ml" 18 385 432
)
"src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2236
type(
  Type.t
)
type(
  Type.t
)
"src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
type(
  int
)
type(
  int
)
type(
  t.Export
)
ident(
  int_ref _b__064_ "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t.Export
)
ident(
  int_ref _a__063_ "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t.Export
)
ident(
  int_ref _b__064_ "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t.Export
)
ident(
  int_ref _a__063_ "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t.Export
)
ident(
  int_ref _b__064_ "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t.Export
)
ident(
  int_ref _a__063_ "src/ast.ml" 82 2178 2182 "src/ast.ml" 82 2178 2237
)
type(
  t * t
)
type(
  t
)
type(
  t.Export
)
type(
  t
)
type(
  t * t
)
type(
  t
)
type(
  t
)
type(
  t.Export
)
type(
  t * t
)
type(
  t
)
type(
  t.Export
)
ident(
  def _b__064_ "src/ast.ml" 82 2178 2199 "src/ast.ml" 82 2178 2200
)
type(
  t
)
type(
  t.Export
)
ident(
  def _a__063_ "src/ast.ml" 82 2178 2199 "src/ast.ml" 82 2178 2200
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'i2 list
)
type(
  'i2 list
)
ident(
  def bnds "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  t
)
type(
  t.Export
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'j2 list
)
type(
  'j2 list
)
ident(
  def bnds "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  t
)
type(
  t.Export
)
"src/ast.ml" 83 2238 2244 "src/ast.ml" 83 2238 2250
type(
  variable
)
type(
  variable
)
type(
  t
)
type(
  t.Import
)
type(
  t
)
type(
  t.Import
)
"src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_x "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  variable
)
ident(
  def v_x "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def x_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref x_field "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def x_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_x "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  variable
)
ident(
  def v_x "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
"src/ast.ml" 83 2238 2259 "src/ast.ml" 83 2238 2267
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 83 2238 2259 "src/ast.ml" 83 2238 2267
)
type(
  int
)
ident(
  def n "src/ast.ml" 83 2238 2259 "src/ast.ml" 83 2238 2267
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2268
type(
  variable
)
type(
  variable
)
"src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable option -> variable option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  variable option
)
type(
  variable
)
ident(
  def a_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  variable
)
ident(
  int_ref fvalue "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable option ref -> variable option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def fvalue "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable option
)
type(
  variable
)
type(
  variable option
)
type(
  variable option
)
type(
  variable option ref
)
ident(
  int_ref a_field "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable option ref -> variable option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable option ref
)
type(
  variable option
)
type(
  variable option -> variable option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable option ref
)
ident(
  def a_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  int_ref v_a "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  variable
)
ident(
  def v_a "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
"src/ast.ml" 83 2238 2273 "src/ast.ml" 83 2238 2281
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 83 2238 2273 "src/ast.ml" 83 2238 2281
)
type(
  int
)
ident(
  def n "src/ast.ml" 83 2238 2273 "src/ast.ml" 83 2238 2281
)
type(
  int
)
type(
  int
)
type(
  variable -> variable -> int
)
ident(
  int_ref compare_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  Sexp.t -> variable
)
ident(
  int_ref variable_of_sexp "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
type(
  variable -> Sexp.t
)
ident(
  int_ref sexp_of_variable "src/ast.ml" 3 11 11 "src/ast.ml" 4 34 69
)
"src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2282
type(
  variable
)
type(
  variable
)
"src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e_mod "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  t
)
ident(
  def v_e_mod "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_mod_field "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_mod_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_mod_field "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_mod_field "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_mod_field "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_mod_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e_mod "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  t
)
ident(
  def v_e_mod "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
"src/ast.ml" 83 2238 2291 "src/ast.ml" 83 2238 2292
call(
  stack
)
type(
  int
)
type(
  int
)
ident(
  int_ref n "src/ast.ml" 83 2238 2291 "src/ast.ml" 83 2238 2292
)
type(
  int
)
ident(
  def n "src/ast.ml" 83 2238 2291 "src/ast.ml" 83 2238 2292
)
type(
  int
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2293
type(
  t
)
type(
  t
)
"src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e_body "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t
)
ident(
  def v_e_body "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  bool * variable
)
type(
  variable
)
type(
  bool
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_body_field "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t option -> t option -> bool
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.( = ) "sexp_conv.mli" 279 11074 11074 "sexp_conv.mli" 279 11074 11118
)
type(
  t option
)
type(
  t
)
ident(
  def e_body_value "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_body_field "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  unit
)
type(
  unit
)
type(
  t
)
ident(
  int_ref fvalue "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_body_field "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t option ref -> t option -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def fvalue "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t option
)
type(
  t
)
type(
  t option
)
type(
  t option
)
type(
  t option ref
)
ident(
  int_ref e_body_field "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t option ref -> t option
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  t option ref
)
type(
  t option
)
type(
  t option -> t option ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  t option ref
)
ident(
  def e_body_field "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  int_ref arg "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t list
)
type(
  variable
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  t
)
ident(
  int_ref v_e_body "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t
)
ident(
  def arg "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  Sexp.t list
)
ident(
  def bnds "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  t
)
ident(
  def v_e_body "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
"src/ast.ml" 83 2238 2303 "src/ast.ml" 83 2238 2304
call(
  tail
)
type(
  int
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2304
type(
  t
)
type(
  t
)
"src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
type(
  t.Import
)
ident(
  int_ref _b__066_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _a__065_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _b__066_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _a__065_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _b__066_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _a__065_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _b__066_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t.Import
)
ident(
  int_ref _a__065_ "src/ast.ml" 83 2238 2242 "src/ast.ml" 83 2238 2305
)
type(
  t * t
)
type(
  t
)
type(
  t.Import
)
ident(
  def _b__066_ "src/ast.ml" 83 2238 2259 "src/ast.ml" 83 2238 2267
)
type(
  t
)
type(
  t.Import
)
ident(
  def _a__065_ "src/ast.ml" 83 2238 2259 "src/ast.ml" 83 2238 2267
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'k2 list
)
type(
  'k2 list
)
ident(
  def bnds "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t
)
type(
  t.Import
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
ident(
  int_ref bnds "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  'l2 list
)
type(
  'l2 list
)
ident(
  def bnds "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t
)
type(
  t.Import
)
"src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  t -> t -> int
)
ident(
  int_ref compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> t -> int
)
type(
  t -> t -> int
)
type(
  t -> t -> int
)
type(
  t -> int
)
type(
  int
)
type(
  int
)
type(
  t * t
)
type(
  t
)
ident(
  int_ref b__026_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref a__025_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  bool
)
type(
  t
)
ident(
  int_ref b__026_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref a__025_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> t -> bool
)
ident(
  int_ref Ppx_compare_lib.phys_equal "src/ppx_compare_lib.mli" 4 113 113 "src/ppx_compare_lib.mli" 4 113 146
)
type(
  t
)
ident(
  def b__026_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def a__025_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> t -> int
)
ident(
  def compare "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
ident(
  def sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  Sexp.t -> t
)
ident(
  int_ref t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
type(
  Sexp.t -> t
)
type(
  Sexp.t -> t
)
type(
  Sexp.t -> t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.unexpected_stag "sexp_conv_error.ml" 36 962 966 "sexp_conv_error.ml" 36 962 981
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.empty_list_invalid_sum "sexp_conv_error.ml" 33 849 853 "sexp_conv_error.ml" 33 849 875
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.nested_list_invalid_sum "sexp_conv_error.ml" 30 736 740 "sexp_conv_error.ml" 30 736 763
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_no_args "sexp_conv_error.ml" 18 363 367 "sexp_conv_error.ml" 18 363 379
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_takes_args "sexp_conv_error.ml" 27 628 632 "sexp_conv_error.ml" 27 628 647
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Import
)
type(
  t
)
ident(
  int_ref e_body_value "src/ast.ml" 83 2238 2294 "src/ast.ml" 83 2238 2300
)
type(
  t
)
ident(
  int_ref e_mod_value "src/ast.ml" 83 2238 2283 "src/ast.ml" 83 2238 2288
)
type(
  variable
)
ident(
  int_ref a_value "src/ast.ml" 83 2238 2269 "src/ast.ml" 83 2238 2270
)
type(
  variable
)
ident(
  int_ref x_value "src/ast.ml" 83 2238 2255 "src/ast.ml" 83 2238 2256
)
type(
  t
)
type(
  variable option * variable option * t option * t option
)
type(
  variable option * variable option * t option * t option
)
type(
  variable option * variable option * t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Export
)
type(
  Type.t
)
ident(
  int_ref tau_mod_value "src/ast.ml" 82 2178 2220 "src/ast.ml" 82 2178 2227
)
type(
  Type.t
)
ident(
  int_ref tau_adt_value "src/ast.ml" 82 2178 2202 "src/ast.ml" 82 2178 2209
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 82 2178 2195 "src/ast.ml" 82 2178 2196
)
type(
  t
)
type(
  t option * Type.t option * Type.t option
)
type(
  t option * Type.t option * Type.t option
)
type(
  t option * Type.t option * Type.t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_incorrect_n_args "sexp_conv_error.ml" 21 465 469 "sexp_conv_error.ml" 21 465 490
)
type(
  t
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
ident(
  int_ref sexp_args "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Fold_
)
type(
  Type.t
)
ident(
  int_ref tau_value "src/ast.ml" 79 2122 2145 "src/ast.ml" 79 2122 2148
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 79 2122 2138 "src/ast.ml" 79 2122 2139
)
type(
  t
)
type(
  t option * Type.t option
)
type(
  t option * Type.t option
)
type(
  t option * Type.t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.TyApp
)
type(
  Type.t
)
ident(
  int_ref tau_value "src/ast.ml" 77 2084 2107 "src/ast.ml" 77 2084 2110
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 77 2084 2100 "src/ast.ml" 77 2084 2101
)
type(
  t
)
type(
  t option * Type.t option
)
type(
  t option * Type.t option
)
type(
  t option * Type.t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.TyLam
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 76 2047 2077 "src/ast.ml" 76 2047 2078
)
type(
  variable
)
ident(
  int_ref a_value "src/ast.ml" 76 2047 2063 "src/ast.ml" 76 2047 2064
)
type(
  t
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  variable option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Fix
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 74 1997 2039 "src/ast.ml" 74 1997 2040
)
type(
  Type.t
)
ident(
  int_ref tau_value "src/ast.ml" 74 1997 2025 "src/ast.ml" 74 1997 2028
)
type(
  variable
)
ident(
  int_ref x_value "src/ast.ml" 74 1997 2011 "src/ast.ml" 74 1997 2012
)
type(
  t
)
type(
  variable option * Type.t option * t option
)
type(
  variable option * Type.t option * t option
)
type(
  variable option * Type.t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Case
)
type(
  t
)
ident(
  int_ref eright_value "src/ast.ml" 72 1915 1984 "src/ast.ml" 72 1915 1990
)
type(
  variable
)
ident(
  int_ref xright_value "src/ast.ml" 72 1915 1965 "src/ast.ml" 72 1915 1971
)
type(
  t
)
ident(
  int_ref eleft_value "src/ast.ml" 72 1915 1955 "src/ast.ml" 72 1915 1960
)
type(
  variable
)
ident(
  int_ref xleft_value "src/ast.ml" 72 1915 1937 "src/ast.ml" 72 1915 1942
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 72 1915 1930 "src/ast.ml" 72 1915 1931
)
type(
  t
)
type(
  t option * variable option * t option * variable option * t option
)
type(
  t option * variable option * t option * variable option * t option
)
type(
  t option * variable option * t option * variable option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Inject
)
type(
  Type.t
)
ident(
  int_ref tau_value "src/ast.ml" 71 1862 1901 "src/ast.ml" 71 1862 1904
)
type(
  direction
)
ident(
  int_ref d_value "src/ast.ml" 71 1862 1886 "src/ast.ml" 71 1862 1887
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 71 1862 1879 "src/ast.ml" 71 1862 1880
)
type(
  t
)
type(
  t option * direction option * Type.t option
)
type(
  t option * direction option * Type.t option
)
type(
  t option * direction option * Type.t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Project
)
type(
  direction
)
ident(
  int_ref d_value "src/ast.ml" 69 1821 1846 "src/ast.ml" 69 1821 1847
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 69 1821 1839 "src/ast.ml" 69 1821 1840
)
type(
  t
)
type(
  t option * direction option
)
type(
  t option * direction option
)
type(
  t option * direction option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Pair
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 68 1785 1810 "src/ast.ml" 68 1785 1815
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 68 1785 1800 "src/ast.ml" 68 1785 1804
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.App
)
type(
  t
)
ident(
  int_ref arg_value "src/ast.ml" 65 1741 1764 "src/ast.ml" 65 1741 1767
)
type(
  t
)
ident(
  int_ref lam_value "src/ast.ml" 65 1741 1755 "src/ast.ml" 65 1741 1758
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Lam
)
type(
  t
)
ident(
  int_ref e_value "src/ast.ml" 64 1692 1734 "src/ast.ml" 64 1692 1735
)
type(
  Type.t
)
ident(
  int_ref tau_value "src/ast.ml" 64 1692 1720 "src/ast.ml" 64 1692 1723
)
type(
  variable
)
ident(
  int_ref x_value "src/ast.ml" 64 1692 1706 "src/ast.ml" 64 1692 1707
)
type(
  t
)
type(
  variable option * Type.t option * t option
)
type(
  variable option * Type.t option * t option
)
type(
  variable option * Type.t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_incorrect_n_args "sexp_conv_error.ml" 21 465 469 "sexp_conv_error.ml" 21 465 490
)
type(
  t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
ident(
  int_ref sexp_args "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Or
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 61 1635 1658 "src/ast.ml" 61 1635 1663
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 61 1635 1648 "src/ast.ml" 61 1635 1652
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.And
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 60 1600 1624 "src/ast.ml" 60 1600 1629
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 60 1600 1614 "src/ast.ml" 60 1600 1618
)
type(
  t
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Relop
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 59 1548 1589 "src/ast.ml" 59 1548 1594
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 59 1548 1579 "src/ast.ml" 59 1548 1583
)
type(
  relop
)
ident(
  int_ref relop_value "src/ast.ml" 59 1548 1564 "src/ast.ml" 59 1548 1569
)
type(
  t
)
type(
  relop option * t option * t option
)
type(
  relop option * t option * t option
)
type(
  relop option * t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.If
)
type(
  t
)
ident(
  int_ref else__value "src/ast.ml" 58 1503 1537 "src/ast.ml" 58 1503 1542
)
type(
  t
)
ident(
  int_ref then__value "src/ast.ml" 58 1503 1526 "src/ast.ml" 58 1503 1531
)
type(
  t
)
ident(
  int_ref cond_value "src/ast.ml" 58 1503 1516 "src/ast.ml" 58 1503 1520
)
type(
  t
)
type(
  t option * t option * t option
)
type(
  t option * t option * t option
)
type(
  t option * t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  (bool * variable) list
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> (bool * variable) list -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_undefined_elements "sexp_conv_error.ml" 65 1999 2003 "sexp_conv_error.ml" 65 1999 2028
)
type(
  t.Binop
)
type(
  t
)
ident(
  int_ref right_value "src/ast.ml" 55 1431 1472 "src/ast.ml" 55 1431 1477
)
type(
  t
)
ident(
  int_ref left_value "src/ast.ml" 55 1431 1462 "src/ast.ml" 55 1431 1466
)
type(
  binop
)
ident(
  int_ref binop_value "src/ast.ml" 55 1431 1447 "src/ast.ml" 55 1431 1452
)
type(
  t
)
type(
  binop option * t option * t option
)
type(
  binop option * t option * t option
)
type(
  binop option * t option * t option
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_extra_fields "sexp_conv_error.ml" 57 1639 1643 "sexp_conv_error.ml" 57 1639 1662
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable list -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_duplicate_fields "sexp_conv_error.ml" 54 1508 1512 "sexp_conv_error.ml" 54 1508 1535
)
type(
  variable list
)
type(
  variable list
)
type(
  variable list
)
type(
  variable
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t
)
ident(
  int_ref sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> Sexp.t -> unit
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.record_only_pairs_expected "sexp_conv_error.ml" 42 1088 1092 "sexp_conv_error.ml" 42 1088 1118
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  unit
)
type(
  unit
)
type(
  Sexp.t list
)
ident(
  int_ref tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list
)
type(
  variable list ref
)
ident(
  int_ref extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref -> variable list -> unit
)
ident(
  int_ref Core.( := ) "src/core_pervasives.mli" 1041 42306 42306 "src/core_pervasives.mli" 1041 42306 42359
)
type(
  bool
)
type(
  bool ref
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv.record_check_extra_fields "sexp_conv.mli" 140 5503 5503 "sexp_conv.mli" 140 5503 5543
)
type(
  bool ref -> bool
)
ident(
  int_ref Core.( ! ) "src/core_pervasives.mli" 1037 42163 42163 "src/core_pervasives.mli" 1037 42163 42204
)
type(
  variable
)
type(
  variable
)
ident(
  int_ref field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def tail "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def _field_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def field_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list -> unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
type(
  variable list
)
type(
  variable list -> variable list ref
)
ident(
  int_ref Core.ref "src/core_pervasives.mli" 1034 42057 42057 "src/core_pervasives.mli" 1034 42057 42101
)
type(
  variable list ref
)
ident(
  def extra "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable list ref
)
ident(
  def duplicates "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  Sexp.t
)
ident(
  int_ref _sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> variable -> Sexp.t -> t
)
ident(
  int_ref Ppx_sexp_conv_lib.Conv_error.stag_incorrect_n_args "sexp_conv_error.ml" 21 465 469 "sexp_conv_error.ml" 21 465 490
)
type(
  t
)
type(
  int
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  int
)
type(
  Sexp.t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t list
)
ident(
  int_ref sexp_args "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def _sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def sexp_args "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def _sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def sexp_args "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def field_sexps "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  Sexp.t
)
ident(
  def _sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  Sexp.t list
)
type(
  Sexp.t list
)
ident(
  def sexp_args "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t
)
type(
  variable
)
ident(
  def _tag "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
ident(
  def _tp_loc "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Sexp.t -> t
)
ident(
  def t_of_sexp "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
type(
  t -> Sexp.t
)
ident(
  def sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  (variable * int) list
)
ident(
  int_ref descriptions "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  variable * int
)
type(
  int
)
type(
  variable
)
type(
  (variable * int) list
)
type(
  (variable * int) list
)
ident(
  def descriptions "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> variable
)
ident(
  int_ref to_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> variable
)
type(
  t -> variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  variable
)
type(
  t -> variable
)
ident(
  def to_name "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> int
)
ident(
  int_ref to_rank "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> int
)
type(
  t -> int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  t -> int
)
ident(
  def to_rank "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t ->
  num:((int -> t) Variantslib.Variant.t -> int -> 'm2) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         binop:binop -> left:t -> right:t -> 'm2) ->
  true:(t Variantslib.Variant.t -> 'm2) ->
  false:(t Variantslib.Variant.t -> 'm2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'm2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'm2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'm2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'm2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'm2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'm2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'm2) ->
  unit:(t Variantslib.Variant.t -> 'm2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'm2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'm2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'm2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'm2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'm2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'm2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'm2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'm2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'm2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'm2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'm2) ->
  'm2
)
ident(
  int_ref map "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t ->
  num:((int -> t) Variantslib.Variant.t -> int -> 'm2) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         binop:binop -> left:t -> right:t -> 'm2) ->
  true:(t Variantslib.Variant.t -> 'm2) ->
  false:(t Variantslib.Variant.t -> 'm2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'm2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'm2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'm2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'm2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'm2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'm2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'm2) ->
  unit:(t Variantslib.Variant.t -> 'm2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'm2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'm2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'm2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'm2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'm2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'm2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'm2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'm2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'm2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'm2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'm2) ->
  'm2
)
type(
  t ->
  num:((int -> t) Variantslib.Variant.t -> int -> 'n2) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         binop:binop -> left:t -> right:t -> 'n2) ->
  true:(t Variantslib.Variant.t -> 'n2) ->
  false:(t Variantslib.Variant.t -> 'n2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  num:((int -> t) Variantslib.Variant.t -> int -> 'n2) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         binop:binop -> left:t -> right:t -> 'n2) ->
  true:(t Variantslib.Variant.t -> 'n2) ->
  false:(t Variantslib.Variant.t -> 'n2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         binop:binop -> left:t -> right:t -> 'n2) ->
  true:(t Variantslib.Variant.t -> 'n2) ->
  false:(t Variantslib.Variant.t -> 'n2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  true:(t Variantslib.Variant.t -> 'n2) ->
  false:(t Variantslib.Variant.t -> 'n2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  false:(t Variantslib.Variant.t -> 'n2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
type(
  'n2
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t ->
  x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2
)
ident(
  int_ref import_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  Type.t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t ->
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2
)
ident(
  int_ref export_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t
)
ident(
  int_ref unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t -> t -> 'n2
)
ident(
  int_ref unfold_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> e:t -> tau:Type.t -> 'n2
)
ident(
  int_ref fold__fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> e:t -> tau:Type.t -> 'n2
)
ident(
  int_ref tyapp_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t -> a:variable -> e:t -> 'n2
)
ident(
  int_ref tylam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
  x:variable -> tau:Type.t -> e:t -> 'n2
)
ident(
  int_ref fix_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v4 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t ->
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2
)
ident(
  int_ref case_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  Type.t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
  e:t -> d:direction -> tau:Type.t -> 'n2
)
ident(
  int_ref inject_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  direction
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
ident(
  int_ref project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t ->
  e:t -> d:direction -> 'n2
)
ident(
  int_ref project_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n2
)
ident(
  int_ref pair_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> 'n2
)
ident(
  int_ref unit_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
ident(
  int_ref app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2
)
ident(
  int_ref app_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
  x:variable -> tau:Type.t -> e:t -> 'n2
)
ident(
  int_ref lam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t -> variable -> 'n2
)
ident(
  int_ref var_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n2
)
ident(
  int_ref or_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n2
)
ident(
  int_ref and_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
  relop:relop -> left:t -> right:t -> 'n2
)
ident(
  int_ref relop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
ident(
  int_ref if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
  cond:t -> then_:t -> else_:t -> 'n2
)
ident(
  int_ref if_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> 'n2
)
ident(
  int_ref false_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> 'n2
)
ident(
  int_ref true_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
  binop:binop -> left:t -> right:t -> 'n2
)
ident(
  int_ref binop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n2
)
type(
  int
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t -> int -> 'n2
)
ident(
  int_ref num_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Import
)
type(
  t
)
ident(
  def v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Export
)
type(
  Type.t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Fold_
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.TyApp
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.TyLam
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Fix
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Case
)
type(
  t
)
ident(
  def v4 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Inject
)
type(
  Type.t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Project
)
type(
  direction
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Pair
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t.App
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Lam
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Or
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.And
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.Relop
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t.If
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t.Binop
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  int
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref t__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t ->
  x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2
)
ident(
  def import_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t ->
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2
)
ident(
  def export_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t -> t -> 'n2
)
ident(
  def unfold_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> e:t -> tau:Type.t -> 'n2
)
ident(
  def fold__fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> e:t -> tau:Type.t -> 'n2
)
ident(
  def tyapp_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t -> a:variable -> e:t -> 'n2
)
ident(
  def tylam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
  x:variable -> tau:Type.t -> e:t -> 'n2
)
ident(
  def fix_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t ->
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2
)
ident(
  def case_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
  e:t -> d:direction -> tau:Type.t -> 'n2
)
ident(
  def inject_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t ->
  e:t -> d:direction -> 'n2
)
ident(
  def project_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n2
)
ident(
  def pair_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> 'n2
)
ident(
  def unit_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2
)
ident(
  def app_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
  x:variable -> tau:Type.t -> e:t -> 'n2
)
ident(
  def lam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t -> variable -> 'n2
)
ident(
  def var_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n2
)
ident(
  def or_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> left:t -> right:t -> 'n2
)
ident(
  def and_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
  relop:relop -> left:t -> right:t -> 'n2
)
ident(
  def relop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
  cond:t -> then_:t -> else_:t -> 'n2
)
ident(
  def if_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> 'n2
)
ident(
  def false_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> 'n2
)
ident(
  def true_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
  binop:binop -> left:t -> right:t -> 'n2
)
ident(
  def binop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t -> int -> 'n2
)
ident(
  def num_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def t__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t ->
  num:((int -> t) Variantslib.Variant.t -> int -> 'n2) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         binop:binop -> left:t -> right:t -> 'n2) ->
  true:(t Variantslib.Variant.t -> 'n2) ->
  false:(t Variantslib.Variant.t -> 'n2) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t ->
      cond:t -> then_:t -> else_:t -> 'n2) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         relop:relop -> left:t -> right:t -> 'n2) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t ->
       left:t -> right:t -> 'n2) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t ->
      left:t -> right:t -> 'n2) ->
  var:((variable -> t) Variantslib.Variant.t -> variable -> 'n2) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> lam:t -> arg:t -> 'n2) ->
  unit:(t Variantslib.Variant.t -> 'n2) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t ->
        left:t -> right:t -> 'n2) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t ->
           e:t -> d:direction -> 'n2) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          e:t -> d:direction -> tau:Type.t -> 'n2) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t ->
        e:t ->
        xleft:variable -> eleft:t -> xright:variable -> eright:t -> 'n2) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t ->
       x:variable -> tau:Type.t -> e:t -> 'n2) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t ->
         a:variable -> e:t -> 'n2) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t ->
         e:t -> tau:Type.t -> 'n2) ->
  unfold:((t -> t) Variantslib.Variant.t -> t -> 'n2) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t ->
          e:t -> tau_adt:Type.t -> tau_mod:Type.t -> 'n2) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t ->
          x:variable -> a:variable -> e_mod:t -> e_body:t -> 'n2) ->
  'n2
)
ident(
  def map "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  num:((int -> t) Variantslib.Variant.t -> unit) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  true:(t Variantslib.Variant.t -> unit) ->
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
ident(
  int_ref iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  num:((int -> t) Variantslib.Variant.t -> unit) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  true:(t Variantslib.Variant.t -> unit) ->
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  num:((int -> t) Variantslib.Variant.t -> unit) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  true:(t Variantslib.Variant.t -> unit) ->
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  true:(t Variantslib.Variant.t -> unit) ->
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  true:(t Variantslib.Variant.t -> unit) ->
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t -> unit
)
ident(
  int_ref import_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t ->
  unit
)
ident(
  int_ref export_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (t -> t) Variantslib.Variant.t
)
ident(
  int_ref unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref unfold_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref fold__fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref tyapp_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref tylam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref fix_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t -> unit
)
ident(
  int_ref case_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref inject_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
ident(
  int_ref project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref project_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref pair_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  int_ref unit_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
ident(
  int_ref app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref app_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref lam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref var_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref or_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref and_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref relop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
ident(
  int_ref if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref if_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  int_ref false_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  int_ref true_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref binop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  unit
)
type(
  unit
)
type(
  (int -> t) Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t -> unit
)
ident(
  int_ref num_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t -> unit
)
ident(
  def import_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t ->
  unit
)
ident(
  def export_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t -> unit
)
ident(
  def unfold_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit
)
ident(
  def fold__fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit
)
ident(
  def tyapp_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def tylam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def fix_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t -> unit
)
ident(
  def case_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t -> unit
)
ident(
  def inject_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t -> unit
)
ident(
  def project_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def pair_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  def unit_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def app_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def lam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t -> unit
)
ident(
  def var_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def or_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def and_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def relop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def if_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  def false_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t -> unit
)
ident(
  def true_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> unit
)
ident(
  def binop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t -> unit
)
ident(
  def num_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  num:((int -> t) Variantslib.Variant.t -> unit) ->
  binop:((binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  true:(t Variantslib.Variant.t -> unit) ->
  false:(t Variantslib.Variant.t -> unit) ->
  if:((cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> unit) ->
  relop:((relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t ->
         unit) ->
  and:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  or:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  var:((variable -> t) Variantslib.Variant.t -> unit) ->
  lam:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  app:((lam:t -> arg:t -> t) Variantslib.Variant.t -> unit) ->
  unit:(t Variantslib.Variant.t -> unit) ->
  pair:((left:t -> right:t -> t) Variantslib.Variant.t -> unit) ->
  project:((e:t -> d:direction -> t) Variantslib.Variant.t -> unit) ->
  inject:((e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          unit) ->
  case:((e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> unit) ->
  fix:((x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tylam:((a:variable -> e:t -> t) Variantslib.Variant.t -> unit) ->
  tyapp:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  fold_:((e:t -> tau:Type.t -> t) Variantslib.Variant.t -> unit) ->
  unfold:((t -> t) Variantslib.Variant.t -> unit) ->
  export:((e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> unit) ->
  import:((x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> unit) ->
  unit
)
ident(
  def iter "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  init:'o2 ->
  num:('o2 -> (int -> t) Variantslib.Variant.t -> 'p2) ->
  binop:('p2 ->
         (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'q2) ->
  true:('q2 -> t Variantslib.Variant.t -> 'r2) ->
  false:('r2 -> t Variantslib.Variant.t -> 's2) ->
  if:('s2 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 't2) ->
  relop:('t2 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'u2) ->
  and:('u2 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'v2) ->
  or:('v2 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'w2) ->
  var:('w2 -> (variable -> t) Variantslib.Variant.t -> 'x2) ->
  lam:('x2 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'y2) ->
  app:('y2 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'z2) ->
  unit:('z2 -> t Variantslib.Variant.t -> 'a3) ->
  pair:('a3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'b3) ->
  project:('b3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'c3) ->
  inject:('c3 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'd3) ->
  case:('d3 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'e3) ->
  fix:('e3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'f3) ->
  tylam:('f3 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'g3) ->
  tyapp:('g3 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'h3) ->
  fold_:('h3 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'i3) ->
  unfold:('i3 -> (t -> t) Variantslib.Variant.t -> 'j3) ->
  export:('j3 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'k3) ->
  import:('k3 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'l3) ->
  'l3
)
ident(
  int_ref fold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  init:'o2 ->
  num:('o2 -> (int -> t) Variantslib.Variant.t -> 'p2) ->
  binop:('p2 ->
         (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'q2) ->
  true:('q2 -> t Variantslib.Variant.t -> 'r2) ->
  false:('r2 -> t Variantslib.Variant.t -> 's2) ->
  if:('s2 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 't2) ->
  relop:('t2 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'u2) ->
  and:('u2 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'v2) ->
  or:('v2 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'w2) ->
  var:('w2 -> (variable -> t) Variantslib.Variant.t -> 'x2) ->
  lam:('x2 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'y2) ->
  app:('y2 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'z2) ->
  unit:('z2 -> t Variantslib.Variant.t -> 'a3) ->
  pair:('a3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'b3) ->
  project:('b3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'c3) ->
  inject:('c3 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'd3) ->
  case:('d3 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'e3) ->
  fix:('e3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'f3) ->
  tylam:('f3 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'g3) ->
  tyapp:('g3 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'h3) ->
  fold_:('h3 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'i3) ->
  unfold:('i3 -> (t -> t) Variantslib.Variant.t -> 'j3) ->
  export:('j3 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'k3) ->
  import:('k3 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'l3) ->
  'l3
)
type(
  init:'m3 ->
  num:('m3 -> (int -> t) Variantslib.Variant.t -> 'n3) ->
  binop:('n3 ->
         (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'o3) ->
  true:('o3 -> t Variantslib.Variant.t -> 'p3) ->
  false:('p3 -> t Variantslib.Variant.t -> 'q3) ->
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  num:('m3 -> (int -> t) Variantslib.Variant.t -> 'n3) ->
  binop:('n3 ->
         (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'o3) ->
  true:('o3 -> t Variantslib.Variant.t -> 'p3) ->
  false:('p3 -> t Variantslib.Variant.t -> 'q3) ->
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  binop:('n3 ->
         (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'o3) ->
  true:('o3 -> t Variantslib.Variant.t -> 'p3) ->
  false:('p3 -> t Variantslib.Variant.t -> 'q3) ->
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  true:('o3 -> t Variantslib.Variant.t -> 'p3) ->
  false:('p3 -> t Variantslib.Variant.t -> 'q3) ->
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  false:('p3 -> t Variantslib.Variant.t -> 'q3) ->
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
type(
  'j4
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'i4
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'h4
)
type(
  (t -> t) Variantslib.Variant.t
)
ident(
  int_ref unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'g4
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'f4
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'e4
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'd4
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'c4
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'b4
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'a4
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
ident(
  int_ref project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'z3
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'y3
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'x3
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
ident(
  int_ref app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'w3
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'v3
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'u3
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  't3
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  's3
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'r3
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
ident(
  int_ref if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'q3
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'p3
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'o3
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n3
)
type(
  (int -> t) Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'm3
)
ident(
  int_ref init__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'm3 -> (int -> t) Variantslib.Variant.t -> 'n3
)
ident(
  int_ref num_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n3 -> (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'o3
)
ident(
  int_ref binop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'o3 -> t Variantslib.Variant.t -> 'p3
)
ident(
  int_ref true_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'p3 -> t Variantslib.Variant.t -> 'q3
)
ident(
  int_ref false_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3
)
ident(
  int_ref if_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'r3 -> (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3
)
ident(
  int_ref relop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  's3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3
)
ident(
  int_ref and_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  't3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3
)
ident(
  int_ref or_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'u3 -> (variable -> t) Variantslib.Variant.t -> 'v3
)
ident(
  int_ref var_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'v3 -> (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3
)
ident(
  int_ref lam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3
)
ident(
  int_ref app_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'x3 -> t Variantslib.Variant.t -> 'y3
)
ident(
  int_ref unit_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3
)
ident(
  int_ref pair_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4
)
ident(
  int_ref project_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'a4 -> (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t -> 'b4
)
ident(
  int_ref inject_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'b4 ->
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t -> 'c4
)
ident(
  int_ref case_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'c4 -> (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4
)
ident(
  int_ref fix_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'd4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4
)
ident(
  int_ref tylam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4
)
ident(
  int_ref tyapp_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4
)
ident(
  int_ref fold__fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'g4 -> (t -> t) Variantslib.Variant.t -> 'h4
)
ident(
  int_ref unfold_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'h4 ->
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t -> 'i4
)
ident(
  int_ref export_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'i4 ->
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t -> 'j4
)
ident(
  int_ref import_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'i4 ->
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t -> 'j4
)
ident(
  def import_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'h4 ->
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t -> 'i4
)
ident(
  def export_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'g4 -> (t -> t) Variantslib.Variant.t -> 'h4
)
ident(
  def unfold_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4
)
ident(
  def fold__fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4
)
ident(
  def tyapp_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'd4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4
)
ident(
  def tylam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'c4 -> (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4
)
ident(
  def fix_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'b4 ->
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t -> 'c4
)
ident(
  def case_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'a4 -> (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t -> 'b4
)
ident(
  def inject_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4
)
ident(
  def project_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3
)
ident(
  def pair_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'x3 -> t Variantslib.Variant.t -> 'y3
)
ident(
  def unit_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3
)
ident(
  def app_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'v3 -> (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3
)
ident(
  def lam_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'u3 -> (variable -> t) Variantslib.Variant.t -> 'v3
)
ident(
  def var_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  't3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3
)
ident(
  def or_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  's3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3
)
ident(
  def and_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'r3 -> (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3
)
ident(
  def relop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3
)
ident(
  def if_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'p3 -> t Variantslib.Variant.t -> 'q3
)
ident(
  def false_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'o3 -> t Variantslib.Variant.t -> 'p3
)
ident(
  def true_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'n3 -> (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'o3
)
ident(
  def binop_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'm3 -> (int -> t) Variantslib.Variant.t -> 'n3
)
ident(
  def num_fun__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  'm3
)
ident(
  def init__ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  init:'m3 ->
  num:('m3 -> (int -> t) Variantslib.Variant.t -> 'n3) ->
  binop:('n3 ->
         (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t -> 'o3) ->
  true:('o3 -> t Variantslib.Variant.t -> 'p3) ->
  false:('p3 -> t Variantslib.Variant.t -> 'q3) ->
  if:('q3 -> (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t -> 'r3) ->
  relop:('r3 ->
         (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t -> 's3) ->
  and:('s3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 't3) ->
  or:('t3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'u3) ->
  var:('u3 -> (variable -> t) Variantslib.Variant.t -> 'v3) ->
  lam:('v3 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'w3) ->
  app:('w3 -> (lam:t -> arg:t -> t) Variantslib.Variant.t -> 'x3) ->
  unit:('x3 -> t Variantslib.Variant.t -> 'y3) ->
  pair:('y3 -> (left:t -> right:t -> t) Variantslib.Variant.t -> 'z3) ->
  project:('z3 -> (e:t -> d:direction -> t) Variantslib.Variant.t -> 'a4) ->
  inject:('a4 ->
          (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t ->
          'b4) ->
  case:('b4 ->
        (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
        Variantslib.Variant.t -> 'c4) ->
  fix:('c4 ->
       (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t -> 'd4) ->
  tylam:('d4 -> (a:variable -> e:t -> t) Variantslib.Variant.t -> 'e4) ->
  tyapp:('e4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'f4) ->
  fold_:('f4 -> (e:t -> tau:Type.t -> t) Variantslib.Variant.t -> 'g4) ->
  unfold:('g4 -> (t -> t) Variantslib.Variant.t -> 'h4) ->
  export:('h4 ->
          (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t)
          Variantslib.Variant.t -> 'i4) ->
  import:('i4 ->
          (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
          Variantslib.Variant.t -> 'j4) ->
  'j4
)
ident(
  def fold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
type(
  x:variable -> a:variable -> e_mod:t -> e_body:t -> t
)
ident(
  int_ref import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (x:variable -> a:variable -> e_mod:t -> e_body:t -> t)
  Variantslib.Variant.t
)
ident(
  def import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
type(
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t
)
ident(
  int_ref export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t) Variantslib.Variant.t
)
ident(
  def export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t
)
ident(
  int_ref unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (t -> t) Variantslib.Variant.t
)
type(
  (t -> t) Variantslib.Variant.t
)
type(
  t -> t
)
ident(
  int_ref unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (t -> t) Variantslib.Variant.t
)
ident(
  def unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
type(
  e:t -> tau:Type.t -> t
)
ident(
  int_ref fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  def fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
type(
  e:t -> tau:Type.t -> t
)
ident(
  int_ref tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (e:t -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  def tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
type(
  a:variable -> e:t -> t
)
ident(
  int_ref tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (a:variable -> e:t -> t) Variantslib.Variant.t
)
ident(
  def tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
ident(
  int_ref fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  def fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
ident(
  int_ref case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
type(
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t
)
ident(
  int_ref case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t)
  Variantslib.Variant.t
)
ident(
  def case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  int_ref inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
type(
  e:t -> d:direction -> tau:Type.t -> t
)
ident(
  int_ref inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (e:t -> d:direction -> tau:Type.t -> t) Variantslib.Variant.t
)
ident(
  def inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
ident(
  int_ref project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
type(
  e:t -> d:direction -> t
)
ident(
  int_ref project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (e:t -> d:direction -> t) Variantslib.Variant.t
)
ident(
  def project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t
)
type(
  t Variantslib.Variant.t
)
type(
  t
)
ident(
  int_ref unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  t Variantslib.Variant.t
)
ident(
  def unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
ident(
  int_ref app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
type(
  lam:t -> arg:t -> t
)
ident(
  int_ref app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (lam:t -> arg:t -> t) Variantslib.Variant.t
)
ident(
  def app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  int_ref lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
ident(
  int_ref lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (x:variable -> tau:Type.t -> e:t -> t) Variantslib.Variant.t
)
ident(
  def lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  int_ref var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (variable -> t) Variantslib.Variant.t
)
type(
  (variable -> t) Variantslib.Variant.t
)
type(
  variable -> t
)
ident(
  int_ref var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (variable -> t) Variantslib.Variant.t
)
ident(
  def var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  relop:relop -> left:t -> right:t -> t
)
ident(
  int_ref relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (relop:relop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
ident(
  int_ref if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
type(
  cond:t -> then_:t -> else_:t -> t
)
ident(
  int_ref if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (cond:t -> then_:t -> else_:t -> t) Variantslib.Variant.t
)
ident(
  def if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t
)
type(
  t Variantslib.Variant.t
)
type(
  t
)
ident(
  int_ref false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  t Variantslib.Variant.t
)
ident(
  def false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t
)
ident(
  int_ref true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t Variantslib.Variant.t
)
type(
  t Variantslib.Variant.t
)
type(
  t
)
ident(
  int_ref true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  t Variantslib.Variant.t
)
ident(
  def true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  int_ref binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
type(
  binop:binop -> left:t -> right:t -> t
)
ident(
  int_ref binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (binop:binop -> left:t -> right:t -> t) Variantslib.Variant.t
)
ident(
  def binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t
)
ident(
  int_ref num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  (int -> t) Variantslib.Variant.t
)
type(
  (int -> t) Variantslib.Variant.t
)
type(
  int -> t
)
ident(
  int_ref num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int
)
type(
  variable
)
type(
  (int -> t) Variantslib.Variant.t
)
ident(
  def num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> a:variable -> e_mod:t -> e_body:t -> t
)
ident(
  int_ref import "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> a:variable -> e_mod:t -> e_body:t -> t
)
type(
  x:variable -> a:variable -> e_mod:t -> e_body:t -> t
)
type(
  a:variable -> e_mod:t -> e_body:t -> t
)
type(
  e_mod:t -> e_body:t -> t
)
type(
  e_body:t -> t
)
type(
  t.Import
)
type(
  t
)
ident(
  int_ref v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> a:variable -> e_mod:t -> e_body:t -> t
)
ident(
  def import "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t
)
ident(
  int_ref export "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t
)
type(
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t
)
type(
  tau_adt:Type.t -> tau_mod:Type.t -> t
)
type(
  tau_mod:Type.t -> t
)
type(
  t.Export
)
type(
  Type.t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  Type.t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> tau_adt:Type.t -> tau_mod:Type.t -> t
)
ident(
  def export "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t -> t
)
ident(
  int_ref unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> t
)
type(
  t -> t
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t -> t
)
ident(
  def unfold "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  e:t -> tau:Type.t -> t
)
ident(
  int_ref fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> tau:Type.t -> t
)
type(
  e:t -> tau:Type.t -> t
)
type(
  tau:Type.t -> t
)
type(
  t.Fold_
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> tau:Type.t -> t
)
ident(
  def fold_ "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  e:t -> tau:Type.t -> t
)
ident(
  int_ref tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> tau:Type.t -> t
)
type(
  e:t -> tau:Type.t -> t
)
type(
  tau:Type.t -> t
)
type(
  t.TyApp
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> tau:Type.t -> t
)
ident(
  def tyapp "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  a:variable -> e:t -> t
)
ident(
  int_ref tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  a:variable -> e:t -> t
)
type(
  a:variable -> e:t -> t
)
type(
  e:t -> t
)
type(
  t.TyLam
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  a:variable -> e:t -> t
)
ident(
  def tylam "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
ident(
  int_ref fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
type(
  tau:Type.t -> e:t -> t
)
type(
  e:t -> t
)
type(
  t.Fix
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
ident(
  def fix "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t
)
ident(
  int_ref case "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t
)
type(
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t
)
type(
  xleft:variable -> eleft:t -> xright:variable -> eright:t -> t
)
type(
  eleft:t -> xright:variable -> eright:t -> t
)
type(
  xright:variable -> eright:t -> t
)
type(
  eright:t -> t
)
type(
  t.Case
)
type(
  t
)
ident(
  int_ref v4 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v4 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v3 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> xleft:variable -> eleft:t -> xright:variable -> eright:t -> t
)
ident(
  def case "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  e:t -> d:direction -> tau:Type.t -> t
)
ident(
  int_ref inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> d:direction -> tau:Type.t -> t
)
type(
  e:t -> d:direction -> tau:Type.t -> t
)
type(
  d:direction -> tau:Type.t -> t
)
type(
  tau:Type.t -> t
)
type(
  t.Inject
)
type(
  Type.t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  Type.t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  direction
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> d:direction -> tau:Type.t -> t
)
ident(
  def inject "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  e:t -> d:direction -> t
)
ident(
  int_ref project "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> d:direction -> t
)
type(
  e:t -> d:direction -> t
)
type(
  d:direction -> t
)
type(
  t.Project
)
type(
  direction
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  direction
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  e:t -> d:direction -> t
)
ident(
  def project "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.Pair
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  left:t -> right:t -> t
)
ident(
  def pair "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t
)
ident(
  int_ref unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def unit "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  lam:t -> arg:t -> t
)
ident(
  int_ref app "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  lam:t -> arg:t -> t
)
type(
  lam:t -> arg:t -> t
)
type(
  arg:t -> t
)
type(
  t.App
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  lam:t -> arg:t -> t
)
ident(
  def app "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
ident(
  int_ref lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
type(
  tau:Type.t -> e:t -> t
)
type(
  e:t -> t
)
type(
  t.Lam
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  Type.t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  x:variable -> tau:Type.t -> e:t -> t
)
ident(
  def lam "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  variable -> t
)
ident(
  int_ref var "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> t
)
type(
  variable -> t
)
type(
  variable
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  variable
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  variable -> t
)
ident(
  def var "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref or "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.Or
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  left:t -> right:t -> t
)
ident(
  def or "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  left:t -> right:t -> t
)
ident(
  int_ref and "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.And
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  left:t -> right:t -> t
)
ident(
  def and "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  relop:relop -> left:t -> right:t -> t
)
ident(
  int_ref relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop:relop -> left:t -> right:t -> t
)
type(
  relop:relop -> left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.Relop
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  relop:relop -> left:t -> right:t -> t
)
ident(
  def relop "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  cond:t -> then_:t -> else_:t -> t
)
ident(
  int_ref if "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  cond:t -> then_:t -> else_:t -> t
)
type(
  cond:t -> then_:t -> else_:t -> t
)
type(
  then_:t -> else_:t -> t
)
type(
  else_:t -> t
)
type(
  t.If
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  cond:t -> then_:t -> else_:t -> t
)
ident(
  def if "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t
)
ident(
  int_ref false "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def false "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t
)
ident(
  int_ref true "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def true "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  binop:binop -> left:t -> right:t -> t
)
ident(
  int_ref binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop:binop -> left:t -> right:t -> t
)
type(
  binop:binop -> left:t -> right:t -> t
)
type(
  left:t -> right:t -> t
)
type(
  right:t -> t
)
type(
  t.Binop
)
type(
  t
)
ident(
  int_ref v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  int_ref v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  t
)
ident(
  def v2 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
ident(
  def v1 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  binop:binop -> left:t -> right:t -> t
)
ident(
  def binop "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  int -> t
)
ident(
  int_ref num "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int -> t
)
type(
  int -> t
)
type(
  int
)
ident(
  int_ref v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  t
)
type(
  int
)
ident(
  def v0 "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
type(
  int -> t
)
ident(
  def num "src/ast.ml" 53 1403 1405 "src/ast.ml" 147 4848 4851
)
type(
  t -> unit
)
type(
  unit
)
type(
  t
)
type(
  t -> unit
)
"src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
type(
  t -> variable
)
ident(
  def to_string "src/ast.ml" 86 2355 2357 "src/ast.ml" 147 4848 4851
)
"src/ast.ml" 86 2355 2375 "src/ast.ml" 86 2355 2376
type(
  t
)
ident(
  def e "src/ast.ml" 87 2379 2383 "src/ast.ml" 143 4736 4784
)
"src/ast.ml" 87 2379 2389 "src/ast.ml" 87 2379 2390
type(
  t
)
ident(
  int_ref e "src/ast.ml" 86 2355 2375 "src/ast.ml" 86 2355 2376
)
"src/ast.ml" 88 2396 2406 "src/ast.ml" 88 2396 2407
type(
  int
)
ident(
  def n "src/ast.ml" 88 2396 2411 "src/ast.ml" 88 2396 2426
)
"src/ast.ml" 88 2396 2402 "src/ast.ml" 88 2396 2407
type(
  t
)
"src/ast.ml" 88 2396 2411 "src/ast.ml" 88 2396 2424
type(
  int -> variable
)
ident(
  int_ref Core.string_of_int "src/core_pervasives.mli" 580 21900 21900 "src/core_pervasives.mli" 580 21900 21933
)
"src/ast.ml" 88 2396 2425 "src/ast.ml" 88 2396 2426
type(
  int
)
ident(
  int_ref n "src/ast.ml" 88 2396 2406 "src/ast.ml" 88 2396 2407
)
"src/ast.ml" 88 2396 2411 "src/ast.ml" 88 2396 2426
call(
  tail
)
type(
  variable
)
"src/ast.ml" 89 2427 2440 "src/ast.ml" 89 2427 2445
type(
  binop
)
ident(
  def binop "src/ast.ml" 90 2463 2469 "src/ast.ml" 93 2566 2639
)
"src/ast.ml" 89 2427 2447 "src/ast.ml" 89 2427 2451
type(
  t
)
ident(
  def left "src/ast.ml" 90 2463 2469 "src/ast.ml" 93 2566 2639
)
"src/ast.ml" 89 2427 2453 "src/ast.ml" 89 2427 2458
type(
  t
)
ident(
  def right "src/ast.ml" 90 2463 2469 "src/ast.ml" 93 2566 2639
)
"src/ast.ml" 89 2427 2439 "src/ast.ml" 89 2427 2459
type(
  t.Binop
)
"src/ast.ml" 89 2427 2433 "src/ast.ml" 89 2427 2459
type(
  t
)
"src/ast.ml" 90 2463 2473 "src/ast.ml" 90 2463 2477
type(
  variable
)
ident(
  def bstr "src/ast.ml" 93 2566 2572 "src/ast.ml" 93 2566 2639
)
"src/ast.ml" 90 2463 2486 "src/ast.ml" 90 2463 2491
type(
  binop
)
ident(
  int_ref binop "src/ast.ml" 89 2427 2440 "src/ast.ml" 89 2427 2445
)
"src/ast.ml" 91 2497 2507 "src/ast.ml" 91 2497 2510
type(
  binop
)
"src/ast.ml" 91 2497 2514 "src/ast.ml" 91 2497 2517
type(
  variable
)
"src/ast.ml" 91 2497 2520 "src/ast.ml" 91 2497 2523
type(
  binop
)
"src/ast.ml" 91 2497 2527 "src/ast.ml" 91 2497 2530
type(
  variable
)
"src/ast.ml" 91 2497 2533 "src/ast.ml" 91 2497 2536
type(
  binop
)
"src/ast.ml" 91 2497 2540 "src/ast.ml" 91 2497 2543
type(
  variable
)
"src/ast.ml" 91 2497 2546 "src/ast.ml" 91 2497 2549
type(
  binop
)
"src/ast.ml" 91 2497 2553 "src/ast.ml" 91 2497 2556
type(
  variable
)
"src/ast.ml" 90 2463 2480 "src/ast.ml" 91 2497 2556
type(
  variable
)
"src/ast.ml" 93 2566 2572 "src/ast.ml" 93 2566 2586
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 93 2566 2587 "src/ast.ml" 93 2566 2599
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 93 2566 2601 "src/ast.ml" 93 2566 2610
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 93 2566 2611 "src/ast.ml" 93 2566 2615
type(
  t
)
ident(
  int_ref left "src/ast.ml" 89 2427 2447 "src/ast.ml" 89 2427 2451
)
"src/ast.ml" 93 2566 2600 "src/ast.ml" 93 2566 2616
call(
  stack
)
type(
  variable
)
"src/ast.ml" 93 2566 2617 "src/ast.ml" 93 2566 2621
type(
  variable
)
ident(
  int_ref bstr "src/ast.ml" 90 2463 2473 "src/ast.ml" 90 2463 2477
)
"src/ast.ml" 93 2566 2623 "src/ast.ml" 93 2566 2632
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 93 2566 2633 "src/ast.ml" 93 2566 2638
type(
  t
)
ident(
  int_ref right "src/ast.ml" 89 2427 2453 "src/ast.ml" 89 2427 2458
)
"src/ast.ml" 93 2566 2622 "src/ast.ml" 93 2566 2639
call(
  stack
)
type(
  variable
)
"src/ast.ml" 93 2566 2572 "src/ast.ml" 93 2566 2639
call(
  tail
)
type(
  variable
)
"src/ast.ml" 90 2463 2469 "src/ast.ml" 93 2566 2639
type(
  variable
)
"src/ast.ml" 94 2640 2653 "src/ast.ml" 94 2640 2658
type(
  relop
)
ident(
  def relop "src/ast.ml" 95 2676 2682 "src/ast.ml" 98 2763 2836
)
"src/ast.ml" 94 2640 2660 "src/ast.ml" 94 2640 2664
type(
  t
)
ident(
  def left "src/ast.ml" 95 2676 2682 "src/ast.ml" 98 2763 2836
)
"src/ast.ml" 94 2640 2666 "src/ast.ml" 94 2640 2671
type(
  t
)
ident(
  def right "src/ast.ml" 95 2676 2682 "src/ast.ml" 98 2763 2836
)
"src/ast.ml" 94 2640 2652 "src/ast.ml" 94 2640 2672
type(
  t.Relop
)
"src/ast.ml" 94 2640 2646 "src/ast.ml" 94 2640 2672
type(
  t
)
"src/ast.ml" 95 2676 2686 "src/ast.ml" 95 2676 2690
type(
  variable
)
ident(
  def rstr "src/ast.ml" 98 2763 2769 "src/ast.ml" 98 2763 2836
)
"src/ast.ml" 95 2676 2699 "src/ast.ml" 95 2676 2704
type(
  relop
)
ident(
  int_ref relop "src/ast.ml" 94 2640 2653 "src/ast.ml" 94 2640 2658
)
"src/ast.ml" 96 2710 2720 "src/ast.ml" 96 2710 2722
type(
  relop
)
"src/ast.ml" 96 2710 2726 "src/ast.ml" 96 2710 2729
type(
  variable
)
"src/ast.ml" 96 2710 2732 "src/ast.ml" 96 2710 2734
type(
  relop
)
"src/ast.ml" 96 2710 2738 "src/ast.ml" 96 2710 2741
type(
  variable
)
"src/ast.ml" 96 2710 2744 "src/ast.ml" 96 2710 2746
type(
  relop
)
"src/ast.ml" 96 2710 2750 "src/ast.ml" 96 2710 2753
type(
  variable
)
"src/ast.ml" 95 2676 2693 "src/ast.ml" 96 2710 2753
type(
  variable
)
"src/ast.ml" 98 2763 2769 "src/ast.ml" 98 2763 2783
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 98 2763 2784 "src/ast.ml" 98 2763 2796
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 98 2763 2798 "src/ast.ml" 98 2763 2807
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 98 2763 2808 "src/ast.ml" 98 2763 2812
type(
  t
)
ident(
  int_ref left "src/ast.ml" 94 2640 2660 "src/ast.ml" 94 2640 2664
)
"src/ast.ml" 98 2763 2797 "src/ast.ml" 98 2763 2813
call(
  stack
)
type(
  variable
)
"src/ast.ml" 98 2763 2814 "src/ast.ml" 98 2763 2818
type(
  variable
)
ident(
  int_ref rstr "src/ast.ml" 95 2676 2686 "src/ast.ml" 95 2676 2690
)
"src/ast.ml" 98 2763 2820 "src/ast.ml" 98 2763 2829
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 98 2763 2830 "src/ast.ml" 98 2763 2835
type(
  t
)
ident(
  int_ref right "src/ast.ml" 94 2640 2666 "src/ast.ml" 94 2640 2671
)
"src/ast.ml" 98 2763 2819 "src/ast.ml" 98 2763 2836
call(
  stack
)
type(
  variable
)
"src/ast.ml" 98 2763 2769 "src/ast.ml" 98 2763 2836
call(
  tail
)
type(
  variable
)
"src/ast.ml" 95 2676 2682 "src/ast.ml" 98 2763 2836
type(
  variable
)
"src/ast.ml" 99 2837 2843 "src/ast.ml" 99 2837 2847
type(
  t
)
"src/ast.ml" 99 2837 2851 "src/ast.ml" 99 2837 2857
type(
  variable
)
"src/ast.ml" 100 2858 2864 "src/ast.ml" 100 2858 2869
type(
  t
)
"src/ast.ml" 100 2858 2873 "src/ast.ml" 100 2858 2880
type(
  variable
)
"src/ast.ml" 101 2881 2891 "src/ast.ml" 101 2881 2895
type(
  t
)
ident(
  def cond "src/ast.ml" 102 2914 2920 "src/ast.ml" 103 2961 3021
)
"src/ast.ml" 101 2881 2897 "src/ast.ml" 101 2881 2902
type(
  t
)
ident(
  def then_ "src/ast.ml" 102 2914 2920 "src/ast.ml" 103 2961 3021
)
"src/ast.ml" 101 2881 2904 "src/ast.ml" 101 2881 2909
type(
  t
)
ident(
  def else_ "src/ast.ml" 102 2914 2920 "src/ast.ml" 103 2961 3021
)
"src/ast.ml" 101 2881 2890 "src/ast.ml" 101 2881 2910
type(
  t.If
)
"src/ast.ml" 101 2881 2887 "src/ast.ml" 101 2881 2910
type(
  t
)
"src/ast.ml" 102 2914 2920 "src/ast.ml" 102 2914 2934
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 102 2914 2935 "src/ast.ml" 102 2914 2960
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 103 2961 2970 "src/ast.ml" 103 2961 2979
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 103 2961 2980 "src/ast.ml" 103 2961 2984
type(
  t
)
ident(
  int_ref cond "src/ast.ml" 101 2881 2891 "src/ast.ml" 101 2881 2895
)
"src/ast.ml" 103 2961 2969 "src/ast.ml" 103 2961 2985
call(
  stack
)
type(
  variable
)
"src/ast.ml" 103 2961 2987 "src/ast.ml" 103 2961 2996
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 103 2961 2997 "src/ast.ml" 103 2961 3002
type(
  t
)
ident(
  int_ref then_ "src/ast.ml" 101 2881 2897 "src/ast.ml" 101 2881 2902
)
"src/ast.ml" 103 2961 2986 "src/ast.ml" 103 2961 3003
call(
  stack
)
type(
  variable
)
"src/ast.ml" 103 2961 3005 "src/ast.ml" 103 2961 3014
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 103 2961 3015 "src/ast.ml" 103 2961 3020
type(
  t
)
ident(
  int_ref else_ "src/ast.ml" 101 2881 2904 "src/ast.ml" 101 2881 2909
)
"src/ast.ml" 103 2961 3004 "src/ast.ml" 103 2961 3021
call(
  stack
)
type(
  variable
)
"src/ast.ml" 102 2914 2920 "src/ast.ml" 103 2961 3021
call(
  tail
)
type(
  variable
)
"src/ast.ml" 104 3022 3033 "src/ast.ml" 104 3022 3037
type(
  t
)
ident(
  def left "src/ast.ml" 105 3049 3055 "src/ast.ml" 105 3049 3117
)
"src/ast.ml" 104 3022 3039 "src/ast.ml" 104 3022 3044
type(
  t
)
ident(
  def right "src/ast.ml" 105 3049 3055 "src/ast.ml" 105 3049 3117
)
"src/ast.ml" 104 3022 3032 "src/ast.ml" 104 3022 3045
type(
  t.And
)
"src/ast.ml" 104 3022 3028 "src/ast.ml" 104 3022 3045
type(
  t
)
"src/ast.ml" 105 3049 3055 "src/ast.ml" 105 3049 3069
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 105 3049 3070 "src/ast.ml" 105 3049 3082
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 105 3049 3084 "src/ast.ml" 105 3049 3093
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 105 3049 3094 "src/ast.ml" 105 3049 3098
type(
  t
)
ident(
  int_ref left "src/ast.ml" 104 3022 3033 "src/ast.ml" 104 3022 3037
)
"src/ast.ml" 105 3049 3083 "src/ast.ml" 105 3049 3099
call(
  stack
)
type(
  variable
)
"src/ast.ml" 105 3049 3101 "src/ast.ml" 105 3049 3110
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 105 3049 3111 "src/ast.ml" 105 3049 3116
type(
  t
)
ident(
  int_ref right "src/ast.ml" 104 3022 3039 "src/ast.ml" 104 3022 3044
)
"src/ast.ml" 105 3049 3100 "src/ast.ml" 105 3049 3117
call(
  stack
)
type(
  variable
)
"src/ast.ml" 105 3049 3055 "src/ast.ml" 105 3049 3117
call(
  tail
)
type(
  variable
)
"src/ast.ml" 106 3118 3128 "src/ast.ml" 106 3118 3132
type(
  t
)
ident(
  def left "src/ast.ml" 107 3144 3150 "src/ast.ml" 107 3144 3212
)
"src/ast.ml" 106 3118 3134 "src/ast.ml" 106 3118 3139
type(
  t
)
ident(
  def right "src/ast.ml" 107 3144 3150 "src/ast.ml" 107 3144 3212
)
"src/ast.ml" 106 3118 3127 "src/ast.ml" 106 3118 3140
type(
  t.Or
)
"src/ast.ml" 106 3118 3124 "src/ast.ml" 106 3118 3140
type(
  t
)
"src/ast.ml" 107 3144 3150 "src/ast.ml" 107 3144 3164
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 107 3144 3165 "src/ast.ml" 107 3144 3177
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 107 3144 3179 "src/ast.ml" 107 3144 3188
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 107 3144 3189 "src/ast.ml" 107 3144 3193
type(
  t
)
ident(
  int_ref left "src/ast.ml" 106 3118 3128 "src/ast.ml" 106 3118 3132
)
"src/ast.ml" 107 3144 3178 "src/ast.ml" 107 3144 3194
call(
  stack
)
type(
  variable
)
"src/ast.ml" 107 3144 3196 "src/ast.ml" 107 3144 3205
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 107 3144 3206 "src/ast.ml" 107 3144 3211
type(
  t
)
ident(
  int_ref right "src/ast.ml" 106 3118 3134 "src/ast.ml" 106 3118 3139
)
"src/ast.ml" 107 3144 3195 "src/ast.ml" 107 3144 3212
call(
  stack
)
type(
  variable
)
"src/ast.ml" 107 3144 3150 "src/ast.ml" 107 3144 3212
call(
  tail
)
type(
  variable
)
"src/ast.ml" 108 3213 3223 "src/ast.ml" 108 3213 3224
type(
  variable
)
ident(
  def x "src/ast.ml" 108 3213 3228 "src/ast.ml" 108 3213 3229
)
"src/ast.ml" 108 3213 3219 "src/ast.ml" 108 3213 3224
type(
  t
)
"src/ast.ml" 108 3213 3228 "src/ast.ml" 108 3213 3229
type(
  variable
)
ident(
  int_ref x "src/ast.ml" 108 3213 3223 "src/ast.ml" 108 3213 3224
)
"src/ast.ml" 109 3230 3241 "src/ast.ml" 109 3230 3242
type(
  variable
)
ident(
  def x "src/ast.ml" 110 3255 3261 "src/ast.ml" 111 3300 3344
)
"src/ast.ml" 109 3230 3244 "src/ast.ml" 109 3230 3247
type(
  Type.t
)
ident(
  def tau "src/ast.ml" 110 3255 3261 "src/ast.ml" 111 3300 3344
)
"src/ast.ml" 109 3230 3249 "src/ast.ml" 109 3230 3250
type(
  t
)
ident(
  def e "src/ast.ml" 110 3255 3261 "src/ast.ml" 111 3300 3344
)
"src/ast.ml" 109 3230 3240 "src/ast.ml" 109 3230 3251
type(
  t.Lam
)
"src/ast.ml" 109 3230 3236 "src/ast.ml" 109 3230 3251
type(
  t
)
"src/ast.ml" 110 3255 3261 "src/ast.ml" 110 3255 3275
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 110 3255 3276 "src/ast.ml" 110 3255 3299
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 111 3300 3308 "src/ast.ml" 111 3300 3309
type(
  variable
)
ident(
  int_ref x "src/ast.ml" 109 3230 3241 "src/ast.ml" 109 3230 3242
)
"src/ast.ml" 111 3300 3311 "src/ast.ml" 111 3300 3325
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 111 3300 3326 "src/ast.ml" 111 3300 3329
type(
  Type.t
)
ident(
  int_ref tau "src/ast.ml" 109 3230 3244 "src/ast.ml" 109 3230 3247
)
"src/ast.ml" 111 3300 3310 "src/ast.ml" 111 3300 3330
call(
  stack
)
type(
  variable
)
"src/ast.ml" 111 3300 3332 "src/ast.ml" 111 3300 3341
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 111 3300 3342 "src/ast.ml" 111 3300 3343
type(
  t
)
ident(
  int_ref e "src/ast.ml" 109 3230 3249 "src/ast.ml" 109 3230 3250
)
"src/ast.ml" 111 3300 3331 "src/ast.ml" 111 3300 3344
call(
  stack
)
type(
  variable
)
"src/ast.ml" 110 3255 3261 "src/ast.ml" 111 3300 3344
call(
  tail
)
type(
  variable
)
"src/ast.ml" 112 3345 3356 "src/ast.ml" 112 3345 3359
type(
  t
)
ident(
  def lam "src/ast.ml" 113 3369 3375 "src/ast.ml" 113 3369 3431
)
"src/ast.ml" 112 3345 3361 "src/ast.ml" 112 3345 3364
type(
  t
)
ident(
  def arg "src/ast.ml" 113 3369 3375 "src/ast.ml" 113 3369 3431
)
"src/ast.ml" 112 3345 3355 "src/ast.ml" 112 3345 3365
type(
  t.App
)
"src/ast.ml" 112 3345 3351 "src/ast.ml" 112 3345 3365
type(
  t
)
"src/ast.ml" 113 3369 3375 "src/ast.ml" 113 3369 3389
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 113 3369 3390 "src/ast.ml" 113 3369 3399
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 113 3369 3401 "src/ast.ml" 113 3369 3410
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 113 3369 3411 "src/ast.ml" 113 3369 3414
type(
  t
)
ident(
  int_ref lam "src/ast.ml" 112 3345 3356 "src/ast.ml" 112 3345 3359
)
"src/ast.ml" 113 3369 3400 "src/ast.ml" 113 3369 3415
call(
  stack
)
type(
  variable
)
"src/ast.ml" 113 3369 3417 "src/ast.ml" 113 3369 3426
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 113 3369 3427 "src/ast.ml" 113 3369 3430
type(
  t
)
ident(
  int_ref arg "src/ast.ml" 112 3345 3361 "src/ast.ml" 112 3345 3364
)
"src/ast.ml" 113 3369 3416 "src/ast.ml" 113 3369 3431
call(
  stack
)
type(
  variable
)
"src/ast.ml" 113 3369 3375 "src/ast.ml" 113 3369 3431
call(
  tail
)
type(
  variable
)
"src/ast.ml" 114 3432 3438 "src/ast.ml" 114 3432 3442
type(
  t
)
"src/ast.ml" 114 3432 3446 "src/ast.ml" 114 3432 3450
type(
  variable
)
"src/ast.ml" 115 3451 3463 "src/ast.ml" 115 3451 3467
type(
  t
)
ident(
  def left "src/ast.ml" 116 3479 3485 "src/ast.ml" 116 3479 3545
)
"src/ast.ml" 115 3451 3469 "src/ast.ml" 115 3451 3474
type(
  t
)
ident(
  def right "src/ast.ml" 116 3479 3485 "src/ast.ml" 116 3479 3545
)
"src/ast.ml" 115 3451 3462 "src/ast.ml" 115 3451 3475
type(
  t.Pair
)
"src/ast.ml" 115 3451 3457 "src/ast.ml" 115 3451 3475
type(
  t
)
"src/ast.ml" 116 3479 3485 "src/ast.ml" 116 3479 3499
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 116 3479 3500 "src/ast.ml" 116 3479 3510
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 116 3479 3512 "src/ast.ml" 116 3479 3521
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 116 3479 3522 "src/ast.ml" 116 3479 3526
type(
  t
)
ident(
  int_ref left "src/ast.ml" 115 3451 3463 "src/ast.ml" 115 3451 3467
)
"src/ast.ml" 116 3479 3511 "src/ast.ml" 116 3479 3527
call(
  stack
)
type(
  variable
)
"src/ast.ml" 116 3479 3529 "src/ast.ml" 116 3479 3538
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 116 3479 3539 "src/ast.ml" 116 3479 3544
type(
  t
)
ident(
  int_ref right "src/ast.ml" 115 3451 3469 "src/ast.ml" 115 3451 3474
)
"src/ast.ml" 116 3479 3528 "src/ast.ml" 116 3479 3545
call(
  stack
)
type(
  variable
)
"src/ast.ml" 116 3479 3485 "src/ast.ml" 116 3479 3545
call(
  tail
)
type(
  variable
)
"src/ast.ml" 117 3546 3561 "src/ast.ml" 117 3546 3562
type(
  t
)
ident(
  def e "src/ast.ml" 118 3570 3576 "src/ast.ml" 119 3630 3677
)
"src/ast.ml" 117 3546 3564 "src/ast.ml" 117 3546 3565
type(
  direction
)
ident(
  def d "src/ast.ml" 118 3570 3576 "src/ast.ml" 119 3630 3677
)
"src/ast.ml" 117 3546 3560 "src/ast.ml" 117 3546 3566
type(
  t.Project
)
"src/ast.ml" 117 3546 3552 "src/ast.ml" 117 3546 3566
type(
  t
)
"src/ast.ml" 118 3570 3580 "src/ast.ml" 118 3570 3584
type(
  variable
)
ident(
  def dstr "src/ast.ml" 119 3630 3636 "src/ast.ml" 119 3630 3677
)
"src/ast.ml" 118 3570 3593 "src/ast.ml" 118 3570 3594
type(
  direction
)
ident(
  int_ref d "src/ast.ml" 117 3546 3564 "src/ast.ml" 117 3546 3565
)
"src/ast.ml" 118 3570 3600 "src/ast.ml" 118 3570 3604
type(
  direction
)
"src/ast.ml" 118 3570 3608 "src/ast.ml" 118 3570 3611
type(
  variable
)
"src/ast.ml" 118 3570 3614 "src/ast.ml" 118 3570 3619
type(
  direction
)
"src/ast.ml" 118 3570 3623 "src/ast.ml" 118 3570 3626
type(
  variable
)
"src/ast.ml" 118 3570 3587 "src/ast.ml" 118 3570 3626
type(
  variable
)
"src/ast.ml" 119 3630 3636 "src/ast.ml" 119 3630 3650
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 119 3630 3651 "src/ast.ml" 119 3630 3658
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 119 3630 3660 "src/ast.ml" 119 3630 3669
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 119 3630 3670 "src/ast.ml" 119 3630 3671
type(
  t
)
ident(
  int_ref e "src/ast.ml" 117 3546 3561 "src/ast.ml" 117 3546 3562
)
"src/ast.ml" 119 3630 3659 "src/ast.ml" 119 3630 3672
call(
  stack
)
type(
  variable
)
"src/ast.ml" 119 3630 3673 "src/ast.ml" 119 3630 3677
type(
  variable
)
ident(
  int_ref dstr "src/ast.ml" 118 3570 3580 "src/ast.ml" 118 3570 3584
)
"src/ast.ml" 119 3630 3636 "src/ast.ml" 119 3630 3677
call(
  tail
)
type(
  variable
)
"src/ast.ml" 118 3570 3576 "src/ast.ml" 119 3630 3677
type(
  variable
)
"src/ast.ml" 120 3678 3692 "src/ast.ml" 120 3678 3693
type(
  t
)
ident(
  def e "src/ast.ml" 121 3706 3712 "src/ast.ml" 123 3809 3856
)
"src/ast.ml" 120 3678 3695 "src/ast.ml" 120 3678 3696
type(
  direction
)
ident(
  def d "src/ast.ml" 121 3706 3712 "src/ast.ml" 123 3809 3856
)
"src/ast.ml" 120 3678 3698 "src/ast.ml" 120 3678 3701
type(
  Type.t
)
ident(
  def tau "src/ast.ml" 121 3706 3712 "src/ast.ml" 123 3809 3856
)
"src/ast.ml" 120 3678 3691 "src/ast.ml" 120 3678 3702
type(
  t.Inject
)
"src/ast.ml" 120 3678 3684 "src/ast.ml" 120 3678 3702
type(
  t
)
"src/ast.ml" 121 3706 3716 "src/ast.ml" 121 3706 3720
type(
  variable
)
ident(
  def dstr "src/ast.ml" 122 3766 3772 "src/ast.ml" 123 3809 3856
)
"src/ast.ml" 121 3706 3729 "src/ast.ml" 121 3706 3730
type(
  direction
)
ident(
  int_ref d "src/ast.ml" 120 3678 3695 "src/ast.ml" 120 3678 3696
)
"src/ast.ml" 121 3706 3736 "src/ast.ml" 121 3706 3740
type(
  direction
)
"src/ast.ml" 121 3706 3744 "src/ast.ml" 121 3706 3747
type(
  variable
)
"src/ast.ml" 121 3706 3750 "src/ast.ml" 121 3706 3755
type(
  direction
)
"src/ast.ml" 121 3706 3759 "src/ast.ml" 121 3706 3762
type(
  variable
)
"src/ast.ml" 121 3706 3723 "src/ast.ml" 121 3706 3762
type(
  variable
)
"src/ast.ml" 122 3766 3772 "src/ast.ml" 122 3766 3786
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 122 3766 3787 "src/ast.ml" 122 3766 3808
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 123 3809 3818 "src/ast.ml" 123 3809 3827
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 123 3809 3828 "src/ast.ml" 123 3809 3829
type(
  t
)
ident(
  int_ref e "src/ast.ml" 120 3678 3692 "src/ast.ml" 120 3678 3693
)
"src/ast.ml" 123 3809 3817 "src/ast.ml" 123 3809 3830
call(
  stack
)
type(
  variable
)
"src/ast.ml" 123 3809 3831 "src/ast.ml" 123 3809 3835
type(
  variable
)
ident(
  int_ref dstr "src/ast.ml" 121 3706 3716 "src/ast.ml" 121 3706 3720
)
"src/ast.ml" 123 3809 3837 "src/ast.ml" 123 3809 3851
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 123 3809 3852 "src/ast.ml" 123 3809 3855
type(
  Type.t
)
ident(
  int_ref tau "src/ast.ml" 120 3678 3698 "src/ast.ml" 120 3678 3701
)
"src/ast.ml" 123 3809 3836 "src/ast.ml" 123 3809 3856
call(
  stack
)
type(
  variable
)
"src/ast.ml" 122 3766 3772 "src/ast.ml" 123 3809 3856
call(
  tail
)
type(
  variable
)
"src/ast.ml" 121 3706 3712 "src/ast.ml" 123 3809 3856
type(
  variable
)
"src/ast.ml" 124 3857 3869 "src/ast.ml" 124 3857 3870
type(
  t
)
ident(
  def e "src/ast.ml" 125 3905 3911 "src/ast.ml" 126 3965 4036
)
"src/ast.ml" 124 3857 3872 "src/ast.ml" 124 3857 3877
type(
  variable
)
ident(
  def xleft "src/ast.ml" 125 3905 3911 "src/ast.ml" 126 3965 4036
)
"src/ast.ml" 124 3857 3879 "src/ast.ml" 124 3857 3884
type(
  t
)
ident(
  def eleft "src/ast.ml" 125 3905 3911 "src/ast.ml" 126 3965 4036
)
"src/ast.ml" 124 3857 3886 "src/ast.ml" 124 3857 3892
type(
  variable
)
ident(
  def xright "src/ast.ml" 125 3905 3911 "src/ast.ml" 126 3965 4036
)
"src/ast.ml" 124 3857 3894 "src/ast.ml" 124 3857 3900
type(
  t
)
ident(
  def eright "src/ast.ml" 125 3905 3911 "src/ast.ml" 126 3965 4036
)
"src/ast.ml" 124 3857 3868 "src/ast.ml" 124 3857 3901
type(
  t.Case
)
"src/ast.ml" 124 3857 3863 "src/ast.ml" 124 3857 3901
type(
  t
)
"src/ast.ml" 125 3905 3911 "src/ast.ml" 125 3905 3925
type(
  (variable -> variable -> variable -> variable -> variable -> variable,
   unit, variable)
  Base.format ->
  variable -> variable -> variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 125 3905 3926 "src/ast.ml" 125 3905 3964
type(
  (variable -> variable -> variable -> variable -> variable -> variable,
   unit, variable)
  Base.format
)
"src/ast.ml" 126 3965 3974 "src/ast.ml" 126 3965 3983
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 126 3965 3984 "src/ast.ml" 126 3965 3985
type(
  t
)
ident(
  int_ref e "src/ast.ml" 124 3857 3869 "src/ast.ml" 124 3857 3870
)
"src/ast.ml" 126 3965 3973 "src/ast.ml" 126 3965 3986
call(
  stack
)
type(
  variable
)
"src/ast.ml" 126 3965 3987 "src/ast.ml" 126 3965 3992
type(
  variable
)
ident(
  int_ref xleft "src/ast.ml" 124 3857 3872 "src/ast.ml" 124 3857 3877
)
"src/ast.ml" 126 3965 3994 "src/ast.ml" 126 3965 4003
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 126 3965 4004 "src/ast.ml" 126 3965 4009
type(
  t
)
ident(
  int_ref eleft "src/ast.ml" 124 3857 3879 "src/ast.ml" 124 3857 3884
)
"src/ast.ml" 126 3965 3993 "src/ast.ml" 126 3965 4010
call(
  stack
)
type(
  variable
)
"src/ast.ml" 126 3965 4011 "src/ast.ml" 126 3965 4017
type(
  variable
)
ident(
  int_ref xright "src/ast.ml" 124 3857 3886 "src/ast.ml" 124 3857 3892
)
"src/ast.ml" 126 3965 4019 "src/ast.ml" 126 3965 4028
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 126 3965 4029 "src/ast.ml" 126 3965 4035
type(
  t
)
ident(
  int_ref eright "src/ast.ml" 124 3857 3894 "src/ast.ml" 124 3857 3900
)
"src/ast.ml" 126 3965 4018 "src/ast.ml" 126 3965 4036
call(
  stack
)
type(
  variable
)
"src/ast.ml" 125 3905 3911 "src/ast.ml" 126 3965 4036
call(
  tail
)
type(
  variable
)
"src/ast.ml" 127 4037 4048 "src/ast.ml" 127 4037 4049
type(
  variable
)
ident(
  def x "src/ast.ml" 128 4062 4068 "src/ast.ml" 129 4107 4151
)
"src/ast.ml" 127 4037 4051 "src/ast.ml" 127 4037 4054
type(
  Type.t
)
ident(
  def tau "src/ast.ml" 128 4062 4068 "src/ast.ml" 129 4107 4151
)
"src/ast.ml" 127 4037 4056 "src/ast.ml" 127 4037 4057
type(
  t
)
ident(
  def e "src/ast.ml" 128 4062 4068 "src/ast.ml" 129 4107 4151
)
"src/ast.ml" 127 4037 4047 "src/ast.ml" 127 4037 4058
type(
  t.Fix
)
"src/ast.ml" 127 4037 4043 "src/ast.ml" 127 4037 4058
type(
  t
)
"src/ast.ml" 128 4062 4068 "src/ast.ml" 128 4062 4082
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 128 4062 4083 "src/ast.ml" 128 4062 4106
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 129 4107 4115 "src/ast.ml" 129 4107 4116
type(
  variable
)
ident(
  int_ref x "src/ast.ml" 127 4037 4048 "src/ast.ml" 127 4037 4049
)
"src/ast.ml" 129 4107 4118 "src/ast.ml" 129 4107 4132
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 129 4107 4133 "src/ast.ml" 129 4107 4136
type(
  Type.t
)
ident(
  int_ref tau "src/ast.ml" 127 4037 4051 "src/ast.ml" 127 4037 4054
)
"src/ast.ml" 129 4107 4117 "src/ast.ml" 129 4107 4137
call(
  stack
)
type(
  variable
)
"src/ast.ml" 129 4107 4139 "src/ast.ml" 129 4107 4148
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 129 4107 4149 "src/ast.ml" 129 4107 4150
type(
  t
)
ident(
  int_ref e "src/ast.ml" 127 4037 4056 "src/ast.ml" 127 4037 4057
)
"src/ast.ml" 129 4107 4138 "src/ast.ml" 129 4107 4151
call(
  stack
)
type(
  variable
)
"src/ast.ml" 128 4062 4068 "src/ast.ml" 129 4107 4151
call(
  tail
)
type(
  variable
)
"src/ast.ml" 130 4152 4165 "src/ast.ml" 130 4152 4166
type(
  variable
)
ident(
  def a "src/ast.ml" 131 4174 4180 "src/ast.ml" 131 4174 4226
)
"src/ast.ml" 130 4152 4168 "src/ast.ml" 130 4152 4169
type(
  t
)
ident(
  def e "src/ast.ml" 131 4174 4180 "src/ast.ml" 131 4174 4226
)
"src/ast.ml" 130 4152 4164 "src/ast.ml" 130 4152 4170
type(
  t.TyLam
)
"src/ast.ml" 130 4152 4158 "src/ast.ml" 130 4152 4170
type(
  t
)
"src/ast.ml" 131 4174 4180 "src/ast.ml" 131 4174 4194
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 131 4174 4195 "src/ast.ml" 131 4174 4210
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 131 4174 4211 "src/ast.ml" 131 4174 4212
type(
  variable
)
ident(
  int_ref a "src/ast.ml" 130 4152 4165 "src/ast.ml" 130 4152 4166
)
"src/ast.ml" 131 4174 4214 "src/ast.ml" 131 4174 4223
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 131 4174 4224 "src/ast.ml" 131 4174 4225
type(
  t
)
ident(
  int_ref e "src/ast.ml" 130 4152 4168 "src/ast.ml" 130 4152 4169
)
"src/ast.ml" 131 4174 4213 "src/ast.ml" 131 4174 4226
call(
  stack
)
type(
  variable
)
"src/ast.ml" 131 4174 4180 "src/ast.ml" 131 4174 4226
call(
  tail
)
type(
  variable
)
"src/ast.ml" 132 4227 4240 "src/ast.ml" 132 4227 4241
type(
  t
)
ident(
  def e "src/ast.ml" 133 4251 4257 "src/ast.ml" 133 4251 4318
)
"src/ast.ml" 132 4227 4243 "src/ast.ml" 132 4227 4246
type(
  Type.t
)
ident(
  def tau "src/ast.ml" 133 4251 4257 "src/ast.ml" 133 4251 4318
)
"src/ast.ml" 132 4227 4239 "src/ast.ml" 132 4227 4247
type(
  t.TyApp
)
"src/ast.ml" 132 4227 4233 "src/ast.ml" 132 4227 4247
type(
  t
)
"src/ast.ml" 133 4251 4257 "src/ast.ml" 133 4251 4271
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 133 4251 4272 "src/ast.ml" 133 4251 4283
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 133 4251 4285 "src/ast.ml" 133 4251 4294
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 133 4251 4295 "src/ast.ml" 133 4251 4296
type(
  t
)
ident(
  int_ref e "src/ast.ml" 132 4227 4240 "src/ast.ml" 132 4227 4241
)
"src/ast.ml" 133 4251 4284 "src/ast.ml" 133 4251 4297
call(
  stack
)
type(
  variable
)
"src/ast.ml" 133 4251 4299 "src/ast.ml" 133 4251 4313
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 133 4251 4314 "src/ast.ml" 133 4251 4317
type(
  Type.t
)
ident(
  int_ref tau "src/ast.ml" 132 4227 4243 "src/ast.ml" 132 4227 4246
)
"src/ast.ml" 133 4251 4298 "src/ast.ml" 133 4251 4318
call(
  stack
)
type(
  variable
)
"src/ast.ml" 133 4251 4257 "src/ast.ml" 133 4251 4318
call(
  tail
)
type(
  variable
)
"src/ast.ml" 134 4319 4332 "src/ast.ml" 134 4319 4333
type(
  t
)
ident(
  def e "src/ast.ml" 135 4343 4349 "src/ast.ml" 135 4343 4416
)
"src/ast.ml" 134 4319 4335 "src/ast.ml" 134 4319 4338
type(
  Type.t
)
ident(
  def tau "src/ast.ml" 135 4343 4349 "src/ast.ml" 135 4343 4416
)
"src/ast.ml" 134 4319 4331 "src/ast.ml" 134 4319 4339
type(
  t.Fold_
)
"src/ast.ml" 134 4319 4325 "src/ast.ml" 134 4319 4339
type(
  t
)
"src/ast.ml" 135 4343 4349 "src/ast.ml" 135 4343 4363
type(
  (variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 135 4343 4364 "src/ast.ml" 135 4343 4381
type(
  (variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 135 4343 4383 "src/ast.ml" 135 4343 4392
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 135 4343 4393 "src/ast.ml" 135 4343 4394
type(
  t
)
ident(
  int_ref e "src/ast.ml" 134 4319 4332 "src/ast.ml" 134 4319 4333
)
"src/ast.ml" 135 4343 4382 "src/ast.ml" 135 4343 4395
call(
  stack
)
type(
  variable
)
"src/ast.ml" 135 4343 4397 "src/ast.ml" 135 4343 4411
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 135 4343 4412 "src/ast.ml" 135 4343 4415
type(
  Type.t
)
ident(
  int_ref tau "src/ast.ml" 134 4319 4335 "src/ast.ml" 134 4319 4338
)
"src/ast.ml" 135 4343 4396 "src/ast.ml" 135 4343 4416
call(
  stack
)
type(
  variable
)
"src/ast.ml" 135 4343 4349 "src/ast.ml" 135 4343 4416
call(
  tail
)
type(
  variable
)
"src/ast.ml" 136 4417 4430 "src/ast.ml" 136 4417 4431
type(
  t
)
ident(
  def e "src/ast.ml" 137 4435 4441 "src/ast.ml" 137 4435 4483
)
"src/ast.ml" 136 4417 4423 "src/ast.ml" 136 4417 4431
type(
  t
)
"src/ast.ml" 137 4435 4441 "src/ast.ml" 137 4435 4455
type(
  (variable -> variable, unit, variable) Base.format -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 137 4435 4456 "src/ast.ml" 137 4435 4469
type(
  (variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 137 4435 4471 "src/ast.ml" 137 4435 4480
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 137 4435 4481 "src/ast.ml" 137 4435 4482
type(
  t
)
ident(
  int_ref e "src/ast.ml" 136 4417 4430 "src/ast.ml" 136 4417 4431
)
"src/ast.ml" 137 4435 4470 "src/ast.ml" 137 4435 4483
call(
  stack
)
type(
  variable
)
"src/ast.ml" 137 4435 4441 "src/ast.ml" 137 4435 4483
call(
  tail
)
type(
  variable
)
"src/ast.ml" 138 4484 4498 "src/ast.ml" 138 4484 4499
type(
  t
)
ident(
  def e "src/ast.ml" 139 4522 4528 "src/ast.ml" 140 4574 4645
)
"src/ast.ml" 138 4484 4501 "src/ast.ml" 138 4484 4508
type(
  Type.t
)
ident(
  def tau_adt "src/ast.ml" 139 4522 4528 "src/ast.ml" 140 4574 4645
)
"src/ast.ml" 138 4484 4510 "src/ast.ml" 138 4484 4517
type(
  Type.t
)
ident(
  def tau_mod "src/ast.ml" 139 4522 4528 "src/ast.ml" 140 4574 4645
)
"src/ast.ml" 138 4484 4497 "src/ast.ml" 138 4484 4518
type(
  t.Export
)
"src/ast.ml" 138 4484 4490 "src/ast.ml" 138 4484 4518
type(
  t
)
"src/ast.ml" 139 4522 4528 "src/ast.ml" 139 4522 4542
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format ->
  variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 139 4522 4543 "src/ast.ml" 139 4522 4573
type(
  (variable -> variable -> variable -> variable, unit, variable) Base.format
)
"src/ast.ml" 140 4574 4583 "src/ast.ml" 140 4574 4592
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 140 4574 4593 "src/ast.ml" 140 4574 4594
type(
  t
)
ident(
  int_ref e "src/ast.ml" 138 4484 4498 "src/ast.ml" 138 4484 4499
)
"src/ast.ml" 140 4574 4582 "src/ast.ml" 140 4574 4595
call(
  stack
)
type(
  variable
)
"src/ast.ml" 140 4574 4597 "src/ast.ml" 140 4574 4611
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 140 4574 4612 "src/ast.ml" 140 4574 4619
type(
  Type.t
)
ident(
  int_ref tau_adt "src/ast.ml" 138 4484 4501 "src/ast.ml" 138 4484 4508
)
"src/ast.ml" 140 4574 4596 "src/ast.ml" 140 4574 4620
call(
  stack
)
type(
  variable
)
"src/ast.ml" 140 4574 4622 "src/ast.ml" 140 4574 4636
type(
  Type.t -> variable
)
ident(
  int_ref Type.to_string "src/ast.ml" 20 434 444 "src/ast.ml" 20 434 453
)
"src/ast.ml" 140 4574 4637 "src/ast.ml" 140 4574 4644
type(
  Type.t
)
ident(
  int_ref tau_mod "src/ast.ml" 138 4484 4510 "src/ast.ml" 138 4484 4517
)
"src/ast.ml" 140 4574 4621 "src/ast.ml" 140 4574 4645
call(
  stack
)
type(
  variable
)
"src/ast.ml" 139 4522 4528 "src/ast.ml" 140 4574 4645
call(
  tail
)
type(
  variable
)
"src/ast.ml" 141 4646 4660 "src/ast.ml" 141 4646 4661
type(
  variable
)
ident(
  def x "src/ast.ml" 142 4684 4690 "src/ast.ml" 143 4736 4784
)
"src/ast.ml" 141 4646 4663 "src/ast.ml" 141 4646 4664
type(
  variable
)
ident(
  def a "src/ast.ml" 142 4684 4690 "src/ast.ml" 143 4736 4784
)
"src/ast.ml" 141 4646 4666 "src/ast.ml" 141 4646 4671
type(
  t
)
ident(
  def e_mod "src/ast.ml" 142 4684 4690 "src/ast.ml" 143 4736 4784
)
"src/ast.ml" 141 4646 4673 "src/ast.ml" 141 4646 4679
type(
  t
)
ident(
  def e_body "src/ast.ml" 142 4684 4690 "src/ast.ml" 143 4736 4784
)
"src/ast.ml" 141 4646 4659 "src/ast.ml" 141 4646 4680
type(
  t.Import
)
"src/ast.ml" 141 4646 4652 "src/ast.ml" 141 4646 4680
type(
  t
)
"src/ast.ml" 142 4684 4690 "src/ast.ml" 142 4684 4704
type(
  (variable -> variable -> variable -> variable -> variable, unit, variable)
  Base.format -> variable -> variable -> variable -> variable -> variable
)
ident(
  int_ref Core.Printf.sprintf "src/printf.mli" 7 128 128 "src/printf.mli" 7 128 199
)
"src/ast.ml" 142 4684 4705 "src/ast.ml" 142 4684 4735
type(
  (variable -> variable -> variable -> variable -> variable, unit, variable)
  Base.format
)
"src/ast.ml" 143 4736 4744 "src/ast.ml" 143 4736 4745
type(
  variable
)
ident(
  int_ref x "src/ast.ml" 141 4646 4660 "src/ast.ml" 141 4646 4661
)
"src/ast.ml" 143 4736 4746 "src/ast.ml" 143 4736 4747
type(
  variable
)
ident(
  int_ref a "src/ast.ml" 141 4646 4663 "src/ast.ml" 141 4646 4664
)
"src/ast.ml" 143 4736 4749 "src/ast.ml" 143 4736 4758
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 143 4736 4759 "src/ast.ml" 143 4736 4764
type(
  t
)
ident(
  int_ref e_mod "src/ast.ml" 141 4646 4666 "src/ast.ml" 141 4646 4671
)
"src/ast.ml" 143 4736 4748 "src/ast.ml" 143 4736 4765
call(
  stack
)
type(
  variable
)
"src/ast.ml" 143 4736 4767 "src/ast.ml" 143 4736 4776
type(
  t -> variable
)
ident(
  int_ref to_string "src/ast.ml" 86 2355 2365 "src/ast.ml" 86 2355 2374
)
"src/ast.ml" 143 4736 4777 "src/ast.ml" 143 4736 4783
type(
  t
)
ident(
  int_ref e_body "src/ast.ml" 141 4646 4673 "src/ast.ml" 141 4646 4679
)
"src/ast.ml" 143 4736 4766 "src/ast.ml" 143 4736 4784
call(
  stack
)
type(
  variable
)
"src/ast.ml" 142 4684 4690 "src/ast.ml" 143 4736 4784
call(
  tail
)
type(
  variable
)
"src/ast.ml" 87 2379 2383 "src/ast.ml" 143 4736 4784
type(
  variable
)
"src/ast.ml" 145 4786 4792 "src/ast.ml" 145 4786 4806
type(
  t -> variable
)
ident(
  def to_string_sexp "src/ast.ml" 146 4811 4847 "src/ast.ml" 147 4848 4851
)
"src/ast.ml" 145 4786 4807 "src/ast.ml" 145 4786 4808
type(
  t
)
ident(
  def e "src/ast.ml" 146 4811 4815 "src/ast.ml" 146 4811 4847
)
"src/ast.ml" 146 4811 4815 "src/ast.ml" 146 4811 4833
type(
  ?indent:int -> Sexp.t -> variable
)
ident(
  int_ref Core.Sexp.to_string_hum "src/sexp_intf.ml" 528 20573 20575 "src/sexp_intf.ml" 528 20573 20623
)
"src/ast.ml" 146 4811 4835 "src/ast.ml" 146 4811 4844
type(
  t -> Sexp.t
)
ident(
  int_ref sexp_of_t "src/ast.ml" 53 1403 1405 "src/ast.ml" 84 2306 2353
)
"src/ast.ml" 146 4811 4845 "src/ast.ml" 146 4811 4846
type(
  t
)
ident(
  int_ref e "src/ast.ml" 145 4786 4807 "src/ast.ml" 145 4786 4808
)
"src/ast.ml" 146 4811 4834 "src/ast.ml" 146 4811 4847
call(
  stack
)
type(
  Sexp.t
)
"src/ast.ml" 146 4811 4815 "src/ast.ml" 146 4811 4847
call(
  tail
)
type(
  variable
)
